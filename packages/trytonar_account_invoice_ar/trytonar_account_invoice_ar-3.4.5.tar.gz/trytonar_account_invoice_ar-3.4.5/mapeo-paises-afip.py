#!/usr/bin/env python2
# -*- encoding: utf-8 -*-
#
# this file is part of the cultura-tryton package for tryton.
# the COPYRIGHT file at the top level of this repository
# contains the full copyright notice and license terms.


# Imports
from optparse import OptionParser
from proteus import Model
from proteus import config as pconfig

PAIS_DESTINO = [
    ('101', u'BURKINA FASO'),
    ('102', u'ARGELIA'),
    ('103', u'BOTSWANA'),
    ('104', u'BURUNDI'),
    ('105', u'CAMERUN'),
    ('107', u'REP. CENTROAFRICANA.'),
    ('108', u'CONGO'),
    ('109', u'REP.DEMOCRAT.DEL CONGO EX ZAIRE'),
    ('110', u'COSTA DE MARFIL'),
    ('111', u'CHAD'),
    ('112', u'BENIN'),
    ('113', u'EGIPTO'),
    ('115', u'GABON'),
    ('116', u'GAMBIA'),
    ('117', u'GHANA'),
    ('118', u'GUINEA'),
    ('119', u'GUINEA ECUATORIAL'),
    ('120', u'KENYA'),
    ('121', u'LESOTHO'),
    ('122', u'LIBERIA'),
    ('123', u'LIBIA'),
    ('124', u'MADAGASCAR'),
    ('125', u'MALAWI'),
    ('126', u'MALI'),
    ('127', u'MARRUECOS'),
    ('128', u'MAURICIO,ISLAS'),
    ('129', u'MAURITANIA'),
    ('130', u'NIGER'),
    ('131', u'NIGERIA'),
    ('132', u'ZIMBABWE'),
    ('133', u'RWANDA'),
    ('134', u'SENEGAL'),
    ('135', u'SIERRA LEONA'),
    ('136', u'SOMALIA'),
    ('137', u'SWAZILANDIA'),
    ('138', u'SUDAN'),
    ('139', u'TANZANIA'),
    ('140', u'TOGO'),
    ('141', u'TUNEZ'),
    ('142', u'UGANDA'),
    ('144', u'ZAMBIA'),
    ('145', u'TERRIT.VINCULADOS AL R UNIDO'),
    ('146', u'TERRIT.VINCULADOS A ESPAÑA'),
    ('147', u'TERRIT.VINCULADOS A FRANCIA'),
    ('149', u'ANGOLA'),
    ('150', u'CABO VERDE'),
    ('151', u'MOZAMBIQUE'),
    ('152', u'SEYCHELLES'),
    ('153', u'DJIBOUTI'),
    ('155', u'COMORAS'),
    ('156', u'GUINEA BISSAU'),
    ('157', u'STO.TOME Y PRINCIPE'),
    ('158', u'NAMIBIA'),
    ('159', u'SUDAFRICA'),
    ('160', u'ERITREA'),
    ('161', u'ETIOPIA'),
    ('197', u'RESTO (AFRICA)'),
    ('198', u'INDETERMINADO (AFRICA)'),
    ('200', u'ARGENTINA'),
    ('201', u'BARBADOS'),
    ('202', u'BOLIVIA'),
    ('203', u'BRASIL'),
    ('204', u'CANADA'),
    ('205', u'COLOMBIA'),
    ('206', u'COSTA RICA'),
    ('207', u'CUBA'),
    ('208', u'CHILE'),
    ('209', u'REPÚBLICA DOMINICANA'),
    ('210', u'ECUADOR'),
    ('211', u'EL SALVADOR'),
    ('212', u'ESTADOS UNIDOS'),
    ('213', u'GUATEMALA'),
    ('214', u'GUYANA'),
    ('215', u'HAITI'),
    ('216', u'HONDURAS'),
    ('217', u'JAMAICA'),
    ('218', u'MEXICO'),
    ('219', u'NICARAGUA'),
    ('220', u'PANAMA'),
    ('221', u'PARAGUAY'),
    ('222', u'PERU'),
    ('223', u'PUERTO RICO'),
    ('224', u'TRINIDAD Y TOBAGO'),
    ('225', u'URUGUAY'),
    ('226', u'VENEZUELA'),
    ('227', u'TERRIT.VINCULADO AL R.UNIDO'),
    ('228', u'TER.VINCULADOS A DINAMARCA'),
    ('229', u'TERRIT.VINCULADOS A FRANCIA AMERIC.'),
    ('230', u'TERRIT. HOLANDESES'),
    ('231', u'TER.VINCULADOS A ESTADOS UNIDOS'),
    ('232', u'SURINAME'),
    ('233', u'DOMINICA'),
    ('234', u'SANTA LUCIA'),
    ('235', u'SAN VICENTE Y LAS GRANADINAS'),
    ('236', u'BELICE'),
    ('237', u'ANTIGUA Y BARBUDA'),
    ('238', u'S.CRISTOBAL Y NEVIS'),
    ('239', u'BAHAMAS'),
    ('240', u'GRENADA'),
    ('241', u'ANTILLAS HOLANDESAS'),
    ('250', u'AAE Tierra del Fuego - ARGENTINA'),
    ('251', u'ZF La Plata - ARGENTINA'),
    ('252', u'ZF Justo Daract - ARGENTINA'),
    ('253', u'ZF Río Gallegos - ARGENTINA'),
    ('254', u'Islas Malvinas - ARGENTINA'),
    ('255', u'ZF Tucumán - ARGENTINA'),
    ('256', u'ZF Córdoba - ARGENTINA'),
    ('257', u'ZF Mendoza - ARGENTINA'),
    ('258', u'ZF General Pico - ARGENTINA'),
    ('259', u'ZF Comodoro Rivadavia - ARGENTINA'),
    ('260', u'ZF Iquique'),
    ('261', u'ZF Punta Arenas'),
    ('262', u'ZF Salta - ARGENTINA'),
    ('263', u'ZF Paso de los Libres - ARGENTINA'),
    ('264', u'ZF Puerto Iguazú - ARGENTINA'),
    ('265', u'SECTOR ANTARTICO ARG.'),
    ('270', u'ZF Colón - REPÚBLICA DE PANAMÁ'),
    ('271', u'ZF Winner (Sta. C. de la Sierra) - BOLIVIA'),
    ('280', u'ZF Colonia - URUGUAY'),
    ('281', u'ZF Florida - URUGUAY'),
    ('282', u'ZF Libertad - URUGUAY'),
    ('283', u'ZF Zonamerica - URUGUAY'),
    ('284', u'ZF Nueva Helvecia - URUGUAY'),
    ('285', u'ZF Nueva Palmira - URUGUAY'),
    ('286', u'ZF Río Negro - URUGUAY'),
    ('287', u'ZF Rivera - URUGUAY'),
    ('288', u'ZF San José - URUGUAY'),
    ('291', u'ZF Manaos - BRASIL'),
    ('295', u'MAR ARG ZONA ECO.EX'),
    ('296', u'RIOS ARG NAVEG INTER'),
    ('297', u'RESTO AMERICA'),
    ('298', u'INDETERMINADO (AMERICA)'),
    ('301', u'AFGANISTAN'),
    ('302', u'ARABIA SAUDITA'),
    ('303', u'BAHREIN'),
    ('304', u'MYANMAR (EX-BIRMANIA)'),
    ('305', u'BUTAN'),
    ('306', u'CAMBODYA (EX-KAMPUCHE)'),
    ('307', u'SRI LANKA'),
    ('308', u'COREA DEMOCRATICA'),
    ('309', u'COREA REPUBLICANA'),
    ('310', u'CHINA'),
    ('312', u'FILIPINAS'),
    ('313', u'TAIWAN'),
    ('315', u'INDIA'),
    ('316', u'INDONESIA'),
    ('317', u'IRAK'),
    ('318', u'IRAN'),
    ('319', u'ISRAEL'),
    ('320', u'JAPON'),
    ('321', u'JORDANIA'),
    ('322', u'QATAR'),
    ('323', u'KUWAIT'),
    ('324', u'LAOS'),
    ('325', u'LIBANO'),
    ('326', u'MALASIA'),
    ('327', u'MALDIVAS ISLAS'),
    ('328', u'OMAN'),
    ('329', u'MONGOLIA'),
    ('330', u'NEPAL'),
    ('331', u'EMIRATOS ARABES UNIDOS'),
    ('332', u'PAKISTÁN'),
    ('333', u'SINGAPUR'),
    ('334', u'SIRIA'),
    ('335', u'THAILANDIA'),
    ('337', u'VIETNAM'),
    ('341', u'HONG KONG'),
    ('344', u'MACAO'),
    ('345', u'BANGLADESH'),
    ('346', u'BRUNEI'),
    ('348', u'REPUBLICA DE YEMEN'),
    ('349', u'ARMENIA'),
    ('350', u'AZERBAIJAN'),
    ('351', u'GEORGIA'),
    ('352', u'KAZAJSTAN'),
    ('353', u'KIRGUIZISTAN'),
    ('354', u'TAYIKISTAN'),
    ('355', u'TURKMENISTAN'),
    ('356', u'UZBEKISTAN'),
    ('357', u'TERR. AU. PALESTINOS'),
    ('397', u'RESTO DE ASIA'),
    ('398', u'INDET.(ASIA)'),
    ('401', u'ALBANIA'),
    ('404', u'ANDORRA'),
    ('405', u'AUSTRIA'),
    ('406', u'BELGICA'),
    ('407', u'BULGARIA'),
    ('409', u'DINAMARCA'),
    ('410', u'ESPAÑA'),
    ('411', u'FINLANDIA'),
    ('412', u'FRANCIA'),
    ('413', u'GRECIA'),
    ('414', u'HUNGRIA'),
    ('415', u'IRLANDA'),
    ('416', u'ISLANDIA'),
    ('417', u'ITALIA'),
    ('418', u'LIECHTENSTEIN'),
    ('419', u'LUXEMBURGO'),
    ('420', u'MALTA'),
    ('421', u'MONACO'),
    ('422', u'NORUEGA'),
    ('423', u'PAISES BAJOS'),
    ('424', u'POLONIA'),
    ('425', u'PORTUGAL'),
    ('426', u'REINO UNIDO'),
    ('427', u'RUMANIA'),
    ('428', u'SAN MARINO'),
    ('429', u'SUECIA'),
    ('430', u'SUIZA'),
    ('431', u'VATICANO(SANTA SEDE)'),
    ('433', u'POS.BRIT.(EUROPA)'),
    ('435', u'CHIPRE'),
    ('436', u'TURQUIA'),
    ('438', u'ALEMANIA,REP.FED.'),
    ('439', u'BIELORRUSIA'),
    ('440', u'ESTONIA'),
    ('441', u'LETONIA'),
    ('442', u'LITUANIA'),
    ('443', u'MOLDAVIA'),
    ('444', u'RUSIA'),
    ('445', u'UCRANIA'),
    ('446', u'BOSNIA HERZEGOVINA'),
    ('447', u'CROACIA'),
    ('448', u'ESLOVAQUIA'),
    ('449', u'ESLOVENIA'),
    ('450', u'MACEDONIA'),
    ('451', u'REP. CHECA'),
    ('453', u'MONTENEGRO'),
    ('454', u'SERBIA'),
    ('497', u'RESTO EUROPA'),
    ('498', u'INDET.(EUROPA)'),
    ('501', u'AUSTRALIA'),
    ('503', u'NAURU'),
    ('504', u'NUEVA ZELANDIA'),
    ('505', u'VANATU'),
    ('506', u'SAMOA OCCIDENTAL'),
    ('507', u'TERRITORIO VINCULADOS A AUSTRALIA'),
    ('508', u'TERRITORIOS VINCULADOS AL R. UNIDO'),
    ('509', u'TERRITORIOS VINCULADOS A FRANCIA'),
    ('510', u'TER VINCULADOS A NUEVA. ZELANDA'),
    ('511', u'TER. VINCULADOS A ESTADOS UNIDOS'),
    ('512', u'FIJI, ISLAS'),
    ('513', u'PAPUA NUEVA GUINEA'),
    ('514', u'KIRIBATI, ISLAS'),
    ('515', u'MICRONESIA,EST.FEDER'),
    ('516', u'PALAU'),
    ('517', u'TUVALU'),
    ('518', u'SALOMON,ISLAS'),
    ('519', u'TONGA'),
    ('520', u'MARSHALL,ISLAS'),
    ('521', u'MARIANAS,ISLAS'),
    ('597', u'RESTO OCEANIA'),
    ('598', u'INDET.(OCEANIA)'),
    ('997', u'RESTO CONTINENTE'),
    ('998', u'INDET.(CONTINENTE)'),
]



def main(options):

    config = pconfig.set_trytond(options.database, config_file=options.config_file)

    mapeo_paises(config)
    print "done."

def mapeo_paises(config):
    pais_dst_cmp = {}
    # 'ar': 200, 'bo': 202, 'br': 203, 'ca': 204, 'co': 205,
    Country = Model.get('country.country')
    countries = Country.find([('code', '!=', 'AR')])
    for country in countries:
        for afip_code, afip_name in PAIS_DESTINO:
            if afip_name.lower() == country.name.lower():
                pais_dst_cmp[str(country.code.lower())] = int(afip_code)

    import ipdb; ipdb.set_trace()  # XXX BREAKPOINT


if __name__ == '__main__':
    parser = OptionParser()
    parser.add_option('-d', '--database', dest='database')
    parser.add_option('-c', '--config-file', dest='config_file')
    parser.set_defaults(user='admin')

    options, args = parser.parse_args()
    if args:
        parser.error('Parametros incorrectos')
    if not options.database:
        parser.error('Se debe definir [nombre] de base de datos')
    if not options.config_file:
        parser.error(u'Se debe definir el path absoluto al archivo de configuración de trytond')

    main(options)
