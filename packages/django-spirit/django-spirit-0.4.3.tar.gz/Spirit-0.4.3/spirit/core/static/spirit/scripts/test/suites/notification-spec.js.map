{"version":3,"sources":["notification-spec.coffee"],"names":[],"mappings":"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","file":"notification-spec.js","sourceRoot":"/source/","sourcesContent":["describe \"notification plugin tests\", ->\n  tab = null\n  notification = null\n  Notification = null\n  get = null\n  data = null\n\n  beforeEach ->\n    fixtures = do jasmine.getFixtures\n    fixtures.fixturesPath = 'base/test/fixtures/'\n    loadFixtures 'notification.html'\n\n    get = spyOn $, 'getJSON'\n    get.and.callFake (req) ->\n      d = $.Deferred()\n      d.resolve(data)  # success\n      #d.reject()  # failure\n      return d.promise()\n\n    data =\n      n: [{\n        user: \"username\",\n        action: 1,\n        title: \"title\",\n        url: \"/foobar/\",\n        is_read: true\n      }]\n\n    tab = $.notification {\n      notificationUrl: \"/foo/\",\n      notificationListUrl: \"/foo/list/\",\n      mentionTxt: \"{user} foo you on {topic}\",\n      commentTxt: \"{user} has bar on {topic}\",\n      showAll: \"foo Show all\",\n      empty: \"foo empty\",\n      unread: \"foo unread\"\n    }\n    notification = tab.first().data 'plugin_notification'\n    Notification = $.notification.Notification\n\n  it \"doesnt break selector chaining\", ->\n    expect(tab).toEqual $('.js-tab-notification')\n\n  it \"gets the notifications\", ->\n    expect(get.calls.any()).toEqual false\n\n    tab.first().trigger \"click\"\n    expect(get.calls.any()).toEqual true\n    expect(get.calls.count()).toEqual 1\n    expect(get.calls.argsFor(0)).toEqual ['/foo/']\n\n    # making multiple clicks do nothing\n    tab.first().trigger \"click\"\n    expect(get.calls.count()).toEqual 1\n\n  it \"shows the notifications, mentions\", ->\n    tab.first().trigger \"click\"\n    expect(get.calls.any()).toEqual true\n    expect($(\".js-notifications-content\").html()).toEqual '<div>username foo you on <a href=\"/foobar/\">title</a></div><div><a href=\"/foo/list/\">foo Show all</a></div>'\n\n  it \"shows the notifications, comments\", ->\n    data.n[0].action = 2\n\n    tab.first().trigger \"click\"\n    expect(get.calls.any()).toEqual true\n    expect($(\".js-notifications-content\").html()).toEqual '<div>username has bar on <a href=\"/foobar/\">title</a></div><div><a href=\"/foo/list/\">foo Show all</a></div>'\n\n  it \"shows the notifications, unread\", ->\n    data.n[0].is_read = false\n\n    tab.first().trigger \"click\"\n    expect(get.calls.any()).toEqual true\n    expect($(\".js-notifications-content\").html()).toEqual '<div>username foo you on <a href=\"/foobar/\">title</a> <span class=\"row-unread\">foo unread</span></div><div><a href=\"/foo/list/\">foo Show all</a></div>'\n\n  it \"shows the notifications, error\", ->\n    get.and.callFake (req) ->\n      d = $.Deferred()\n      d.reject(\"foobar\", \"200\", \"foo error\")  # failure\n      return d.promise()\n\n    tab.first().trigger \"click\"\n    expect(get.calls.any()).toEqual true\n    expect($(\".js-notifications-content\").html()).toEqual '<div>Error: 200, foo error</div>'\n\n  it \"shows tab content and is selected on click\", ->\n    expect(tab.first().hasClass \"is-selected\").toEqual false\n    expect($(\".js-notifications-content\").is \":visible\").toEqual false\n\n    tab.first().trigger \"click\"\n    expect(tab.first().hasClass \"is-selected\").toEqual true\n    expect($(\".js-notifications-content\").is \":visible\").toEqual true\n\n  it \"prevents the default click behaviour\", ->\n    event = {type: 'click', stopPropagation: (->), preventDefault: (->)}\n    stopPropagation = spyOn event, 'stopPropagation'\n    preventDefault = spyOn event, 'preventDefault'\n\n    tab.first().trigger event\n    expect(stopPropagation).toHaveBeenCalled()\n    expect(preventDefault).toHaveBeenCalled()"]}