{"version":3,"sources":["store.coffee"],"names":[],"mappings":"AAAA;AAAA,MAAA,UAAA;IAAA;;EAAA,CAAA,GAAI;;EAGE;IAEW,iBAAC,EAAD,EAAK,KAAL;;;;MACT,IAAC,CAAA,EAAD,GAAM,CAAA,CAAE,EAAF;MACN,IAAC,CAAA,KAAD,GAAS;MACT,IAAC,CAAA,KAAD,CAAA;IAHS;;sBAKb,KAAA,GAAO,SAAA;AACH,UAAA;MAAA,IAAO,4DAAP;AACI,eADJ;;MAGA,IAAG,IAAC,CAAA,KAAD,IAAU,YAAb;QACI,IAAC,CAAA,WAAD,CAAA,EADJ;;MAIA,CAAA,CAAE,MAAF,CAAS,CAAC,EAAV,CAAa,SAAb,EAAwB,IAAC,CAAA,WAAzB;MAEA,IAAC,CAAA,EAAE,CAAC,EAAJ,CAAO,6BAAP,EAAsC,CAAA,SAAA,KAAA;eAAA,SAAA;UAElC,CAAA,CAAE,MAAF,CAAS,CAAC,GAAV,CAAc,SAAd,EAAyB,KAAC,CAAA,WAA1B;UACA,KAAC,CAAA,aAAD,CAAA;UACA,CAAA,CAAE,MAAF,CAAS,CAAC,EAAV,CAAa,SAAb,EAAwB,KAAC,CAAA,WAAzB;QAJkC;MAAA,CAAA,CAAA,CAAA,IAAA,CAAtC;MAWA,KAAA,GAAQ,IAAC,CAAA,EAAE,CAAC,OAAJ,CAAY,MAAZ;aACR,KAAK,CAAC,EAAN,CAAS,QAAT,EAAmB,IAAC,CAAA,YAApB;IAtBG;;sBAwBP,aAAA,GAAe,SAAA;AACX,UAAA;MAAA,KAAA,GAAQ,IAAC,CAAA,EAAE,CAAC,GAAJ,CAAA;AAER;QAEI,YAAa,CAAA,IAAC,CAAA,KAAD,CAAb,GAAuB,MAF3B;OAAA,aAAA;QAGM;QAEF,YAAY,CAAC,KAAb,CAAA,EALJ;;IAHW;;sBAYf,WAAA,GAAa,SAAA;MACT,IAAC,CAAA,EAAE,CAAC,GAAJ,CAAQ,YAAa,CAAA,IAAC,CAAA,KAAD,CAArB;IADS;;sBAIb,YAAA,GAAc,SAAA;MAEV,OAAO,YAAa,CAAA,IAAC,CAAA,KAAD;IAFV;;;;;;EAMlB,CAAC,CAAC,EAAE,CAAC,MAAL,CACI;IAAA,KAAA,EAAO,SAAC,KAAD;aACH,IAAC,CAAA,IAAD,CAAO,SAAA;QACH,IAAG,CAAI,CAAA,CAAE,IAAF,CAAI,CAAC,IAAL,CAAU,cAAV,CAAP;iBACI,CAAA,CAAE,IAAF,CAAI,CAAC,IAAL,CAAU,cAAV,EAA8B,IAAA,OAAA,CAAQ,IAAR,EAAW,KAAX,CAA9B,EADJ;;MADG,CAAP;IADG,CAAP;GADJ;;EAOA,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,OAAX,GAAqB;AA/DrB","file":"store.js","sourceRoot":"/source/","sourcesContent":["$ = jQuery\n\n\nclass Storage\n\n    constructor: (el, lsKey) ->\n        @el = $(el)\n        @lsKey = lsKey\n        @setUp()\n\n    setUp: ->\n        if not localStorage?\n            return\n\n        if @lsKey of localStorage\n            @updateField()\n\n        # localStorage on change\n        $(window).on('storage', @updateField)\n\n        @el.on('input change propertychange', =>\n            # storage gets triggered in the current tab/window in some browsers\n            $(window).off('storage', @updateField)\n            @updateStorage()\n            $(window).on('storage', @updateField)\n            return\n        )\n\n        # This gets called for every el,\n        # even if they belong to the same form,\n        # it's ok though.\n        $form = @el.closest(\"form\")\n        $form.on('submit', @clearStorage)\n\n    updateStorage: =>\n        value = @el.val()\n\n        try\n            # May trigger storage\n            localStorage[@lsKey] = value\n        catch err\n            # The localStorage is probably full, nothing to do other than clear it\n            localStorage.clear()\n\n        return\n\n    updateField: =>\n        @el.val(localStorage[@lsKey])\n        return\n\n    clearStorage: =>\n        # Triggers storage\n        delete localStorage[@lsKey]\n        return\n\n\n$.fn.extend\n    store: (lsKey) ->\n        @each( ->\n            if not $(@).data('plugin_store')\n                $(@).data('plugin_store', new Storage(@, lsKey))\n        )\n\n$.fn.store.Storage = Storage\n"]}