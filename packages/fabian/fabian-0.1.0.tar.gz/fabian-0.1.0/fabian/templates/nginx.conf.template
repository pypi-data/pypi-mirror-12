{% macro nginx_locations() %}
    {% for application in applications %}
        {% if application.listen %}
            location @{{application.name}} {
                proxy_set_header   Host              $host;
                proxy_set_header   X-Real-IP         $remote_addr;
                proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
                proxy_set_header   X-Forwarded-Proto $scheme;
                {% for header in application.headers %}
                add_header {{header}} {{application.headers.header}};
                {% endfor %}
                proxy_pass http://{{application.listen}}:{{application.port}};
            }
        {% endif %}

            location {{application.prefix}} {
                {{application.raw_location_directives}}
                {% if application.static_dir %}
                root {{application.static_dir}};
                {% endif %}
                try_files $uri/index.html $uri.html $uri {% if application.listen %}@{{application.name}}{% endif %};
            }
    {% endfor %}
{% endmacro %}


server {
    listen       80;
    server_name  {% if hostname %}{{hostname}}{% else %}""{% endif %};
    {{raw_server_directives}}

    {% if no_rewrite_https %}
    access_log  /var/log/nginx/access{% if hostname %}_{{hostname}}{% endif %}.log;
    error_log   /var/log/nginx/error{% if hostname %}_{{hostname}}{% endif %}.log;
    root {% if root %}{{root}}{% else %}/var/www/{% endif %};
    {{ nginx_locations() }}
    {% else %}
    rewrite ^ https://$server_name$request_uri? permanent;
    access_log  /dev/null;
    error_log   /dev/null;
    {% endif %}
}

server {
    listen       443 ssl;
    server_name  {% if hostname %}{{hostname}}{% else %}""{% endif %};

    access_log  /var/log/nginx/access{% if hostname %}_{{hostname}}{% endif %}.log;
    error_log   /var/log/nginx/error{% if hostname %}_{{hostname}}{% endif %}.log;

    {% if dh_params_path %}
    ssl_dhparam {{dh_params_path}};{% endif %}
    ssl_certificate {% if certificate_bundle %}{{certificate_bundle}}{% else %}/etc/ssl/certs/ssl-cert-snakeoil.pem{% endif %};
    ssl_certificate_key {% if private_key %}{{private_key}}{% else %}/etc/ssl/private/ssl-cert-snakeoil.key{% endif %};

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;

    {{raw_server_directives}}

    {% if not no_hsts %}
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
    {% endif %}
    root {% if root %}{{root}}{% else %}/var/www/{% endif %};

    {{ nginx_locations() }}
}

