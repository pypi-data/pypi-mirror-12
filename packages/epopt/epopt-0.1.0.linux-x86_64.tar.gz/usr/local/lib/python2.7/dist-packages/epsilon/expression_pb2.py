# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: epsilon/expression.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='epsilon/expression.proto',
  package='',
  syntax='proto3',
  serialized_pb=b'\n\x18\x65psilon/expression.proto\"\xd5\x01\n\x08\x43onstant\x12%\n\rconstant_type\x18\x01 \x01(\x0e\x32\x0e.Constant.Type\x12\x0e\n\x06scalar\x18\x02 \x01(\x01\x12\t\n\x01m\x18\x03 \x01(\x05\x12\t\n\x01n\x18\x04 \x01(\x05\x12\x0b\n\x03nnz\x18\x05 \x01(\x05\x12\x15\n\rdata_location\x18\x06 \x01(\t\x12\x12\n\ndata_value\x18\x07 \x01(\x0c\"D\n\x04Type\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x10\n\x0c\x44\x45NSE_MATRIX\x10\x01\x12\x11\n\rSPARSE_MATRIX\x10\x02\x12\n\n\x06SCALAR\x10\x03\"\x1f\n\x08Variable\x12\x13\n\x0bvariable_id\x18\x01 \x01(\t\"\x13\n\x04Size\x12\x0b\n\x03\x64im\x18\x01 \x03(\x05\"2\n\x05Slice\x12\r\n\x05start\x18\x01 \x01(\x05\x12\x0c\n\x04stop\x18\x02 \x01(\x05\x12\x0c\n\x04step\x18\x03 \x01(\x05\"`\n\x04Sign\x12\x1d\n\tsign_type\x18\x01 \x01(\x0e\x32\n.Sign.Type\"9\n\x04Type\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x0c\n\x08NEGATIVE\x10\x01\x12\x0c\n\x08POSITIVE\x10\x02\x12\x08\n\x04ZERO\x10\x03\"\xaa\x01\n\tCurvature\x12\'\n\x0e\x63urvature_type\x18\x01 \x01(\x0e\x32\x0f.Curvature.Type\x12\x13\n\x0b\x65lementwise\x18\x02 \x01(\x08\x12\x17\n\x0fscalar_multiple\x18\x03 \x01(\x08\"F\n\x04Type\x12\x0b\n\x07UNKNOWN\x10\x00\x12\n\n\x06\x41\x46\x46INE\x10\x01\x12\n\n\x06\x43ONVEX\x10\x02\x12\x0b\n\x07\x43ONCAVE\x10\x03\x12\x0c\n\x08\x43ONSTANT\x10\x04\"h\n\x04\x43one\x12\x1d\n\tcone_type\x18\x01 \x01(\x0e\x32\n.Cone.Type\"A\n\x04Type\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x08\n\x04ZERO\x10\x01\x12\x10\n\x0cNON_NEGATIVE\x10\x02\x12\x10\n\x0cSEMIDEFINITE\x10\x03\" \n\x10ProximalOperator\x12\x0c\n\x04name\x18\x01 \x01(\t\"\x92\x02\n\tLinearMap\x12(\n\x0flinear_map_type\x18\x01 \x01(\x0e\x32\x0f.LinearMap.Type\x12\t\n\x01m\x18\x02 \x01(\x05\x12\t\n\x01n\x18\x03 \x01(\x05\x12\x1b\n\x08\x63onstant\x18\x04 \x01(\x0b\x32\t.Constant\x12\x0e\n\x06scalar\x18\x05 \x01(\x01\x12\x17\n\x03\x61rg\x18\x06 \x03(\x0b\x32\n.LinearMap\"\x7f\n\x04Type\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x10\n\x0c\x44\x45NSE_MATRIX\x10\x01\x12\x11\n\rSPARSE_MATRIX\x10\x02\x12\x13\n\x0f\x44IAGONAL_MATRIX\x10\x03\x12\n\n\x06SCALAR\x10\x04\x12\x15\n\x11KRONECKER_PRODUCT\x10\x05\x12\r\n\tTRANSPOSE\x10\x06\"\x8d\t\n\nExpression\x12)\n\x0f\x65xpression_type\x18\x01 \x01(\x0e\x32\x10.Expression.Type\x12\x13\n\x04size\x18\x02 \x01(\x0b\x32\x05.Size\x12\x18\n\x03\x61rg\x18\x03 \x03(\x0b\x32\x0b.Expression\x12\x13\n\x04sign\x18\x04 \x01(\x0b\x32\x05.Sign\x12\x1d\n\tcurvature\x18\x05 \x01(\x0b\x32\n.Curvature\x12,\n\x11proximal_operator\x18\x06 \x01(\x0b\x32\x11.ProximalOperator\x12\x1b\n\x08\x63onstant\x18\x07 \x01(\x0b\x32\t.Constant\x12\x1b\n\x08variable\x18\x08 \x01(\x0b\x32\t.Variable\x12\x13\n\x03key\x18\t \x03(\x0b\x32\x06.Slice\x12\t\n\x01p\x18\n \x01(\x01\x12\t\n\x01q\x18\x0b \x01(\x01\x12\x13\n\x04\x63one\x18\x0c \x01(\x0b\x32\x05.Cone\x12\t\n\x01M\x18\r \x01(\x01\x12\x38\n\x12scaled_zone_params\x18\x0e \x01(\x0b\x32\x1c.Expression.ScaledZoneParams\x12-\n\x0cstack_params\x18\x0f \x01(\x0b\x32\x17.Expression.StackParams\x12\t\n\x01k\x18\x10 \x01(\x05\x12\x1e\n\nlinear_map\x18\x11 \x01(\x0b\x32\n.LinearMap\x1a\x45\n\x10ScaledZoneParams\x12\r\n\x05\x61lpha\x18\x01 \x01(\x01\x12\x0c\n\x04\x62\x65ta\x18\x02 \x01(\x01\x12\t\n\x01\x63\x18\x03 \x01(\x01\x12\t\n\x01m\x18\x04 \x01(\x01\x1a\x1d\n\x0bStackParams\x12\x0e\n\x06offset\x18\x01 \x01(\x05\"\xc3\x04\n\x04Type\x12\x0b\n\x07UNKNOWN\x10\x00\x12\r\n\tINDICATOR\x10\x01\x12\x0c\n\x08\x43ONSTANT\x10\x02\x12\x0c\n\x08VARIABLE\x10\x03\x12\x07\n\x03\x41\x44\x44\x10\n\x12\x0c\n\x08MULTIPLY\x10\x0b\x12\x18\n\x14MULTIPLY_ELEMENTWISE\x10\x0c\x12\t\n\x05INDEX\x10\x14\x12\n\n\x06NEGATE\x10\x15\x12\x07\n\x03SUM\x10\x16\x12\r\n\tTRANSPOSE\x10\x17\x12\n\n\x06HSTACK\x10\x18\x12\n\n\x06VSTACK\x10\x19\x12\t\n\x05TRACE\x10\x1a\x12\x0b\n\x07RESHAPE\x10\x1b\x12\x08\n\x04ZERO\x10\x1c\x12\x07\n\x03\x41\x42S\x10\x32\x12\t\n\x05POWER\x10\x33\x12\x0f\n\x0bSQUARE_ROOT\x10\x34\x12\x07\n\x03LOG\x10\x35\x12\x07\n\x03\x45XP\x10\x36\x12\t\n\x05HUBER\x10\x37\x12\x08\n\x04\x45NTR\x10\x38\x12\x0c\n\x08LOGISTIC\x10\x39\x12\x0f\n\x0bSCALED_ZONE\x10:\x12\n\n\x06KL_DIV\x10;\x12\n\n\x06NORM_P\x10\x64\x12\x11\n\rQUAD_OVER_LIN\x10\x65\x12\x0f\n\x0bLOG_SUM_EXP\x10\x66\x12\x0f\n\x0bMAX_ENTRIES\x10g\x12\x0f\n\x0bSUM_LARGEST\x10h\x12\x0c\n\x07LOG_DET\x10\xc8\x01\x12\x0c\n\x07NORM_PQ\x10\xc9\x01\x12\x17\n\x12NORM_2_ELEMENTWISE\x10\xca\x01\x12\x14\n\x0fMAX_ELEMENTWISE\x10\xcb\x01\x12\r\n\x08NORM_NUC\x10\xcc\x01\x12\x0f\n\nLAMBDA_MAX\x10\xcd\x01\x12\x10\n\x0bMATRIX_FRAC\x10\xce\x01\x12\x0f\n\nLINEAR_MAP\x10\xac\x02\x12\x12\n\rPROX_FUNCTION\x10\xad\x02\"J\n\x07Problem\x12\x1e\n\tobjective\x18\x01 \x01(\x0b\x32\x0b.Expression\x12\x1f\n\nconstraint\x18\x02 \x03(\x0b\x32\x0b.Expressionb\x06proto3'
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_CONSTANT_TYPE = _descriptor.EnumDescriptor(
  name='Type',
  full_name='Constant.Type',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DENSE_MATRIX', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SPARSE_MATRIX', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SCALAR', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=174,
  serialized_end=242,
)
_sym_db.RegisterEnumDescriptor(_CONSTANT_TYPE)

_SIGN_TYPE = _descriptor.EnumDescriptor(
  name='Type',
  full_name='Sign.Type',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NEGATIVE', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='POSITIVE', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ZERO', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=389,
  serialized_end=446,
)
_sym_db.RegisterEnumDescriptor(_SIGN_TYPE)

_CURVATURE_TYPE = _descriptor.EnumDescriptor(
  name='Type',
  full_name='Curvature.Type',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AFFINE', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CONVEX', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CONCAVE', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CONSTANT', index=4, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=549,
  serialized_end=619,
)
_sym_db.RegisterEnumDescriptor(_CURVATURE_TYPE)

_CONE_TYPE = _descriptor.EnumDescriptor(
  name='Type',
  full_name='Cone.Type',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ZERO', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NON_NEGATIVE', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SEMIDEFINITE', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=660,
  serialized_end=725,
)
_sym_db.RegisterEnumDescriptor(_CONE_TYPE)

_LINEARMAP_TYPE = _descriptor.EnumDescriptor(
  name='Type',
  full_name='LinearMap.Type',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DENSE_MATRIX', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SPARSE_MATRIX', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DIAGONAL_MATRIX', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SCALAR', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='KRONECKER_PRODUCT', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TRANSPOSE', index=6, number=6,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=909,
  serialized_end=1036,
)
_sym_db.RegisterEnumDescriptor(_LINEARMAP_TYPE)

_EXPRESSION_TYPE = _descriptor.EnumDescriptor(
  name='Type',
  full_name='Expression.Type',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INDICATOR', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CONSTANT', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VARIABLE', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ADD', index=4, number=10,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MULTIPLY', index=5, number=11,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MULTIPLY_ELEMENTWISE', index=6, number=12,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INDEX', index=7, number=20,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NEGATE', index=8, number=21,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUM', index=9, number=22,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TRANSPOSE', index=10, number=23,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HSTACK', index=11, number=24,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VSTACK', index=12, number=25,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TRACE', index=13, number=26,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RESHAPE', index=14, number=27,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ZERO', index=15, number=28,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ABS', index=16, number=50,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='POWER', index=17, number=51,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SQUARE_ROOT', index=18, number=52,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LOG', index=19, number=53,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EXP', index=20, number=54,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HUBER', index=21, number=55,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ENTR', index=22, number=56,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LOGISTIC', index=23, number=57,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SCALED_ZONE', index=24, number=58,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='KL_DIV', index=25, number=59,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NORM_P', index=26, number=100,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='QUAD_OVER_LIN', index=27, number=101,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LOG_SUM_EXP', index=28, number=102,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MAX_ENTRIES', index=29, number=103,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUM_LARGEST', index=30, number=104,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LOG_DET', index=31, number=200,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NORM_PQ', index=32, number=201,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NORM_2_ELEMENTWISE', index=33, number=202,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MAX_ELEMENTWISE', index=34, number=203,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NORM_NUC', index=35, number=204,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LAMBDA_MAX', index=36, number=205,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MATRIX_FRAC', index=37, number=206,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LINEAR_MAP', index=38, number=300,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PROX_FUNCTION', index=39, number=301,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1625,
  serialized_end=2204,
)
_sym_db.RegisterEnumDescriptor(_EXPRESSION_TYPE)


_CONSTANT = _descriptor.Descriptor(
  name='Constant',
  full_name='Constant',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='constant_type', full_name='Constant.constant_type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='scalar', full_name='Constant.scalar', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='m', full_name='Constant.m', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='n', full_name='Constant.n', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='nnz', full_name='Constant.nnz', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='data_location', full_name='Constant.data_location', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='data_value', full_name='Constant.data_value', index=6,
      number=7, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _CONSTANT_TYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=29,
  serialized_end=242,
)


_VARIABLE = _descriptor.Descriptor(
  name='Variable',
  full_name='Variable',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='variable_id', full_name='Variable.variable_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=244,
  serialized_end=275,
)


_SIZE = _descriptor.Descriptor(
  name='Size',
  full_name='Size',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='dim', full_name='Size.dim', index=0,
      number=1, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=277,
  serialized_end=296,
)


_SLICE = _descriptor.Descriptor(
  name='Slice',
  full_name='Slice',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='start', full_name='Slice.start', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='stop', full_name='Slice.stop', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='step', full_name='Slice.step', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=298,
  serialized_end=348,
)


_SIGN = _descriptor.Descriptor(
  name='Sign',
  full_name='Sign',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sign_type', full_name='Sign.sign_type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _SIGN_TYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=350,
  serialized_end=446,
)


_CURVATURE = _descriptor.Descriptor(
  name='Curvature',
  full_name='Curvature',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='curvature_type', full_name='Curvature.curvature_type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='elementwise', full_name='Curvature.elementwise', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='scalar_multiple', full_name='Curvature.scalar_multiple', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _CURVATURE_TYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=449,
  serialized_end=619,
)


_CONE = _descriptor.Descriptor(
  name='Cone',
  full_name='Cone',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='cone_type', full_name='Cone.cone_type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _CONE_TYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=621,
  serialized_end=725,
)


_PROXIMALOPERATOR = _descriptor.Descriptor(
  name='ProximalOperator',
  full_name='ProximalOperator',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='ProximalOperator.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=727,
  serialized_end=759,
)


_LINEARMAP = _descriptor.Descriptor(
  name='LinearMap',
  full_name='LinearMap',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='linear_map_type', full_name='LinearMap.linear_map_type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='m', full_name='LinearMap.m', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='n', full_name='LinearMap.n', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='constant', full_name='LinearMap.constant', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='scalar', full_name='LinearMap.scalar', index=4,
      number=5, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='arg', full_name='LinearMap.arg', index=5,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _LINEARMAP_TYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=762,
  serialized_end=1036,
)


_EXPRESSION_SCALEDZONEPARAMS = _descriptor.Descriptor(
  name='ScaledZoneParams',
  full_name='Expression.ScaledZoneParams',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='alpha', full_name='Expression.ScaledZoneParams.alpha', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='beta', full_name='Expression.ScaledZoneParams.beta', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='c', full_name='Expression.ScaledZoneParams.c', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='m', full_name='Expression.ScaledZoneParams.m', index=3,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1522,
  serialized_end=1591,
)

_EXPRESSION_STACKPARAMS = _descriptor.Descriptor(
  name='StackParams',
  full_name='Expression.StackParams',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='offset', full_name='Expression.StackParams.offset', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1593,
  serialized_end=1622,
)

_EXPRESSION = _descriptor.Descriptor(
  name='Expression',
  full_name='Expression',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='expression_type', full_name='Expression.expression_type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='size', full_name='Expression.size', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='arg', full_name='Expression.arg', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sign', full_name='Expression.sign', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='curvature', full_name='Expression.curvature', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='proximal_operator', full_name='Expression.proximal_operator', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='constant', full_name='Expression.constant', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='variable', full_name='Expression.variable', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='key', full_name='Expression.key', index=8,
      number=9, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='p', full_name='Expression.p', index=9,
      number=10, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='q', full_name='Expression.q', index=10,
      number=11, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cone', full_name='Expression.cone', index=11,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='M', full_name='Expression.M', index=12,
      number=13, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='scaled_zone_params', full_name='Expression.scaled_zone_params', index=13,
      number=14, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='stack_params', full_name='Expression.stack_params', index=14,
      number=15, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='k', full_name='Expression.k', index=15,
      number=16, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='linear_map', full_name='Expression.linear_map', index=16,
      number=17, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_EXPRESSION_SCALEDZONEPARAMS, _EXPRESSION_STACKPARAMS, ],
  enum_types=[
    _EXPRESSION_TYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1039,
  serialized_end=2204,
)


_PROBLEM = _descriptor.Descriptor(
  name='Problem',
  full_name='Problem',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='objective', full_name='Problem.objective', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='constraint', full_name='Problem.constraint', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2206,
  serialized_end=2280,
)

_CONSTANT.fields_by_name['constant_type'].enum_type = _CONSTANT_TYPE
_CONSTANT_TYPE.containing_type = _CONSTANT
_SIGN.fields_by_name['sign_type'].enum_type = _SIGN_TYPE
_SIGN_TYPE.containing_type = _SIGN
_CURVATURE.fields_by_name['curvature_type'].enum_type = _CURVATURE_TYPE
_CURVATURE_TYPE.containing_type = _CURVATURE
_CONE.fields_by_name['cone_type'].enum_type = _CONE_TYPE
_CONE_TYPE.containing_type = _CONE
_LINEARMAP.fields_by_name['linear_map_type'].enum_type = _LINEARMAP_TYPE
_LINEARMAP.fields_by_name['constant'].message_type = _CONSTANT
_LINEARMAP.fields_by_name['arg'].message_type = _LINEARMAP
_LINEARMAP_TYPE.containing_type = _LINEARMAP
_EXPRESSION_SCALEDZONEPARAMS.containing_type = _EXPRESSION
_EXPRESSION_STACKPARAMS.containing_type = _EXPRESSION
_EXPRESSION.fields_by_name['expression_type'].enum_type = _EXPRESSION_TYPE
_EXPRESSION.fields_by_name['size'].message_type = _SIZE
_EXPRESSION.fields_by_name['arg'].message_type = _EXPRESSION
_EXPRESSION.fields_by_name['sign'].message_type = _SIGN
_EXPRESSION.fields_by_name['curvature'].message_type = _CURVATURE
_EXPRESSION.fields_by_name['proximal_operator'].message_type = _PROXIMALOPERATOR
_EXPRESSION.fields_by_name['constant'].message_type = _CONSTANT
_EXPRESSION.fields_by_name['variable'].message_type = _VARIABLE
_EXPRESSION.fields_by_name['key'].message_type = _SLICE
_EXPRESSION.fields_by_name['cone'].message_type = _CONE
_EXPRESSION.fields_by_name['scaled_zone_params'].message_type = _EXPRESSION_SCALEDZONEPARAMS
_EXPRESSION.fields_by_name['stack_params'].message_type = _EXPRESSION_STACKPARAMS
_EXPRESSION.fields_by_name['linear_map'].message_type = _LINEARMAP
_EXPRESSION_TYPE.containing_type = _EXPRESSION
_PROBLEM.fields_by_name['objective'].message_type = _EXPRESSION
_PROBLEM.fields_by_name['constraint'].message_type = _EXPRESSION
DESCRIPTOR.message_types_by_name['Constant'] = _CONSTANT
DESCRIPTOR.message_types_by_name['Variable'] = _VARIABLE
DESCRIPTOR.message_types_by_name['Size'] = _SIZE
DESCRIPTOR.message_types_by_name['Slice'] = _SLICE
DESCRIPTOR.message_types_by_name['Sign'] = _SIGN
DESCRIPTOR.message_types_by_name['Curvature'] = _CURVATURE
DESCRIPTOR.message_types_by_name['Cone'] = _CONE
DESCRIPTOR.message_types_by_name['ProximalOperator'] = _PROXIMALOPERATOR
DESCRIPTOR.message_types_by_name['LinearMap'] = _LINEARMAP
DESCRIPTOR.message_types_by_name['Expression'] = _EXPRESSION
DESCRIPTOR.message_types_by_name['Problem'] = _PROBLEM

Constant = _reflection.GeneratedProtocolMessageType('Constant', (_message.Message,), dict(
  DESCRIPTOR = _CONSTANT,
  __module__ = 'epsilon.expression_pb2'
  # @@protoc_insertion_point(class_scope:Constant)
  ))
_sym_db.RegisterMessage(Constant)

Variable = _reflection.GeneratedProtocolMessageType('Variable', (_message.Message,), dict(
  DESCRIPTOR = _VARIABLE,
  __module__ = 'epsilon.expression_pb2'
  # @@protoc_insertion_point(class_scope:Variable)
  ))
_sym_db.RegisterMessage(Variable)

Size = _reflection.GeneratedProtocolMessageType('Size', (_message.Message,), dict(
  DESCRIPTOR = _SIZE,
  __module__ = 'epsilon.expression_pb2'
  # @@protoc_insertion_point(class_scope:Size)
  ))
_sym_db.RegisterMessage(Size)

Slice = _reflection.GeneratedProtocolMessageType('Slice', (_message.Message,), dict(
  DESCRIPTOR = _SLICE,
  __module__ = 'epsilon.expression_pb2'
  # @@protoc_insertion_point(class_scope:Slice)
  ))
_sym_db.RegisterMessage(Slice)

Sign = _reflection.GeneratedProtocolMessageType('Sign', (_message.Message,), dict(
  DESCRIPTOR = _SIGN,
  __module__ = 'epsilon.expression_pb2'
  # @@protoc_insertion_point(class_scope:Sign)
  ))
_sym_db.RegisterMessage(Sign)

Curvature = _reflection.GeneratedProtocolMessageType('Curvature', (_message.Message,), dict(
  DESCRIPTOR = _CURVATURE,
  __module__ = 'epsilon.expression_pb2'
  # @@protoc_insertion_point(class_scope:Curvature)
  ))
_sym_db.RegisterMessage(Curvature)

Cone = _reflection.GeneratedProtocolMessageType('Cone', (_message.Message,), dict(
  DESCRIPTOR = _CONE,
  __module__ = 'epsilon.expression_pb2'
  # @@protoc_insertion_point(class_scope:Cone)
  ))
_sym_db.RegisterMessage(Cone)

ProximalOperator = _reflection.GeneratedProtocolMessageType('ProximalOperator', (_message.Message,), dict(
  DESCRIPTOR = _PROXIMALOPERATOR,
  __module__ = 'epsilon.expression_pb2'
  # @@protoc_insertion_point(class_scope:ProximalOperator)
  ))
_sym_db.RegisterMessage(ProximalOperator)

LinearMap = _reflection.GeneratedProtocolMessageType('LinearMap', (_message.Message,), dict(
  DESCRIPTOR = _LINEARMAP,
  __module__ = 'epsilon.expression_pb2'
  # @@protoc_insertion_point(class_scope:LinearMap)
  ))
_sym_db.RegisterMessage(LinearMap)

Expression = _reflection.GeneratedProtocolMessageType('Expression', (_message.Message,), dict(

  ScaledZoneParams = _reflection.GeneratedProtocolMessageType('ScaledZoneParams', (_message.Message,), dict(
    DESCRIPTOR = _EXPRESSION_SCALEDZONEPARAMS,
    __module__ = 'epsilon.expression_pb2'
    # @@protoc_insertion_point(class_scope:Expression.ScaledZoneParams)
    ))
  ,

  StackParams = _reflection.GeneratedProtocolMessageType('StackParams', (_message.Message,), dict(
    DESCRIPTOR = _EXPRESSION_STACKPARAMS,
    __module__ = 'epsilon.expression_pb2'
    # @@protoc_insertion_point(class_scope:Expression.StackParams)
    ))
  ,
  DESCRIPTOR = _EXPRESSION,
  __module__ = 'epsilon.expression_pb2'
  # @@protoc_insertion_point(class_scope:Expression)
  ))
_sym_db.RegisterMessage(Expression)
_sym_db.RegisterMessage(Expression.ScaledZoneParams)
_sym_db.RegisterMessage(Expression.StackParams)

Problem = _reflection.GeneratedProtocolMessageType('Problem', (_message.Message,), dict(
  DESCRIPTOR = _PROBLEM,
  __module__ = 'epsilon.expression_pb2'
  # @@protoc_insertion_point(class_scope:Problem)
  ))
_sym_db.RegisterMessage(Problem)


# @@protoc_insertion_point(module_scope)
