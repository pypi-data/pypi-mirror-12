
# /Users/dvs/Dropbox/Code/graphql-py/graphql/parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = 'A7535AE31FBAD945790E6CC83BEAC0EB'
    
_lr_action_items = {'FLOAT_VALUE':([24,25,29,31,32,33,34,37,85,99,100,101,102,103,104,106,107,109,110,111,112,113,115,116,117,120,121,122,124,127,133,134,135,136,142,146,147,148,149,150,152,153,154,155,156,157,159,162,163,164,165,],[-75,-73,-71,-69,-68,-72,-74,-70,99,-79,-92,-81,-80,99,-97,-82,-95,-84,-77,-94,-98,-93,-83,-78,-96,-100,99,-102,-108,-66,-99,-101,99,-107,146,-86,-91,-88,-87,146,-89,-90,-85,146,-104,-106,-113,-103,-105,146,-112,]),'NULL':([4,5,8,9,11,14,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,63,64,66,67,68,69,70,71,72,73,74,77,83,86,87,88,89,90,91,92,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,124,125,126,127,130,133,136,137,143,146,147,148,149,151,152,153,154,156,159,160,161,162,165,166,167,],[20,-15,24,24,-14,-44,-45,-49,-47,-46,-50,-48,-18,-75,-73,24,-19,20,-71,-20,-69,-68,-72,-74,-37,24,-70,-21,24,-17,-16,24,-39,-54,-36,-52,24,-76,-34,-35,24,-33,-38,-53,-59,24,-28,-29,-27,-56,-30,-31,-32,24,-43,-58,-57,-23,-55,-24,-25,-26,-42,-79,-92,-81,-80,-97,24,-82,-95,24,-84,-77,-94,-98,-93,-60,-83,-78,-96,-22,24,-100,-108,24,-110,-66,24,-99,-107,-109,-111,-86,-91,-88,-87,24,-89,-90,-85,-104,-113,-115,24,-103,-112,-114,-116,]),'TRUE':([4,5,8,9,11,14,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,63,64,66,67,68,69,70,71,72,73,74,77,83,85,86,87,88,89,90,91,92,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,126,127,130,133,134,135,136,137,142,143,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,162,163,164,165,166,167,],[21,-15,25,25,-14,-44,-45,-49,-47,-46,-50,-48,-18,-75,-73,25,-19,21,-71,-20,-69,-68,-72,-74,-37,25,-70,-21,25,-17,-16,25,-39,-54,-36,-52,25,-76,-34,-35,25,-33,-38,-53,-59,25,-28,-29,-27,-56,-30,-31,-32,25,-43,100,-58,-57,-23,-55,-24,-25,-26,-42,-79,-92,-81,-80,100,-97,25,-82,-95,25,-84,-77,-94,-98,-93,-60,-83,-78,-96,-22,25,-100,100,-102,-108,25,-110,-66,25,-99,-101,100,-107,-109,100,-111,-86,-91,-88,-87,100,25,-89,-90,-85,100,-104,-106,-113,-115,25,-103,-105,100,-112,-114,-116,]),'STRING_VALUE':([24,25,29,31,32,33,34,37,85,99,100,101,102,103,104,106,107,109,110,111,112,113,115,116,117,120,121,122,124,127,133,134,135,136,142,146,147,148,149,150,152,153,154,155,156,157,159,162,163,164,165,],[-75,-73,-71,-69,-68,-72,-74,-70,102,-79,-92,-81,-80,102,-97,-82,-95,-84,-77,-94,-98,-93,-83,-78,-96,-100,102,-102,-108,-66,-99,-101,102,-107,149,-86,-91,-88,-87,149,-89,-90,-85,149,-104,-106,-113,-103,-105,149,-112,]),'BRACE_R':([14,16,17,18,19,20,21,23,24,25,26,27,29,30,31,32,33,34,35,37,38,42,43,45,46,47,48,51,52,54,63,64,68,69,70,71,72,73,74,83,87,88,89,90,91,92,98,99,100,101,102,104,105,106,107,109,110,111,112,113,115,116,117,118,120,124,125,126,127,133,136,137,143,146,147,148,149,151,152,153,154,156,159,160,161,162,165,166,167,],[-44,-45,-49,-47,-46,-50,-48,-18,-75,-73,43,-19,-71,-20,-69,-68,-72,-74,-37,-70,-21,-17,-16,-39,-54,-36,-52,-34,-35,-33,-38,-53,-28,-29,-27,-56,-30,-31,-32,-43,-57,-23,-55,-24,-25,-26,-42,-79,-92,-81,-80,-97,124,-82,-95,-84,-77,-94,-98,-93,-83,-78,-96,-22,-100,-108,136,-110,-66,-99,-107,-109,-111,-86,-91,-88,-87,159,-89,-90,-85,-104,-113,-115,165,-103,-112,-114,-116,]),'BRACKET_L':([24,25,29,31,32,33,34,37,85,99,100,101,102,103,104,106,107,109,110,111,112,113,115,116,117,119,120,121,122,124,127,130,133,134,135,136,142,146,147,148,149,150,152,153,154,155,156,157,159,162,163,164,165,],[-75,-73,-71,-69,-68,-72,-74,-70,103,-79,-92,-81,-80,103,-97,-82,-95,-84,-77,-94,-98,-93,-83,-78,-96,130,-100,103,-102,-108,-66,130,-99,-101,103,-107,150,-86,-91,-88,-87,150,-89,-90,-85,150,-104,-106,-113,-103,-105,150,-112,]),'BRACKET_R':([24,25,29,31,32,33,34,37,61,99,100,101,102,103,104,106,107,109,110,111,112,113,115,116,117,120,121,122,124,127,128,129,131,133,134,136,138,139,140,144,146,147,148,149,150,152,153,154,155,156,157,159,162,163,165,],[-75,-73,-71,-69,-68,-72,-74,-70,-120,-79,-92,-81,-80,120,-97,-82,-95,-84,-77,-94,-98,-93,-83,-78,-96,-100,133,-102,-108,-66,-117,-119,-118,-99,-101,-107,-122,144,-123,-121,-86,-91,-88,-87,156,-89,-90,-85,162,-104,-106,-113,-103,-105,-112,]),'SPREAD':([8,14,16,17,18,19,20,21,23,24,25,26,27,29,30,31,32,33,34,35,37,38,42,43,45,46,47,48,51,52,54,63,64,68,69,70,71,72,73,74,83,87,88,89,90,91,92,98,118,],[28,-44,-45,-49,-47,-46,-50,-48,-18,-75,-73,28,-19,-71,-20,-69,-68,-72,-74,-37,-70,-21,-17,-16,-39,-54,-36,-52,-34,-35,-33,-38,-53,-28,-29,-27,-56,-30,-31,-32,-43,-57,-23,-55,-24,-25,-26,-42,-22,]),'COLON':([24,25,29,31,32,33,34,35,37,65,95,123,158,],[-75,-73,-71,-69,-68,-72,-74,50,-70,85,119,135,164,]),'MUTATION':([0,1,2,4,5,6,7,8,9,11,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,63,64,66,67,68,69,70,71,72,73,74,77,78,80,81,83,85,86,87,88,89,90,91,92,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,126,127,130,133,134,135,136,137,142,143,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,162,163,164,165,166,167,],[5,-7,-9,18,-15,5,-8,29,29,-14,-44,-45,-49,-47,-46,-50,-48,-6,-18,-75,-73,29,-19,18,-71,-20,-69,-68,-72,-74,-37,29,-70,-21,29,-17,-16,29,-39,-54,-36,-52,29,-76,-34,-35,29,-33,-13,-38,-53,-59,29,-28,-29,-27,-56,-30,-31,-32,29,-11,-12,-41,-43,104,-58,-57,-23,-55,-24,-25,-26,-10,-40,-42,-79,-92,-81,-80,104,-97,29,-82,-95,29,-84,-77,-94,-98,-93,-60,-83,-78,-96,-22,29,-100,104,-102,-108,29,-110,-66,29,-99,-101,104,-107,-109,104,-111,-86,-91,-88,-87,104,29,-89,-90,-85,104,-104,-106,-113,-115,29,-103,-105,104,-112,-114,-116,]),'BRACE_L':([0,24,25,29,31,32,33,34,35,37,39,46,48,51,52,54,57,58,59,60,61,62,64,69,71,73,74,79,82,84,85,87,89,92,94,99,100,101,102,103,104,106,107,109,110,111,112,113,115,116,117,120,121,122,124,127,133,134,135,136,142,146,147,148,149,150,152,153,154,155,156,157,159,162,163,164,165,],[8,-75,-73,-71,-69,-68,-72,-74,8,-70,8,-54,-52,8,8,8,8,8,-51,8,-120,8,-53,8,-56,8,8,8,8,8,105,-57,-55,8,-61,-79,-92,-81,-80,105,-97,-82,-95,-84,-77,-94,-98,-93,-83,-78,-96,-100,105,-102,-108,-66,-99,-101,105,-107,151,-86,-91,-88,-87,151,-89,-90,-85,151,-104,-106,-113,-103,-105,151,-112,]),'$end':([1,2,3,6,7,10,12,13,22,40,43,55,78,80,81,96,97,],[-7,-9,-2,-1,-8,0,-3,-5,-6,-4,-16,-13,-11,-12,-41,-10,-40,]),'FRAGMENT':([0,1,2,3,4,5,6,7,8,9,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,63,64,66,67,68,69,70,71,72,73,74,77,78,80,81,83,85,86,87,88,89,90,91,92,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,126,127,130,133,134,135,136,137,142,143,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,162,163,164,165,166,167,],[4,-7,-9,4,16,-15,4,-8,31,31,-14,4,-5,-44,-45,-49,-47,-46,-50,-48,-6,-18,-75,-73,31,-19,16,-71,-20,-69,-68,-72,-74,-37,31,-70,-21,-4,31,-17,-16,31,-39,-54,-36,-52,31,-76,-34,-35,31,-33,-13,-38,-53,-59,31,-28,-29,-27,-56,-30,-31,-32,31,-11,-12,-41,-43,107,-58,-57,-23,-55,-24,-25,-26,-10,-40,-42,-79,-92,-81,-80,107,-97,31,-82,-95,31,-84,-77,-94,-98,-93,-60,-83,-78,-96,-22,31,-100,107,-102,-108,31,-110,-66,31,-99,-101,107,-107,-109,107,-111,-86,-91,-88,-87,107,31,-89,-90,-85,107,-104,-106,-113,-115,31,-103,-105,107,-112,-114,-116,]),'DOLLAR':([24,25,29,31,32,33,34,37,56,61,75,76,85,93,99,100,101,102,103,104,106,107,109,110,111,112,113,115,116,117,120,121,122,124,127,128,129,131,132,133,134,135,136,138,140,141,144,145,146,147,148,149,152,153,154,156,159,162,165,],[-75,-73,-71,-69,-68,-72,-74,-70,77,-120,77,-63,108,-62,-79,-92,-81,-80,108,-97,-82,-95,-84,-77,-94,-98,-93,-83,-78,-96,-100,108,-102,-108,-66,-117,-119,-118,-65,-99,-101,108,-107,-122,-123,-64,-121,-67,-86,-91,-88,-87,-89,-90,-85,-104,-113,-103,-112,]),'EQUALS':([24,25,29,31,32,33,34,37,61,128,129,131,132,138,140,144,],[-75,-73,-71,-69,-68,-72,-74,-70,-120,-117,-119,-118,142,-122,-123,-121,]),'BANG':([24,25,29,31,32,33,34,37,61,128,131,144,],[-75,-73,-71,-69,-68,-72,-74,-70,-120,138,140,-121,]),'AT':([14,16,17,18,19,20,21,24,25,29,31,32,33,34,35,37,39,45,46,48,51,54,57,59,60,61,62,64,71,74,87,89,94,],[-44,-45,-49,-47,-46,-50,-48,-75,-73,-71,-69,-68,-72,-74,53,-70,53,53,-54,53,53,53,53,-51,53,-120,53,-53,-56,53,-57,-55,-61,]),'ON':([5,8,9,11,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,63,64,66,67,68,69,70,71,72,73,74,77,83,85,86,87,88,89,90,91,92,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,126,127,130,133,134,135,136,137,142,143,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,162,163,164,165,166,167,],[-15,33,33,-14,-44,41,-45,-49,-47,-46,-50,-48,-18,-75,-73,33,-19,44,-71,-20,-69,-68,-72,-74,-37,33,-70,-21,33,-17,-16,33,-39,-54,-36,-52,33,-76,-34,-35,33,-33,-38,-53,-59,33,-28,-29,-27,-56,-30,-31,-32,33,-43,112,-58,-57,-23,-55,-24,-25,-26,-42,-79,-92,-81,-80,112,-97,33,-82,-95,33,-84,-77,-94,-98,-93,-60,-83,-78,-96,-22,33,-100,112,-102,-108,33,-110,-66,33,-99,-101,112,-107,-109,112,-111,-86,-91,-88,-87,112,33,-89,-90,-85,112,-104,-106,-113,-115,33,-103,-105,112,-112,-114,-116,]),'FALSE':([4,5,8,9,11,14,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,63,64,66,67,68,69,70,71,72,73,74,77,83,85,86,87,88,89,90,91,92,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,126,127,130,133,134,135,136,137,142,143,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,162,163,164,165,166,167,],[17,-15,34,34,-14,-44,-45,-49,-47,-46,-50,-48,-18,-75,-73,34,-19,17,-71,-20,-69,-68,-72,-74,-37,34,-70,-21,34,-17,-16,34,-39,-54,-36,-52,34,-76,-34,-35,34,-33,-38,-53,-59,34,-28,-29,-27,-56,-30,-31,-32,34,-43,113,-58,-57,-23,-55,-24,-25,-26,-42,-79,-92,-81,-80,113,-97,34,-82,-95,34,-84,-77,-94,-98,-93,-60,-83,-78,-96,-22,34,-100,113,-102,-108,34,-110,-66,34,-99,-101,113,-107,-109,113,-111,-86,-91,-88,-87,113,34,-89,-90,-85,113,-104,-106,-113,-115,34,-103,-105,113,-112,-114,-116,]),'NAME':([4,5,8,9,11,14,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,63,64,66,67,68,69,70,71,72,73,74,77,83,85,86,87,88,89,90,91,92,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,126,127,130,133,134,135,136,137,142,143,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,162,163,164,165,166,167,],[14,-15,32,32,-14,-44,-45,-49,-47,-46,-50,-48,-18,-75,-73,32,-19,14,-71,-20,-69,-68,-72,-74,-37,32,-70,-21,32,-17,-16,32,-39,-54,-36,-52,32,-76,-34,-35,32,-33,-38,-53,-59,32,-28,-29,-27,-56,-30,-31,-32,32,-43,111,-58,-57,-23,-55,-24,-25,-26,-42,-79,-92,-81,-80,111,-97,32,-82,-95,32,-84,-77,-94,-98,-93,-60,-83,-78,-96,-22,32,-100,111,-102,-108,32,-110,-66,32,-99,-101,111,-107,-109,111,-111,-86,-91,-88,-87,111,32,-89,-90,-85,111,-104,-106,-113,-115,32,-103,-105,111,-112,-114,-116,]),'PAREN_L':([24,25,29,31,32,33,34,35,37,39,54,71,],[-75,-73,-71,-69,-68,-72,-74,49,-70,56,49,49,]),'PAREN_R':([24,25,29,31,32,33,34,37,61,66,67,75,76,86,93,99,100,101,102,104,106,107,109,110,111,112,113,114,115,116,117,120,124,127,128,129,131,132,133,136,138,140,141,144,145,146,147,148,149,152,153,154,156,159,162,165,],[-75,-73,-71,-69,-68,-72,-74,-70,-120,-59,87,94,-63,-58,-62,-79,-92,-81,-80,-97,-82,-95,-84,-77,-94,-98,-93,-60,-83,-78,-96,-100,-108,-66,-117,-119,-118,-65,-99,-107,-122,-123,-64,-121,-67,-86,-91,-88,-87,-89,-90,-85,-104,-113,-103,-112,]),'INT_VALUE':([24,25,29,31,32,33,34,37,85,99,100,101,102,103,104,106,107,109,110,111,112,113,115,116,117,120,121,122,124,127,133,134,135,136,142,146,147,148,149,150,152,153,154,155,156,157,159,162,163,164,165,],[-75,-73,-71,-69,-68,-72,-74,-70,116,-79,-92,-81,-80,116,-97,-82,-95,-84,-77,-94,-98,-93,-83,-78,-96,-100,116,-102,-108,-66,-99,-101,116,-107,154,-86,-91,-88,-87,154,-89,-90,-85,154,-104,-106,-113,-103,-105,154,-112,]),'QUERY':([0,1,2,4,5,6,7,8,9,11,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,63,64,66,67,68,69,70,71,72,73,74,77,78,80,81,83,85,86,87,88,89,90,91,92,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,126,127,130,133,134,135,136,137,142,143,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,162,163,164,165,166,167,],[11,-7,-9,19,-15,11,-8,37,37,-14,-44,-45,-49,-47,-46,-50,-48,-6,-18,-75,-73,37,-19,19,-71,-20,-69,-68,-72,-74,-37,37,-70,-21,37,-17,-16,37,-39,-54,-36,-52,37,-76,-34,-35,37,-33,-13,-38,-53,-59,37,-28,-29,-27,-56,-30,-31,-32,37,-11,-12,-41,-43,117,-58,-57,-23,-55,-24,-25,-26,-10,-40,-42,-79,-92,-81,-80,117,-97,37,-82,-95,37,-84,-77,-94,-98,-93,-60,-83,-78,-96,-22,37,-100,117,-102,-108,37,-110,-66,37,-99,-101,117,-107,-109,117,-111,-86,-91,-88,-87,117,37,-89,-90,-85,117,-104,-106,-113,-115,37,-103,-105,117,-112,-114,-116,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'named_type':([41,44,119,130,],[59,59,128,128,]),'selection':([8,26,],[23,42,]),'const_value_list':([150,],[155,]),'const_object_field':([151,161,],[160,166,]),'variable_definition':([56,75,],[76,93,]),'argument':([49,67,],[66,86,]),'object_field':([105,125,],[126,137,]),'argument_list':([49,],[67,]),'const_value':([142,150,155,164,],[145,157,163,167,]),'operation_definition':([0,6,],[7,7,]),'const_object_value':([142,150,155,164,],[147,147,147,147,]),'boolean_value':([85,103,121,135,142,150,155,164,],[101,101,101,101,148,148,148,148,]),'default_value':([132,],[141,]),'selection_set':([0,35,39,51,52,54,57,58,60,62,69,73,74,79,82,84,92,],[3,47,55,68,70,72,78,80,81,83,88,90,91,96,97,98,118,]),'fragment_name':([4,28,],[15,45,]),'object_field_list':([105,],[125,]),'variable_definitions':([39,],[57,]),'field':([8,26,],[27,27,]),'directives':([35,39,45,51,54,57,60,62,74,],[52,58,63,69,73,79,82,84,92,]),'arguments':([35,54,71,],[51,74,89,]),'document':([0,],[10,]),'type':([119,130,],[132,139,]),'fragment_spread':([8,26,],[30,30,]),'directive':([35,39,45,48,51,54,57,60,62,74,],[46,46,46,64,46,46,46,46,46,46,]),'type_condition':([41,44,],[60,62,]),'enum_value':([85,103,121,135,142,150,155,164,],[106,106,106,106,152,152,152,152,]),'value_list':([103,],[121,]),'definition_list':([0,],[6,]),'object_value':([85,103,121,135,],[109,109,109,109,]),'non_null_type':([119,130,],[129,129,]),'value':([85,103,121,135,],[114,122,134,143,]),'variable':([85,103,121,135,],[110,110,110,110,]),'definition':([0,6,],[1,22,]),'variable_definition_list':([56,],[75,]),'name':([8,9,26,36,41,44,49,53,67,77,105,108,119,125,130,151,161,],[35,39,35,54,61,61,65,71,65,95,123,127,61,123,61,158,158,]),'directive_list':([35,39,45,51,54,57,60,62,74,],[48,48,48,48,48,48,48,48,48,]),'selection_list':([8,],[26,]),'const_object_field_list':([151,],[161,]),'fragment_list':([3,],[12,]),'alias':([8,26,],[36,36,]),'const_list_value':([142,150,155,164,],[153,153,153,153,]),'list_value':([85,103,121,135,],[115,115,115,115,]),'list_type':([119,130,],[131,131,]),'operation_type':([0,6,],[9,9,]),'fragment_definition':([0,3,6,12,],[2,13,2,40,]),'inline_fragment':([8,26,],[38,38,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> document","S'",1,None,None,None),
  ('document -> definition_list','document',1,'p_document','parser.py',42),
  ('document -> selection_set','document',1,'p_document_shorthand','parser.py',48),
  ('document -> selection_set fragment_list','document',2,'p_document_shorthand_with_fragments','parser.py',54),
  ('fragment_list -> fragment_list fragment_definition','fragment_list',2,'p_fragment_list','parser.py',60),
  ('fragment_list -> fragment_definition','fragment_list',1,'p_fragment_list_single','parser.py',66),
  ('definition_list -> definition_list definition','definition_list',2,'p_definition_list','parser.py',72),
  ('definition_list -> definition','definition_list',1,'p_definition_list_single','parser.py',78),
  ('definition -> operation_definition','definition',1,'p_definition','parser.py',84),
  ('definition -> fragment_definition','definition',1,'p_definition','parser.py',85),
  ('operation_definition -> operation_type name variable_definitions directives selection_set','operation_definition',5,'p_operation_definition1','parser.py',97),
  ('operation_definition -> operation_type name variable_definitions selection_set','operation_definition',4,'p_operation_definition2','parser.py',108),
  ('operation_definition -> operation_type name directives selection_set','operation_definition',4,'p_operation_definition3','parser.py',118),
  ('operation_definition -> operation_type name selection_set','operation_definition',3,'p_operation_definition4','parser.py',128),
  ('operation_type -> QUERY','operation_type',1,'p_operation_type','parser.py',134),
  ('operation_type -> MUTATION','operation_type',1,'p_operation_type','parser.py',135),
  ('selection_set -> BRACE_L selection_list BRACE_R','selection_set',3,'p_selection_set','parser.py',141),
  ('selection_list -> selection_list selection','selection_list',2,'p_selection_list','parser.py',147),
  ('selection_list -> selection','selection_list',1,'p_selection_list_single','parser.py',153),
  ('selection -> field','selection',1,'p_selection','parser.py',159),
  ('selection -> fragment_spread','selection',1,'p_selection','parser.py',160),
  ('selection -> inline_fragment','selection',1,'p_selection','parser.py',161),
  ('field -> alias name arguments directives selection_set','field',5,'p_field_all','parser.py',167),
  ('field -> name arguments directives selection_set','field',4,'p_field_optional1_1','parser.py',174),
  ('field -> alias name directives selection_set','field',4,'p_field_optional1_2','parser.py',181),
  ('field -> alias name arguments selection_set','field',4,'p_field_optional1_3','parser.py',187),
  ('field -> alias name arguments directives','field',4,'p_field_optional1_4','parser.py',193),
  ('field -> name directives selection_set','field',3,'p_field_optional2_1','parser.py',199),
  ('field -> name arguments selection_set','field',3,'p_field_optional2_2','parser.py',205),
  ('field -> name arguments directives','field',3,'p_field_optional2_3','parser.py',211),
  ('field -> alias name selection_set','field',3,'p_field_optional2_4','parser.py',217),
  ('field -> alias name directives','field',3,'p_field_optional2_5','parser.py',223),
  ('field -> alias name arguments','field',3,'p_field_optional2_6','parser.py',229),
  ('field -> alias name','field',2,'p_field_optional3_1','parser.py',235),
  ('field -> name arguments','field',2,'p_field_optional3_2','parser.py',241),
  ('field -> name directives','field',2,'p_field_optional3_3','parser.py',247),
  ('field -> name selection_set','field',2,'p_field_optional3_4','parser.py',253),
  ('field -> name','field',1,'p_field_optional4','parser.py',259),
  ('fragment_spread -> SPREAD fragment_name directives','fragment_spread',3,'p_fragment_spread1','parser.py',265),
  ('fragment_spread -> SPREAD fragment_name','fragment_spread',2,'p_fragment_spread2','parser.py',271),
  ('fragment_definition -> FRAGMENT fragment_name ON type_condition directives selection_set','fragment_definition',6,'p_fragment_definition1','parser.py',277),
  ('fragment_definition -> FRAGMENT fragment_name ON type_condition selection_set','fragment_definition',5,'p_fragment_definition2','parser.py',284),
  ('inline_fragment -> SPREAD ON type_condition directives selection_set','inline_fragment',5,'p_inline_fragment1','parser.py',291),
  ('inline_fragment -> SPREAD ON type_condition selection_set','inline_fragment',4,'p_inline_fragment2','parser.py',298),
  ('fragment_name -> NAME','fragment_name',1,'p_fragment_name','parser.py',304),
  ('fragment_name -> FRAGMENT','fragment_name',1,'p_fragment_name','parser.py',305),
  ('fragment_name -> QUERY','fragment_name',1,'p_fragment_name','parser.py',306),
  ('fragment_name -> MUTATION','fragment_name',1,'p_fragment_name','parser.py',307),
  ('fragment_name -> TRUE','fragment_name',1,'p_fragment_name','parser.py',308),
  ('fragment_name -> FALSE','fragment_name',1,'p_fragment_name','parser.py',309),
  ('fragment_name -> NULL','fragment_name',1,'p_fragment_name','parser.py',310),
  ('type_condition -> named_type','type_condition',1,'p_type_condition','parser.py',316),
  ('directives -> directive_list','directives',1,'p_directives','parser.py',322),
  ('directive_list -> directive_list directive','directive_list',2,'p_directive_list','parser.py',328),
  ('directive_list -> directive','directive_list',1,'p_directive_list_single','parser.py',334),
  ('directive -> AT name arguments','directive',3,'p_directive','parser.py',340),
  ('directive -> AT name','directive',2,'p_directive','parser.py',341),
  ('arguments -> PAREN_L argument_list PAREN_R','arguments',3,'p_arguments','parser.py',348),
  ('argument_list -> argument_list argument','argument_list',2,'p_argument_list','parser.py',354),
  ('argument_list -> argument','argument_list',1,'p_argument_list_single','parser.py',360),
  ('argument -> name COLON value','argument',3,'p_argument','parser.py',366),
  ('variable_definitions -> PAREN_L variable_definition_list PAREN_R','variable_definitions',3,'p_variable_definitions','parser.py',372),
  ('variable_definition_list -> variable_definition_list variable_definition','variable_definition_list',2,'p_variable_definition_list','parser.py',378),
  ('variable_definition_list -> variable_definition','variable_definition_list',1,'p_variable_definition_list_single','parser.py',384),
  ('variable_definition -> DOLLAR name COLON type default_value','variable_definition',5,'p_variable_definition1','parser.py',390),
  ('variable_definition -> DOLLAR name COLON type','variable_definition',4,'p_variable_definition2','parser.py',396),
  ('variable -> DOLLAR name','variable',2,'p_variable','parser.py',402),
  ('default_value -> EQUALS const_value','default_value',2,'p_default_value','parser.py',408),
  ('name -> NAME','name',1,'p_name','parser.py',414),
  ('name -> FRAGMENT','name',1,'p_name','parser.py',415),
  ('name -> QUERY','name',1,'p_name','parser.py',416),
  ('name -> MUTATION','name',1,'p_name','parser.py',417),
  ('name -> ON','name',1,'p_name','parser.py',418),
  ('name -> TRUE','name',1,'p_name','parser.py',419),
  ('name -> FALSE','name',1,'p_name','parser.py',420),
  ('name -> NULL','name',1,'p_name','parser.py',421),
  ('alias -> name COLON','alias',2,'p_alias','parser.py',427),
  ('value -> variable','value',1,'p_value','parser.py',433),
  ('value -> INT_VALUE','value',1,'p_value','parser.py',434),
  ('value -> FLOAT_VALUE','value',1,'p_value','parser.py',435),
  ('value -> STRING_VALUE','value',1,'p_value','parser.py',436),
  ('value -> boolean_value','value',1,'p_value','parser.py',437),
  ('value -> enum_value','value',1,'p_value','parser.py',438),
  ('value -> list_value','value',1,'p_value','parser.py',439),
  ('value -> object_value','value',1,'p_value','parser.py',440),
  ('const_value -> INT_VALUE','const_value',1,'p_const_value','parser.py',446),
  ('const_value -> FLOAT_VALUE','const_value',1,'p_const_value','parser.py',447),
  ('const_value -> STRING_VALUE','const_value',1,'p_const_value','parser.py',448),
  ('const_value -> boolean_value','const_value',1,'p_const_value','parser.py',449),
  ('const_value -> enum_value','const_value',1,'p_const_value','parser.py',450),
  ('const_value -> const_list_value','const_value',1,'p_const_value','parser.py',451),
  ('const_value -> const_object_value','const_value',1,'p_const_value','parser.py',452),
  ('boolean_value -> TRUE','boolean_value',1,'p_boolean_value','parser.py',458),
  ('boolean_value -> FALSE','boolean_value',1,'p_boolean_value','parser.py',459),
  ('enum_value -> NAME','enum_value',1,'p_enum_value','parser.py',465),
  ('enum_value -> FRAGMENT','enum_value',1,'p_enum_value','parser.py',466),
  ('enum_value -> QUERY','enum_value',1,'p_enum_value','parser.py',467),
  ('enum_value -> MUTATION','enum_value',1,'p_enum_value','parser.py',468),
  ('enum_value -> ON','enum_value',1,'p_enum_value','parser.py',469),
  ('list_value -> BRACKET_L value_list BRACKET_R','list_value',3,'p_list_value','parser.py',475),
  ('list_value -> BRACKET_L BRACKET_R','list_value',2,'p_list_value','parser.py',476),
  ('value_list -> value_list value','value_list',2,'p_value_list','parser.py',482),
  ('value_list -> value','value_list',1,'p_value_list_single','parser.py',488),
  ('const_list_value -> BRACKET_L const_value_list BRACKET_R','const_list_value',3,'p_const_list_value','parser.py',494),
  ('const_list_value -> BRACKET_L BRACKET_R','const_list_value',2,'p_const_list_value','parser.py',495),
  ('const_value_list -> const_value_list const_value','const_value_list',2,'p_const_value_list','parser.py',501),
  ('const_value_list -> const_value','const_value_list',1,'p_const_value_list_single','parser.py',507),
  ('object_value -> BRACE_L object_field_list BRACE_R','object_value',3,'p_object_value','parser.py',513),
  ('object_value -> BRACE_L BRACE_R','object_value',2,'p_object_value','parser.py',514),
  ('object_field_list -> object_field_list object_field','object_field_list',2,'p_object_field_list','parser.py',520),
  ('object_field_list -> object_field','object_field_list',1,'p_object_field_list_single','parser.py',528),
  ('object_field -> name COLON value','object_field',3,'p_object_field','parser.py',534),
  ('const_object_value -> BRACE_L const_object_field_list BRACE_R','const_object_value',3,'p_const_object_value','parser.py',540),
  ('const_object_value -> BRACE_L BRACE_R','const_object_value',2,'p_const_object_value','parser.py',541),
  ('const_object_field_list -> const_object_field_list const_object_field','const_object_field_list',2,'p_const_object_field_list','parser.py',547),
  ('const_object_field_list -> const_object_field','const_object_field_list',1,'p_const_object_field_list_single','parser.py',555),
  ('const_object_field -> name COLON const_value','const_object_field',3,'p_const_object_field','parser.py',561),
  ('type -> named_type','type',1,'p_type','parser.py',567),
  ('type -> list_type','type',1,'p_type','parser.py',568),
  ('type -> non_null_type','type',1,'p_type','parser.py',569),
  ('named_type -> name','named_type',1,'p_named_type','parser.py',575),
  ('list_type -> BRACKET_L type BRACKET_R','list_type',3,'p_list_type','parser.py',581),
  ('non_null_type -> named_type BANG','non_null_type',2,'p_non_null_type','parser.py',587),
  ('non_null_type -> list_type BANG','non_null_type',2,'p_non_null_type','parser.py',588),
]
