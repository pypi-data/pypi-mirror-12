Metadata-Version: 1.1
Name: django-mongolog
Version: 0.3.2
Summary: A simple mongo based logger
Home-page: https://github.com/gnulnx/django-mongolog
Author: John Furr
Author-email: john.furr@gmail.com
License: GPL V3
Download-URL: https://github.com/gnulnx/django-mongolog/tree/0.3.2
Description: MongoLog
        ========
        
        MongoLog is a simple Mongo based log handler that can be easly used
        with standard python/django logging
        
        Quick start
        ----------- 
        
        1. Add "mongolog" to your INSTALLED_APPS like this::
        
            INSTALLED_APPS = (
                ...
                'mongolog',
            )
        
        2. Add the MongoLoggerHandler to your LOGGING config::
        
            LOGGING = {
                'handler': {
                    'mongolog': {
                        'level': 'WARN',
                        'class': 'mongolog.MongoLogHandler',
                        'connection': 'mongodb://localhost:27017/'
                    },
                },
                'loggers': {
                    'django': {
                        'handlers': ['console', 'mongolog'],
                        'level': 'DEBUG',
                        'propagate': True
                    },
                },
            }
        
        3) Start your management shell::
        
            ./manage.py shell
        
        4) Create a couple of log entries::
            
            import logging
            logger = logging.getLogger(__name__)
        
            logger.debug("A debug message")
            logger.info("An info message")
            logger.warning("A warning message")
            logger.error("An error message")
            try:
                raise ValueError("Bad Value")
            except ValueError as e:
                logger.exception("An exception message")
        
        5) Now log into your mongo shell::
        
            mongo
            > use mongolog
            > db.mongolog.find({}).sort({'time.utc': -1}).limit(3)
        
            If you setup your logger with level 'WARN' like the example then
            you should now see three log entries corresponding to the warning, 
            error, and exception log statements.  However, you will not see the 
            debug and info statements unless you adjust the mongolog handler level 
            down to 'DEBUG'.
        
Platform: UNKNOWN
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.0
Classifier: Programming Language :: Python :: 3.1
Classifier: Programming Language :: Python :: 3.2
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Framework :: Django
Classifier: Framework :: Django :: 1.4
Classifier: Framework :: Django :: 1.5
Classifier: Framework :: Django :: 1.6
Classifier: Framework :: Django :: 1.7
Classifier: Framework :: Django :: 1.8
Classifier: Framework :: Django :: 1.9
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
