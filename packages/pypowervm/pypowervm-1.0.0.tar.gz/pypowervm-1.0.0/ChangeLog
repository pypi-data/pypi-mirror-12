CHANGES
=======

1.0.0
-----

* Type-Agnostic Wrapper Search
* Scrub orphan mappings/storage by LPAR ID
* Subtasks should not lock against the wrapper entry
* Migrate wwpn generation API to REST
* Build .mo files for all languages
* pt-BR locale support
* Handle when samples just started
* Remove <op>_npiv_port_mappings
* Update TaggedIO.ConsoleType of an IBMi VM
* synchronous option for power_on
* Translation changes for drop2
* Support asynchronous Job completion
* Add messages to 4XX exceptions
* Add support for setting partition ID on creation
* Log levels not present on oslo_log.log module
* Add vios_id and vios slot numbers to storage mappings
* Add getter and setter property for IsServicePartition
* Add DefaultHardwarePageTableRatio property to System wrapper
* Add mapping client wwpns comparison without order
* Refresh RSTs, prepare for initial stable release
* gen_match_func was broken for prefixes
* BootMode/KeylockPos are different for power/LPAR
* Support BootMode on LPAR/VIOS
* Add IPLSource and Keylock strings to power on task
* Link Aggregation IO Choices to VIOS wrapper
* Intermediate implementation for building WWPN pair
* Remove SSP LUs by UDID (not exact match)
* parent on VSCSIMappings & backing_storage (pg83)
* Fall back to LUARecovery if pg83 not in PV
* Use oslo_log instead of python logging
* Improve the find vios by port map
* Update processor compatability modes
* Scrub: Ignore PVs, warn about ignores
* RMC IP address on LPAR/VIOS (.rmc_ip)
* IsMaster => IsPowerVMManagementMaster
* Fix FeedTask return when there are no post-execs
* Get pg83 descriptor from PV (not LUARecovery)
* Refactor data files
* Interface to invoke lua inventory
* _image_lu_in_use tolerates orphan LU linked clones
* Return partition IOSlot PCI data as ints
* Add phys_vols getter to VIOS wrapper
* add_lpar_storage_scrub_tasks accepts list of lpar id
* Add IsMaster attribute support to managed system wrapper
* Only count trunk adapters as orphan veas
* Provide EntryWrapper.get()
* EntryWrapper.refresh(use_etag=True), retry w/False
* Make Adapter.__init__'s Session arg optional
* Don't dump the log stash on 412 (etag mismatch)
* Translated files for other languages
* Simplify and correct vterm code
* Check for load balance on remove
* Add support for master mode jobs
* Add find vios/port by vfc wwpns
* Interface to build migration mapping string
* Fix resize validations based on lpar power state
* Update attributes of IBMi VM
* VFCClientAdapter EntryWrapper
* Comprehensive storage scrubber
* Update mapping semantics in migration
* Add resize validations
* Check for extant LPARs before scrubbing
* Add py34-specific pep8 (flake8) run to tox
* Translation Changes
* pypowervm.tasks.power.BootMode enumeration
* Include the useful part of a 500 in the exception
* Add documentation to the EventHandler
* Ensure Wrapper subtype to *Getter init
* Use proper netbridge UUID when removing from peer
* Derive should take into account existing maps
* Support Orphan VLANs
* Update BasePartition/LPAR child element ordering
* Ensure orderless WWPNs in find_maps
* Add check for WWPNs on system
* Add MigrationFailed exception back for migration error handling
* Give scrub tasks unique 'provides'
* LUA good discovery conditions
* Move vfc_mapper to FeedTask
* Scrub orphan maps and their storage
* Fix some message/translation issues
* Use entry_transaction decorator in storage.py
* Extend find_maps when no lpar-id is passed
* Add babel config
* Expand LPARWrapper validation framework
* find_stale_lpars considers VFC mappings too
* discover_hdisk scrubs all (and only) stale LPARs
* find_stale_lpars: VSCSI mappings orphaned LPAR IDs
* Only set trunk priority on CNA create if it is specified
* Change the default vendor from IBM to OTHER
* Unit tests for trunk priority on CNA bld method
* Fix trunk priority setter bug with CNA.bld() method
* Don't scrub Logical Units
* xag arg can be any iterable
* Increase logging in retry path
* Update timeout paradigm
* Fix traits in AdapterFx & SessionFx test fixtures
* Proper returns from FeedTask.execute()
* Add python-olso-context apt package dependency
* Override default VIOS POST timeout to 5 minutes
* discover_hdisk scrubs & retries if it "fails"
* UUIDFeedGetter for custom UUID lists
* Timeout for create, update, WrapperTask, FeedTask
* ContextThreadPoolExecutor propagates oslo_context
* Allow retrieval of the helpers on the adapter
* Clean up logging in unit tests
* Add LPAR.RemoteRestartCapable, RemoteRestartState
* Add hash to XAG entity
* Add IBMi support to LPAR builder
* Fix error message spelling error
* Move to updated vterm function
* Increase logging in vfc_mapper add_map
* Scrub stale LPAR storage
* Logging from add_functor_subtask
* Subtask/WrapperTask results passed along
* Add trunk priority property to CNA entry wrapper
* Allow stale mappings within vfc_mapper
* Fix proc units calculations for lpar builder
* Add delay and increase retry count on transactions
* Remove vlan_ids as argument to bld on SEA and NetBridge
* Change ms wrapper to support proc units as floats
* Check to support add/remove hw
* Add vSwitch ID and VSI properties to CNA wrapper
* Order dependence in the client adapter wwpns
* Update add_npiv_mappings to return only new maps
* Add enum for SEA states
* Documentation update on network for CNA creation on a VIOS
* Add additional capabilities support
* Add compute_ltm override to pcm preferences
* Remove invalid 'volume' exceptions
* Add validation utils for LPARWrappers
* Expose the SEA property ConfigurationState
* Add control channel properties to SEA and NetBridge
* Allow Tasks to be run after FeedTask.execute
* Pass in timeout as is instead convert to str
* WrapperTask/FeedTask allow empty Subtasks
* Proper mocking of refresh/update in FeedTaskFx
* Raise exception if reading session auth file fails
* Customizable fixtures (WrapperTaskFx, FeedTaskFx)
* Add VariedOn as a property of TrunkAdapter
* add_map return value
* validate LPAR proc compat against host proc compat modes
* FeedTask and FeedGetter
* Add management console wrapper
* Add Load Balancing to Network Bridger
* Remove python-pbr less than dependencies - we are compatible with newer versions (that are required by openstack)
* Transaction and Subtask
* @pypowervm.utils.transaction.entry_transaction
* Fix VIOS jobs bug
* Add python-taskflow as dependency to debian control file
* Provide add/remove maps more broadly
* EntryWrapperGetSpec
* Refactor LU removal
* parallel_updates accomodates zero wrappers
* scsi_mapper.remove_maps, vfc_mapper.remove_maps
* Switch to backing_port in vfc_mapping
* Add retry logic to NPIV parallel mapping
* Multi thread VIO updates in vFC mapping
* Change IOSlot bld methods to take index instead of name
* Fix py34 automated tests
* Task for deleting storage from a VG
* Added host memory overhead
* Remove WWPN key generation
* Support NPIV mappings without WWPNs specified
* vfc_mapper.find_maps by LPAR UUID
* Allow for the creation of a ProfileIOSlot on a base partition
* VFCMapping lpar_id and find_maps
* Rename pypowervm.tasks.wwpn to vfc_mapper
* Update the requirements and test requirements
* Find lowest trunk/load group for new VLAN
* Support removal of Arbitrary PVID
* Increase upper limit of port mappings
* Support Service Unavailable in vios retry helper
* Change oslo.* imports to oslo_*
* Fix pbr requirement
* UseNextAvailableHighSlotID for CNA & TrunkAdapter
* Index VSCSI Mappings by LPAR ID/UUID, storage UDID
* Order the load groups based on PVID
* Enable load_sharing on the network bridge wrapper
* Allow for setting of io_slots on BasePartition wrapper
* Expand Shared Proc Pool Support
* Add current() property to PartitionMemoryConfiguration
* find_maps can include orphaned mappings
* PVID check on Trunk Adapter query
* Incorrect device name for IOAdapter
* Update datetime formatter for LTM feed
* Set PartitionUUID value
* LPAR: Keylock, designated IPL source, tagged I/O
* Tolerate any version of psutil
* Accept SSLError in Session UT (PEP0476)
* Allow the uuid to be set via lpar builder
* Minor metrics fix
* Configurable max_len in sanitize_file_name_for_api
* Add set uuid capability on LPAR wrapper
* Mixin to set Wrapper UUID
* Ignore orphaned mappings

0.0.2
-----

* Add support for Python 3.4
* Add slot name and index to properties of base_partition io slot
* VSCSIMapping.bld_from_existing ignore TargetDevice
* Add shared proc pool support to phyp metrics
* Separate metric cache concern
* Tolerate storage-less SCSI mappings in find_maps

0.0.1
-----

* setup.cfg updates, add manifest file for packaging
* Provide a version file. Mark version 0.0.1
* Refactor parse of latest metric data
* find_maps by storage element
* Enable entry deletion on wrapper
* Update monitors to read_by_path
* Add LPAR Metric Cache
* VSCSIMapping.bld_from_existing to clone storage
* Reconcile metrics to per VM basis
* Enable sonar scans through tox
* Handle no response in vios_busy helper
* add_vscsi_mappings detects existing mapping
* SCSI mapper search and remove by ID or UUID
* Add 'name' @property to VOptMedia
* Add tasks for migration related operations
* Remove .pyc files for tox runs
* SCSI ops can take VIOS wrapper or UUID
* Retry decorator supports modifying arguments
* Support PCM Data Sources
* Refactor convert_uuid_to_pvm
* System wrapper support for IOSlots and WWPN under assoc io config
* Attribute order changes for sharedprocessorpool
* scsi_mapper.find_maps, gen_match_func
* Adapter.read_by_href needs to preserve querystring
* Create needed files to build pypowervm debian package
* Fix the find peer algorithm for trunk adapters
* Changes for attribute ordering for Cluster
* Change CNA to return wrapper
* Improve LUA result parsing
* Support stdout and xmlresult in lua_recovery
* Child ordering for capabilities & shared proc cfg
* Util method to sanitize partition name
* Remove duplicate ITLs on discover_hdisk
* Remove managed_system.find_entry_by_mtms
* Clear TTY on new VNC
* Accomodate IsManagementPartition
* Limit storage upload to three parallel operations
* Util method to generate sanitized file name based
* Add branch for empty Stdout in hdisk
* Fix close issue if no tty
* Remove the psutil kill on vterm temporarily
* Provide 'lazy' file copy for storage tasks
* Initial VNC Terminal Enablement
* Sonar: Factor out code duplication
* Sonar: Module docstrings
* Implement EntryWrapper.create()
* Fixes for SEA element ordering
* Correct monitor test case
* Anonymous CHILD search (no ROOT UUID)
* href utils and Atom base class for Entry & Feed
* Add unordered elements to volume groups
* Remove redundant adapter param
* Adapter linked from Response, Element*, Entry*
* Add hdisk removal job
* Add 'active' pfc ports in vios wrapper
* Add wrapper support for monitoring
* Add state enumerations to base partition
* Fix additional VLANs bug in network_bridger
* Add VLAN path for network bridger
* Add rmdev job to traits
* Embed traits in entities.Entry and .Element
* Fix upload via FIFO pipe error
* Add a wrapper for HttpErrorResponse
* Incorporate X-MC-Type into Session and APITraits
* Fix vterm task
* Add dynamic VLAN trait
* Reconcile xags in paths and args
* Support new file upload mechanism
* Update attrib on VFC Mappings
* Fix the update wrapper for duplicate groups
* Add support for lpar profile sync
* Provide initial refactor of network bridger
* Add trait for colocation to PowerVM API Server
* Fix suffix bug
* Enable file-based Session authentication
* Fix Accept header for quick prop with query params
* Omit ?group=None for 'quick' and 'do' URIs
* Support modification in wrappers for VLANs
* Make LPARBuilder work for VIOS
* Remove 'Enum' suffix from all enumerations
* Remove pypowervm.wrappers.constants
* get_req_path_uuid can extract the ROOT UUID
* Remove obsolete pypowervm.wrappers.constants vars
* Get rid of obsolete xag-related constants
* HTTPStatusEnum
* LUAStatusEnum, LUATypeEnum
* Bug fixes for wwpn API
* Remove the cna_uris from base_partition
* Get rid of top-level Partition properties
* BasePartition
* Initial API Traits configuration
* LPAR.assoc_sys_uuid
* Remaining support for happy path NetBridge bld()
* Support related_href property
* Ensure calculated proc units is between min/max
* Update related href build to not include groups
* Return the vOpt on the upload
* Change scsi mapper to work against storage elems
* Adapter.create and .delete don't accept xags
* EntryWrapper.search supports CHILD
* Remove attr parameter from standardizer
* Fix the SCSI mapping function
* EntryWrapper.search supports extended attr groups
* Make group=None the default for read/update
* Provide locks on storage operations
* Handle multiple calls down into scsi_mapper
* Make *Wrapper.type_and_uuid private
* Resolve sonar issues on adapter.py
* Refactor extended attribute group enum pattern
* Add assigned virtual io server support to NetBridge bld()
* Add implementation for removing hdisk
* Fallback search by looping through GET feed
* Add support to remove physical volume mappings
* Quote special characters on EntryWrapper.search
* Implement LU.__hash__
* pypowervm.tasks.scsi_mapper.remove_lu_mapping
* Additional vSwitch Attributes
* LUs are equal if their names and UDIDs are equal
* remove_lu_linked_clone: update is optional
* Remove LU Linked Clone (remove_lu_linked_clone)
* Add in non-included schema collections constants
* Create the vSwitch on the client CNA create
* Add bld() classmethod to NetBridge
* Round LU size up to 2dp
* Provide virtual switch creation on the wrapper
* Create LU Linked Clone (crt_lu_linked_clone)
* Include VIO mapping functions
* Improvements to get_req_path_uuid
* Add support for SRR and Proc Compat
* Provide WWPN mapper
* Fix adapter read when not using caching
* Add LPAR element ordering
* Provide additional WWPN utilities
* Logical Unit Type support
* upload_new_lu: create and populate an SSP LU
* Add support for PFC query on VIOS
* upload_new_vdisk/vopt: crt_vdisk/_upload_stream
* Refactor upload/storage tasks into tasks.storage
* Remove crt_* methods from logical_partition
* Move the storage adapters to the correct location
* SCSI Mapping Logic in pypowervm
* Add lpar availability priority to builder
* Implement LU removal: tasks.cluster_ssp.rm_lu
* Implement LU creation: tasks.cluster_ssp.crt_lu
* Add lpar builder and standardizer
* Rename pypowervm.jobs to pypowervm.tasks
* Use QName to parse Element tag/namespace
* sonar: make backslash-containing strings raw
* sonar: python:S1721: remove unnecessary parens
* sonar: shorten method name set_dedicated_test_pro-
* sonar: shorten method name get_job_response_excep-
* Scrub UT setUp/tearDown methods
* Consistent float get/set for GB storage properties
* LU.bld()
* Child element ordering for LU (LogicalUnit)
* VG.bld()
* Fix Wrapper.update to use only path (not href)
* Element ordering for storage.VG
* PoC: exploit implicit child ordering for Node
* Order-gnostic insertion of a child element
* Update to utilize new wrapper update method
* EntryWrapper.update takes xag, returns new wrapper
* EntryWrapper.update(adapter)
* Add LPAR element wrappers and builders
* search and refresh in EntryWrapper
* Support Virtual FC Mappings
* Provide WWPN generation
* Maintainability of VSCSIMapping.backing_storage
* Provide mappings for PV and LU
* Enable Adapter.search(SSP, name='...')
* Adapter.search(wrap_cls, negate=False, key=value)
* Minor fixes for XAG and schemas
* Provide hdisk discovery utility
* @pvm_type, bld(), tersify, privatize
* _element=>element, document for_propname
* Wrappers wrap(entry/resp/el), __init__(fields...)
* Provide I/O hardware getters
* Missing wrapper property: warning=>debug
* Move ClientNetworkAdapter, shorten names phase I
* crt_vnet => VirtualNetwork.new_instance()
* crt_cna => ClientNetworkAdapter.new_instance()
* Provide VLAN provision optimization
* Add retry to VLAN operations
* Support delete VLAN in the API
* Wrapper._get_val_{type}
* Allow additional parameters on power on / off
* Cluster/SharedStoragePool creation
* Add network_bridger baseline
* Clean up of upload_lv components
* Framework & PoC for construction of fresh wrappers
* Provide dev_name and vio_uri on SEA
* Sync load groups back to Network Bridge
* Fix VolumeGroup capacity numbers
* Provide crt_load_group method
* Provide helper function to list all VLANs
* Add additional attributes to virtual_io_server
* Correct SSP Repository
* Add helper utility methods to network wrappers
* Add function to find a wrapper from a list
* Add NetworkBridge root element to network
* Provide mtms string method
* Support MTMS query in Managed System
* Fix default response checker method
* Introduce Cluster, Node, MTMS wrappers
* Updates the create network adapter to succeed
* LogicalUnit Wrapper & SSP getter
* Introduce SharedStoragePool Wrapper
* Un-@property & UT hdisk_reserve_policy, _from_uuid
* Add retry decorator
* Add new close vterm method
* Updates the Volume Groups to use new wrapper props
* Add setters for vdisk
* Review Comment updates for Modifiable Lists
* Utilize Element Lists
* Add constants for extended attribute groups
* Add etags to feeds
* Add upload cleanup method
* SCSI Mappings group added to parent element
* Correct CDATA handling in adapter
* Updating logical_partition for new property
* Fix the job code to use properties
* Handle absent etag for entry
* Update some constants in the wrappers
* Fix @property getters in managed_system wrapper
* Provides wrappers to the File API
* Change calls to get_name() to use properties
* Add feeds to load_from_response
* Add etag to EntryWrapper and response loader
* Convert wrapper getters to @propertys
* Adding client network adapters
* Updating the sonar properties
* Updating the sonar properties
* Provide a group on the scsi mappings
* Initial seed of pypowervm API
* Initial empty repository
