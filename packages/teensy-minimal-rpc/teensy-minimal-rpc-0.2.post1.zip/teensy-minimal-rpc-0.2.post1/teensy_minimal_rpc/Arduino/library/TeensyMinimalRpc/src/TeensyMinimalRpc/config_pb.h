
/* #########################################################################
 * [2015-11-30 12:17:28.852000] THIS FILE IS AUTOGENERATED - DO NOT EDIT!
 * ######################################################################### */

/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.2 at Mon Nov 30 12:17:28 2015. */

#ifndef PB__TEENSY_MINIMAL_RPC__CONFIG_PB_H_INCLUDED
#define PB__TEENSY_MINIMAL_RPC__CONFIG_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
/* Struct definitions */
typedef struct _teensy_minimal_rpc_State {
    uint8_t dummy_field;
} teensy_minimal_rpc_State;

typedef struct _teensy_minimal_rpc_Config {
    bool has_serial_number;
    uint32_t serial_number;
    bool has_baud_rate;
    uint32_t baud_rate;
    bool has_i2c_address;
    uint32_t i2c_address;
} teensy_minimal_rpc_Config;

/* Default values for struct fields */
extern const uint32_t teensy_minimal_rpc_Config_baud_rate_default;

/* Initializer values for message structs */
#define teensy_minimal_rpc_Config_init_default   {false, 0, false, 115200u, false, 0}
#define teensy_minimal_rpc_State_init_default    {0}
#define teensy_minimal_rpc_Config_init_zero      {false, 0, false, 0, false, 0}
#define teensy_minimal_rpc_State_init_zero       {0}

/* Field tags (for use in manual encoding/decoding) */
#define teensy_minimal_rpc_Config_serial_number_tag 1
#define teensy_minimal_rpc_Config_baud_rate_tag  2
#define teensy_minimal_rpc_Config_i2c_address_tag 3

/* Struct field encoding specification for nanopb */
extern const pb_field_t teensy_minimal_rpc_Config_fields[4];
extern const pb_field_t teensy_minimal_rpc_State_fields[1];

/* Maximum encoded size of messages (where known) */
#define teensy_minimal_rpc_Config_size           18
#define teensy_minimal_rpc_State_size            0

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
