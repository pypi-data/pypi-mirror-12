CHANGES
=======

0.1.0
-----

* Revise cluster_add_nodes action's behavior
* Updated from global requirements
* Mark branch as 0.1
* Make policy related DB query project_safe
* Zone placement policy
* Check grace_period before use it
* Make profile related DB query project_safe
* Add project_safe param for cluster/node load
* Change the repositories from stackforge to openstack
* Update .gitreview for new namespace
* Make node related DB queries project safe
* Make all cluster DB queries project_safe
* Remove two useless DB API interfaces
* TODO item for actions API
* Make 'grace_period' and 'destroy_after_deletion' work
* Make deletion policy work for CLUSTER_DEL_NODES action
* Add owner properties for profile object
* Add a TODO item
* Updated from global requirements
* add a placement-policy to enable vSphere DRS functions
* Make to_dict method work for deleted cluster
* Add more check to node functional test
* Revise nova server get_details call
* Updated from global requirements
* Add a TODO item about document
* Make deletion policy work for cluster resize action
* Temporarily disable exception logging
* Revise node index assignment
* Add DB API to get next index from cluster
* Updated from global requirements
* Add batch constraint for cluster operations
* Docstring for cluster actions
* Docstring for node actions
* Updated from global requirements
* Rename driver test case folder
* Revise data passing for LB policy
* Remove resize doc from TODO items
* Fix errors in building API docs
* Reorganize getting-started doc
* Add API doc for cluster resize
* Revisit and revise TODO list as necessary
* Do rule validation when validaing alarm triggers
* Fix alarm rule parsing behavior
* Fix sample yaml for threshold alarm
* Cleanse functional test
* Add functional test for node operations
* Refresh node membership for node actions
* Optimize cluster action implementation
* Remove two TODO items in cluster module
* Rename batch policy to be senlin.policy.batching
* Fix cluster update behavior
* Reset cluster status before RETRY
* Fix node membership refresh when adding nodes
* Fix cluster node membership refresh
* Quick return from create nodes if count 0
* Fix action constructor
* Fix sample nova server profile
* Optimize node actions
* Revise policy attach action default value
* Further optimize cluster action
* Optimize cluster action construction
* Add functional test for lb_policy
* Add functional test for webhook
* Install python-senlinclient using pip by default
* Revise ssl filter in api-paste.ini
* Use correct cluster_id in NodeAction.execute
* Add py3 support to setup.cfg
* Update policy_types documentation
* Remove ERROR_ON_CLONE references
* Updated from global requirements
* Update desired_capacity of target cluster after node creation
* Fail to create node when port is None
* Enable node-update operation
* Add LOGs to engine service entry points
* Add functional test for cluster resize
* Delete error nodes first in deletion_policy
* Fix schema and template call for os.heat.stack profile
* Change ignore-errors to ignore_errors
* Remove a TODO item in cluster detach policy
* Get 'count' from action.inputs instead of action.data
* Remove local version of ssl middleware
* Treat action retry as a warning instead of an error
* Remove PolicyAction class
* Add functional test for scaling policy
* Fix two bugs in lb policy
* Updated from global requirements
* Fix a bug in _create_nodes
* Update TODO list
* Clean node lb info after detaching lb_policy
* Remove extra comma
* Fix a bug about add/del action dependency
* Fix event log errors in action modules
* Fix a bug of cluster policy detach
* Rework context initialization in action module
* Fix trust parameter error
* Update locale string
* Add functional test for cluster scale in/out
* Fix a bug in cluster scale in action
* Cluster action test case (5)
* Cluster action test case (4)
* Remove context from dispatcher and scheduler
* Use versioned profile spec in functional test
* Check action status before lock it
* Cluster action test case (3)
* Reinitialize action properties after locking it
* Do some source cleanup
* Cluster action test case (2)
* Revised SDK driver with unit test case
* Cluster action test case (1)
* Add test case for Node Action
* Removed some requirement entries
* Delete dead code in sdk module
* Fix cluster status refresh error
* Fix a bug in _wait_for_dependents method of ClusterAction
* Revise policy_type functional test
* Unit test case for keystone v3 driver
* Updated from global requirements
* Fix functional test for policy type listing
* Revise doc to reflect latest changes
* Fix trust-based connection building in policy
* Make profile schema versioned
* Sample profiles with type and version keys
* Add timeout validation for server creation
* Fix trust-based connection building
* Add 'singleton' property to base policy
* Tweak connection parameter building for profiles
* Remove half-baked profile types
* Expose event choice from scaling policy
* Invoke parse_exception directly to handle exception in sdk driver
* Misc tweaking to action behavior
* Format timestamp for event list
* Rename policy file
* Rename policy type names
* Add 'description' to policy spec
* Add 'type' and 'version' to policy spec
* Reorg sample policies dir
* Tweak registry dump function
* Remove ActionNotSupported exception type
* Updated from global requirements
* Improve devstack plugin
* Make triggers project-safe
* Avoid passing rich object when reschedule
* Change default names for actions
* Handle exception in neutron_v2 module
* Revise response of action_get api interface
* Add network support for os.nova.server profile
* Handle SDK exception of sdk module
* Forbid deletion of actions in use
* Tweak runtime data of clusters
* Refactor action constructor
* Remove a TODO item
* Enable triggers for stevedore
* Fix ceilometer alarm time constraints
* Fix policy json file for project checking
* Fix errors in sample trigger spec and db model
* Add functional test for listing policy_types
* Add keystone driver plugin for functional test
* Updated from global requirements
* Fail webhook creation if url is not correctly created
* Updated from global requirements
* Use senlin generic driver to manege keystone driver
* Removal of debugging code
* Catch all the driver exceptions on node engine layer
* Minor tweaks to the drivers base
* Define _build_connection_params in policy base module
* Fix webhook triggering logic
* API layer support for triggers
* Remove context usage from driver layer
* Updated from global requirements
* Handle exceptions in keystone_v3 driver
* Add fake nova_v2 driver for functional test
* Updated from global requirements
* Replace python-openstacksdk with openstacksdk
* Use wait_for_delete to wait for nova server deletion
* Fix a bug in trust middleware
* Fix three bugs in webhook related workflows
* Rework some interfaces in keystone_v3 driver
* Ensure policy enforcement level is less equal than 100
* Check cluster size constraint before doing node join/leave
* Check wait_for_lb_ready method's return value
* Correct description about marker option in getting_started doc
* Mock correct cred_get function in unit test of lb_policy
* Set cluster status to warning after deletion failed
* Use correct return value in cluster_action module
* Fix misleading document for webhooks usage
* Fix some exception mapping miss
* Add functional test for listing profile_type
* Revise cluster-scale-in/out default value
* Check size limitation in cluster scale in/out action
* Fix some test cases about illegal sort_dir
* Treat return value of sdk function call as object
* Use Senlin generic driver to manage ceilometer_v2 driver
* Unit test for events in service engine
* Updated from global requirements
* Use a workaround to make lb_policy work
* Fix a bug in lbaas driver
* Test case for lb_delete with no physical objects
* Fix action base module test case
* Fix a typo in lbaas driver plugin
* Fix gate job of Senlin functional test
* Handle exceptions which happen in heat driver
* Updated from global requirements
* Unit test for actions in engine service
* Modify parse_exception method
* Remove 'wrap_exception' function
* Unit test for custom action module
* Use Senlin generic driver to manage openstack lbaas driver
* Replace flavor_get_by_name with flavor_find
* Make ignore_missing default to False
* Updated from global requirements
* Revised node implementation with test cases
* Webhook API optimization with test cases
* Profile types API test case fix
* Policy types API test case fix
* RPC client support to triggers
* Unit test for webhook functions in RPC client
* Use Senlin generic driver to manage neutron_v2 driver
* Complete the unit test of os.nova.server profile type
* Fix misleading documentation for associating metadata
* Polish stack profile unit test
* Use Senlin generic driver to manage heat_v1 driver
* Delete trust resource implementation
* Add test case for 'call' and 'cast' for rpcclient
* Add test case for LoadBalancer driver(2)
* More test cases for registry module
* Fix cluster rt data operation
* Fix error in serializers with test case
* Add server_metadata_get and server_metadata_update method
* Add two more test cases to cover environment module
* Fix webhook middleware test case
* Branch revision for 100% coverage
* Fix tox environment for coverage test
* Use Senlin generic driver to manage nova_v2 driver
* Test case for base action module
* Check spec key correctly in os.nova.server profile
* Rework some interfaces in sdk and keystone_v3 drivers
* Updated from global requirements
* Add cloud_backend_name option into Senlin config
* Revise webhook unit tests
* Test case for scaleutils
* Test case for middlewre filters
* Unit test for openstack api version controller
* Revised Senlin lock implementation
* Revise policy enforcement level implementation
* Test case for common policy enforcer
* B64encode user_data content before handling it to nova
* Revise senlin exception handling from SDK side
* Add environment support for driver plugin
* Fix errors in policies API and test cases
* Fix nodes API and test cases
* Fix profiles API and test cases
* Tune scaling_out policy unit test
* Improve event unit test coverage
* Improve trigger base test case coverage
* Fix version middleware and test case
* Tune scaling_in policy unit tests
* Delete the AES based crypto module
* Unit test for base policy module
* Fix deletion policy candidate selection
* Fix alarm trigger validation
* Add unit test for different HM type
* Added one unit test for webhook store
* Fix coverage test
* Revise server delete-wait logic
* Polish the nova server profile unit test
* Add test for heat_v1 driver
* Engine support for triggers
* Ceilometer alarm trigger support
* Start point of Senlin functional tests
* Rename a folder under unit test
* Add SenlinTest profile type
* Fix some errors in profile unit test
* Base trigger implementation
* Do not update other properties if exception happens
* Add config reload capability to wsgi
* Changes literal ation names to consts.<action_name> to make action creation consistent
* Updated from global requirements
* Fix UnboundLocalError when updating a cluster without nodes
* Relocate Senlin unit tests
* Specify exception type when adding node from cluster
* Environment support for trigger types
* Updated from global requirements
* Make node-update support more parameters
* Utility function for type and version checking
* Resolve TypeError of cooldown_inprogress when cluster_scale_out
* Fix node join/leave cluster error
* Check profile type matching earlier
* Cleanse health policy stubs in cluster
* Fix some spelling misses
* API docs for webhooks
* Update TODO list
* DB support for triggers
* Make HTTPAccepted exception response in JSON format
* Unit test cases for nova driver
* Unit test case for ceilometer v2 driver
* Add test case for Nova Server Profile
* Fix cluster-resize operation param checking in server side
* Fix some time related function calls
* Refactor plugin name checking logic
* Add test case for LoadBalancingPolicy(2)
* Add test case for Trust Middleware
* Add test case for LoadBalancingPolicy
* Updated from global requirements
* Node module test case part2
* Sample triggers using ceilometer alarm
* Revise some TODO items
* Fix image finding call
* Refactor random heat stack name
* Fix trust listing
* Transfer roles of context as inputs to create trust
* Fix test case of environment
* enable scheduler_hints when nova server create
* Use correct input parameter when detach policy
* Complete test case of policy base module
* Move webhook test case to tests/engine directory
* Fix environment test case error
* Add test case for LoadBalancer driver(1)
* Updated from global requirements
* Remove some unused dependencies
* Add a new exception type 'ResourceUpdateFailure'
* Updated from global requirements
* Add test case for policy base module and fix a bug
* Add node module test case part1
* Updated from global requirements
* Fix sdk service credentials
* Add a utility function for random name generation
* Fix environment intialization logic
* Refactor profile/policy schema retrieval
* Add test case for webhook middleware
* Test case for neutron_v2 driver(2)
* Change spec validation exception type
* Revised design document for webhooks
* Remove some not-so-useful internal exception types
* Test case for neutron_v2 driver(1)
* Rework webhook implementation
* Move webhook into engine
* Remove requirements.txt from tox.ini
* Fix errors in trust checking
* Updated from global requirements
* Fix parameter name passed to trust operations
* Stop stealing keystonemiddleware options
* Fix trust creation error
* Fix trusts initliazation problem
* Updated from global requirements
* Revise devstack README.rst with new git repo
* Add test case for Heat Stack Profile
* Using openstacksdk function call in keystone_v3 driver
* Updated from global requirements
* Temporarily unmask nova exception
* Add user/project/domain to policy objects
* Updated from global requirements
* Remove initilization of auth and session attrs in some drivers
* Updated from global requirements
* Remove tox and requirements hacking
* Add test case for ScalingOutPolicy
* Use policy defaults when not specified for attach
* Updated from global requirements
* Minor tweak to policy attach flow
* Add test case for ScalingInPolicy
* Add test case for webhook module
* Use LOG.exception instead of LOG.error for debug
* Getting Started Doc (4)
* Rename 'perm' argument of profile_create method to 'permission'
* Getting Started Doc (5)
* Getting Started Doc (6)
* Rework from_dict method of some modules
* Rework ScalingOutPolicy
* Rework webhook module
* Getting started doc (3)
* Remove incorrect usage of assert_called_once in test cases
* Getting Started Doc (2)
* Fix cooldown implementation
* Refactor code to use oslo_utils.timeutils where appropriate
* Add test case for deletion policy module and fix some bugs in it
* Remove some fields from action sorting keys
* Tweaking LB policy implementation
* Fix a bug in environment module
* Fix method parameter error
* Rework scaling_in_policy
* Updated from global requirements
* Fix tox environment for package version problems
* First step of getting started doc
* Make node index unique in a cluster
* Remove argument examining and exception raising in action init
* Fix a small nit in cluster test case
* Fix classmethod call error
* Remove unneeded OS_TEST_DBAPI_ADMIN_CONNECTION
* Flake8 fix for doc source conf.py
* Fix flake8 test directories
* Relocate test modules
* Fix a bug in schema spec validate and add test case for it
* Make some exceptions Senlin internal errors
* Initial version of developer doc for policy types
* Fix _check_action_complete method to wait for object status change
* Initial version of lb_policy
* Add some random strings to create nova server name
* Revised profile type developer doc
* Handle exceptions which happen during node creation/deletion/update
* Switch from MySQL-python to PyMySQL
* Use random strings to create heat stack name
* Test case for default handler in cluster controller
* Test case for default handler in cluster_policies API
* Remove dead code from cluster's action API
* Test case for engine start/stop
* Catch unexpected exception happened during action execution
* Change status_reason column's type to TEXT
* Status_reason, stats and created_time are overwritten by mistake
* Add a TODO item of high priority
* Unify input parameter definition in Senlin openstack drivers
* Fix a syntax error in profile base module
* Test case for cluster_policies API
* Fix ceilometer driver interface
* Remove our own copy of Trust implementation
* Remove useless code related to views
* Initial version of developer doc for policy
* Add missing namespace for config generator
* Handle NodeStatusError exception
* Add policy cooldown support
* Refactor context usage in profile
* Add binding check in cluster_policy_detach in engine
* Add pool_member related interfaces to neutron v2 driver
* Add vertical scaling into the pipeline
* Add item about wiki page improvement
* Change ProfileInUse exception to ResourceBusyError
* Switch to use oslo.service
* Rename NotSupported exception to FeatureNotSupported
* Rename PolicyExists to PolicyTypeConflict
* Change PolicyNotAttached to an internal exception and handle it
* Switch to use ostestr
* Change PolicyInUse exception to ResourceBusyError
* Avoid using 'type' keyword as variable name
* Redefine policy enforcement levels
* Initial version of profile design doc
* Updated from global requirements
* Remove deprecated PolicyData class
* Add webhook policy
* Fixed a typo in node doc
* Rework nova_v2 driver
* Initial version of developer doc for action
* Remove unused exception
* Use correct property name in get_details of os.nova.server profile
* Cluster and node design doc
* Add/remove some TODO items
* Bump oslo.utils version
* Add 'MultipleChoices' exception mapping
* Forbid deleting cluster which has policy attached to
* Fix cluser update behavior regarding metadata
* Fix some spelling miss and message output
* Implement the do_check method to check stack's status
* Add data field to action DB model for policy_check
* Remove UPDATE_CANCELLED cluster state
* Sync requirements versions
* Add action_update interface to db_api
* Tweak webhook middleware for optimization
* stack_get of heat_v1 driver now accpet stack_id as input param
* Tweak webhook implementation
* Add action parameter to attach & detach mothods of policy
* Tweak webhook implementation
* Remove two TODOs from cluster_action
* Refactored the doc subtree
* Removed a TODO item
* Bump python-keystoneclient version
* Bump requirement versions
* Revised heat driver and profile
* Stop using isotime()
* New cipher module based on AES/CBC
* Release green threads properly
* Avoid using SenlinException class directly
* Forbid deleting profiles in use
* Test cases for engine scheduler module
* Sync oslo packages
* Fix some test cases for ClusterDataTest
* Fix env bug and add test cases
* Bump sqlalchemy-migrate version
* Fixed bugs in registry and add test case
* Fix a bug about cluster status
* Add driver for Neutron
* Fix catalog error when finding user_id from user_name
* Test case for dispatcher module
* Add TODO wrt start_action function in scheduler
* Revised dispatcher notification
* Add get_connection_params method to trust module
* Initialize data field of cluster_policy after policy attaching
* Sync with global requirements
* Tweaking webhook usage doc
* Fix some misses of README.rst
* Delete domain option of 'user create' command
* Fix two README.rst errors
* Replace sdk user_reference module with profile
* Sync cryptography version with global requirement
* Add a TODO item about Senlin drivers
* Fix a bug in scaleutils.truncate_desired
* Fix two bugs in cluster resize
* Add consts of adjustment params
* Add webhook documentation
* Fix errors in service engine
* feature request: customizable batch size
* API support for CLUSTER_RESIZE operation
* Cluster resize operation support
* Add consts for scaling adjustment types
* Sample scaling policies
* Revised TODO list
* Test case for cluster module
* Test case for cluster_policy module
* Test case for cluster size param validation
* Fix admin requirement in trust middleware
* Sync pbr version requirement
* Add last_op property to ClusterPolicy
* Update pot file with a script for future use
* Add a TODO item
* Handle HttpNotFound correctly in nova server_delete
* Bump oslo.middleware to 1.2.0
* Revised TODO items
* Sync-up global requirements
* Forbid deleting a policy in use
* Rename 'tags' to be 'metadata'
* Added user/role create for service setup
* Add TODO item for service setup
* Provide best-effort option in scaling policy
* Add ScalingInPolicy and ScalingOutPolicy
* Revised service API to use ClusterPolicy module
* ClusterPolicy module for bindings btw the two objects
* Fix a bug in event module
* Added field 'data' to cluster-policy bindings table
* Minor tweaking to cluster update flow
* Fix two bugs of cluster updating
* Revised cluster-update action implementation
* Revised cluster-update implementation
* Revised cluster-data module
* Bump version to 2015.2
* Add min_size and max_size properties to Cluster
* A sample spec complex scaling policy
* Enfore key sorting for serializers
* Revised metadata support
* Use absolute value of input count for cluster scalein
* Sync oslo.config version requirement
* Rework with nova driver
* Replace cluster size with new property desired_capacity
* FEATURES: Fault Tolerance
* Ensure scaling limitation check will always be done
* Initial version of ceilometer driver
* Using senlin endpoint url to create webhook url
* Resync requirements
* Set node status to DELETED after node deletion
* Allow node_get_all_by_cluster ignore deleted nodes
* Revise two log errors in webhook workflow
* Make datetime output in ISO format
* Use function calls for user operations
* Fix sqlalchemy try...catch problem
* Remove api-flavor configuration option
* Delete some useless options in config
* Delete some unused methods in cluster
* Removed one todo item
* Fix a bug about next_index property of cluster
* Fix a bug about scalingpolicy candidates
* Fix a small bug in heat stack profile
* Added API support for getting node with details
* Support to get details of physical objects
* Rename TODO to TODO.rst
* Fix some six related issues
* Revised the README file
* Two changes about count calculation in ScalingPolicy
* Fix a small bug in webhook middleware
* Trivial fixes for devstack integration
* Enable flavor retrieval by name
* Add db_sync to senlin-db-recreate
* Revised cluster action for node user/proj properties
* Build RequestContext in webhook middleware
* Rework server profile using new context building
* Sort TODO and FEATURES again
* Implement webhook trigger
* Abstraction layer for service context
* Revisions to cluster/node db model
* New feature request item: CoreOS support
* Trust middleware implementation
* Integrate senlin with devstack
* Revised credential database table definition
* Change the owner of TODO item about authorization
* Initial version of a keystone driver
* Initial version of authorization doc
* Fix a small bug in cluster model
* Fix a little bug about cluster policy add/remove
* Fix three bugs in webhook
* Remove force param which is useless for webhook_delete
* Initial version of webhook API
* Split webhook middleware from webhooks module
* Tuning tox configuration
* Fixed missing pieces in doc generation
* Fix a minor error in profile api testcase
* Fix oslo modules description
* Updated oslo dependency to reality
* Initial version of credential db api
* Update setup.cfg to reflect new reality
* Reorganize openstack drivers
* Separate trust middleware out from common module
* Move context middleware out of common module
* Implement webhook engine service
* Migrate to oslo.policy
* Initial version of FEATURES file
* Fix setup scripts in tools folder
* Add new TODO item for exposing node attributes
* Fix a little bug of webhook
* Encrypt webhook url
* Remove dead file
* Add two webhook exceptions
* Remove 'tenant' from RequestContext
* Replace 'tenant' by 'project'
* Use openstacksdk to do authenticate in WebhookMiddleware
* Remove authurl middleware
* Add authenticate method in sdk module
* Remove debugging garbage left in context
* Add username parameter for sdk.create_connection()
* Initial version of webhook class and middleware
* Allowing translations to come in
* Updated the sample conf file
* Revised tool for service setup
* Removed useless configuration options
* Add missing oslo.log module into config generation
* Initial version of a sample nova server spec
* Simplified authurl middleware
* Revised request context implementation
* Fixed some errors in the nova server profile
* Added waiting logic for server operations
* Fixed node deletion return value
* Remove outdated alias in messaging module
* Add nova server profile to setup.cfg
* Initial version of nova server profile
* Enable nova create/delete to wait for completion
* Add 2 new exception types for profile operations
* Detailize the TODO item of webhook
* Added one TODO item about scaling policy
* Use oslo log for wsgi
* Added readonly attribute to a schema
* Remove unused oslo module local
* Initial version of nova driver
* Store user_id in user property of Cluster
* Added some docs about hacking and testing
* Initial version - Webhook DB APIs
* Add webhook table in Senlin DB
* Revised TODO items
* Tuned action status checking during signalling
* Second round of cleansing of the exception module
* Initial test cases for cluster policy operations
* More test cases for node operations (engine)
* Fixed error in node_join operation
* More test cases for node operations (engine)
* Added a new TODO item
* Added doc into build tree
* Bump requirement versions
* First round cleansing of exceptions
* Add test case for tenant_safe in cluster_list
* Fixed typo in node operation test cases
* Added some test cases for node operations (engine)
* Removed a TODO item that has been done
* Add more test cases of cluster operations (engine)
* Updated TODO list
* Added a new test case for cluster_add_nodes
* Added missing __init__.py file for engine test cases
* Fixed request_id data type error under py3
* Remove unused log module import in context module
* Fixed typo in .gitreview file
* Added .gitreview file
* Fixing initial PEP8 and python check errors
* More test cases for cluster operations (engine)
* Added more test cases to cluster operations (engine)
* Make cluster_update operation return something
* Fixed typo in policy_delete operation test case (engine)
* Fixed policy checking that was broken by 1cccb9
* Added some more test cases to cluster operations (engine)
* Fixed some typos in test cases
* Fixed some condition checkings in service engine
* add context in example profile
* Fixed some errors in engine service
* Partial stack operations test case (engine)
* Make 'status' an optional parameter
* Fixed typo in test case
* Fixed typo in test case
* Initial version of policy operation test cases (engine)
* Added param checking for profile list
* Do param extraction only when specified (policy_list)
* Added type checking for policy update
* Initial version profile operation test cases
* Fixed bugs in profile create/update
* Added context to fake profile type constructor
* Fixed a typo in schema utility
* Added context to profile constructor
* Added context support to profile objects
* Make ascending sorting the default, except for policy bindings
* Fixed typo in method names
* Fixed incorrect profile-context customization logic
* Removed profile_context from profile_create
* Basic test cases for policy types in engine
* Fixed some more PEP8 errors
* Fixed a PEP8 error
* Fixed a PEP8 error
* Initial version of engine test case: profile types
* A module for faked entities
* Minor tweaking to the service engine module
* Add project_id based target policy check
* add context support for profile in API
* Removed some outdated comments
* add context in profile in the API layer
* refactor for the profile context
* fix pep8 error
* add one more attribute for Profile
* fix the problem for the preference doesn't work in openstackSDK
* Added one todo item
* Undo commit ee6b7a8b
* Removed incorrect copyright claim
* Removed useless entries
* Remove changlog file since no one is using it
* update stack_create to accept a specific region name
* update TODO to add multi-region/cloud support
* Fixed oslo namespace reference error
* Fixed fault middleware test case
* Remove test case from other projects
* Fixed exception checking in cluster db api tests
* fix the issue to set region to create service connection
* Removed one TODO item that has been completed
* Add trust middleware into senlin-api pipeline
* Add SenlinTrust class to wrap trust information
* Fix a small bug in health_manager
* Redefine get_trust and list_trust mothods
* Removed 'identify_cluster' method
* Initial test case for rpc client
* Simplified event logging
* Added status/status_reason inference to event module
* Added some event log support to cluster module
* Revised DB exception type
* Initial version of trust middleware
* Allow retrieve operation in trust SDK resource
* Fixed stack_update() call in heat stack profile
* Removed one todo item
* Removed some useless calls from parser module
* Removed one TODO item
* New DB test cases for node update
* Move status update from node object to db layer
* Add omitted __init__ file
* Removed several items that have been completed
* Test case for cluster-policy binding deletion
* Add Health Manager and move periodic healthy checking to it
* Add a TODO item
* Add a TODO item for privilege management
* Initial version of Trust resource of SDK
* Added one TODO item
* Rename exception test case
* Revised common/context test case
* Added missing 'user' key in context dump
* Initial test case for common/constraints
* Revised constraint validation logic
* Added constraint checking
* Remove auth_password which is not used at present
* Fixed faked bind port error
* Initial version of events api test cases
* Removed one TODO item related to event table
* Remove API layer todos
* Fixed initialization of placement policy
* Bump oslo.context to 0.2.0
* Fixed error in event-show API
* Revised API doc for events
* Revised sample JSON data from action_get operation
* Fixed import error in action controller
* Initial version action controller test case
* Revised sample JSON file for action_list operation
* Add trusts attribute to context
* Added data checking for action-list
* Fixed API doc for action_list
* Removed some fields on which actions are sorted
* Removed 'permission' from action list filters
* Revised API doc for action_list operation
* Make node_join/leave return simpler results
* Added API doc for node_action operations
* Revised API doc for node_get operation
* Bump oslo.db version to 1.5.0
* Updated API doc for node-update operation
* Added policy item for node-update
* Use PATCH verb for update operation
* Initial version of node_update support
* Fixed project id checking error in service
* Fixed the initialization of init_time for node
* Revised API doc for node-create operation
* fix node-delete issues and make status changes to cluster if node in error
* More test cases for the node_list api
* Fixed error in node_index
* Fixed API doc for node_list operation
* Fixed inconsistency in node_list operations
* Bump oslo.config to 1.9.0
* Revised cluster_delete implementation
* Added one more test case for cluster_delete
* Revised API doc for cluster-policy-show
* Revised cluster-policy-get implementation
* Bump sqlalchemy-migrate version to >= 0.9.5
* Added support for cluster_policy_get()
* Fixed TOC error in generating API docs
* Revised API doc for cluster-policy-list
* Revised field names for cluster delete operation
* Remove 'limit' and 'marker' from cluster-policy list parameters
* refine readme
* refine readme to use setup-service to create service and endpoint in keystone
* Revised TOC file to reflect the latest changes
* Revised cluster actions API doc
* refine readme
* add installation steps in readme
* fix pep8 problem
* Make sure cluster-policy association is deleted when a cluster is deleted
* fix the KeyError error when duing cluster delete
* Remove another unused json sample
* Remove unused json example file
* More test cases for cluster-update operations
* Fixed xml structure errors in the doc
* Use a custom clouddocs plugin for doc building
* Revised cluster-update API doc
* Initial support to cluster_update
* RPC layer support to cluster_update
* Intial version of cluster_update API support
* Use PATCH as command for cluster update
* Revised sample response for cluster_get
* Revised API doc for cluster_create
* Revised cluster list API doc
* Fixed HTTP requests for profile/policy update
* Fixed initialization error for lb policy
* Revised policy_get API doc
* Added checking for policy_update
* Fixed HTTP method for update method
* Added entry for policy_update
* Updated API doc for policy_update
* Bump oslo_log version requirement to 0.4.0
* Revised test case that allows flexible profile update
* Added one TODO item
* Added policy_update support
* Test cases for policies API
* Avoid 1.7.0 oslo.messaging
* Fixed policy_create response code
* Make setup-service tool work
* Fixed profile-create api doc inaccuracy
* Fixed api doc for profile-create
* Bump openstacksdk version to 0.4.1
* Fixed policy-list api doc
* Fixed Map schema parsing error
* Fixed scaling policy field parsing error
* Added one TODO item
* Remove osprofiler module which is unnecessary
* Updated profile-update api doc
* Use 'PATCH' for profile_update method
* Fixed profile_update method implementation
* Fixed profile update API incorrect behaviors
* Revised profile-get api doc
* Modified conf file path for config generation
* Remove log from namespace
* Fixed config gen namespace error
* Fixed error in cluster create path
* Added oslo.log to requirements
* Fixed profile create api doc
* Fixed profile create api doc
* Revised profile list api doc
* Revised policy_types resource api doc
* Revised api doc for profile_types resource
* Make event_prune() a standalone function
* Revised TODO items
* More test cases for profile DB API
* Fixed profile creation error in test case
* Added more test cases to profile DB API
* Fixed errors in profile_get()
* Fixed cluster_policy_get_all() errors
* Test cases for cluster-policy-binding db apis
* Revised policy DB API test cases
* More test cases to policy DB API
* Enable policy_get_by_short_id() to show deleted
* Enable show_deleted for policy_get_by_name()
* Removed create_policy function
* Revised TODO items
* Make node created auto have a project assigned
* More test cases to node DB APIs
* Fixed cluster index increment error
* Added tenant_safe for node_get_all()
* Added profile type and project match checking
* Added profile type and project checking for node_join
* Added two exception types to fault middleware
* Added two more exception classes
* Add 'project' property to node object
* Added 'project' column to node table
* Fixed node_get_all parameter cluster_id none case
* More test cases for node DB API
* More tests cases to node DB APIs
* Enable node_get_by_short_id to handle show_deleted
* Enable node_get_by_name/short_id to honor show_deleted
* Revised cluster DB API test cases
* Added profile_delete test case
* Policy enabling for event list/show
* API layer support for event list/show
* Event list/get support in RPC layer
* Event find/list/show support in engine
* Make Event loading smarter
* Fixed stack_context merge error
* Added 'global_tenant' as a common parameter for API calls
* Added one event log call for test
* Fixed PEP8 error
* Added event not found exception
* Initial version of event module
* More test cases for by-cluster event retrieval/counting
* Allow for node creation with none cluster ID
* Fixed errors in getting events by cluster
* Added column 'cluster_id' to event object model
* Added cluster_id to event object
* Added unit tests for event_get_all()
* Removed 'node_count' attribute from cluster
* Revised DB event API test cases
* Move create_event away to the unit test module
* Allow event list to be sorted by obj_name
* Improved DB API event_get_all()
* Added 'project' attribute to Event object
* Added column 'project' to Event table
* Added test case for event_get_by_short_id
* Removed useless test cases for event controller
* Removed some helper functions in DB event apis
* Revised schema return result
* Minor tweaking to profile_types controller (comments)
* Basic test cases for policy_types controller
* Basic test case for profile_types controller
* Fixed routes test cases based on new routes
* revised policy entries related to 'schema' route
* Fixed profiles test case for TypeNotFound exception
* Added PolicyTypeNotFound exception type
* Fixed exception throw in environment
* Added ProfileTypeNotFound exception
* Revise profile/policy type interface
* Fix incorrect import module name
* Add Health_policy implementation
* Re-enable senlin/tests/* files to be flake tested
* Added test cases for profile deletion operations
* Rename 'perm' to 'permission' to avoid confusion
* Allow spec to be None in profile update
* Allow spec to be None for profile update
* Test cases for profile update calls
* Added support to profile_update operation
* Added update support to profile
* Cleanse PEP8 errors in db api test cases
* Further removal of PEP8 errors
* Fixed PEP8 error for some test cases
* Test cases for profile-get API
* Minor tweaks to node controller tests
* Two more test cases for profiles controller
* Make SpecValidationFailed a 400 error
* Added some test cases to profiles API
* Move parameter validation to API layer
* Added missing space in error messages
* Add limit to welknown request parameters
* Make ProfileValidationFailed a 400 error
* Make sure limit is an integer
* Enforce boolean conversion for 'show_deleted'
* Ensure that 'profile' key exists for create/update call
* Event serialization support (basic)
* One more test case for cluster-policy update
* Test case for cluster-policy operations
* Added non-int test for scaling in operation
* Bump six version to 1.9.0
* Added more test cases of scale in/out
* Added single quotation to exception message string
* Make SenlinBadRequest kind of HTTPBadRequest
* More test cases to cluster-action api
* More test cases to cluster APIs
* Make sure tags is not None
* More test cases for cluster action apis
* Added test cases for profile/cluster not found
* Fixed typo in cluster_update
* Revised parameter extraction for cluster-update
* Added test cases for cluster_update operation
* Revised cluster get api
* Added missing space in error message string
* Added two test cases for cluster apis
* Added test cases for cluster_get_by_short_id
* Fixe param problems in DB test cases
* Make DB API throw the right exception type
* Revised stack profile spec data retrieval
* Added show_deleted support to profile_find
* Removed a TODO comment
* Profile show_deleted support
* Added one TODO item for Heat profile type
* Added code for node-update
* Minor tweaking to nodes API
* Initial version of node API test case
* Force conversion of boolean parameters
* Make InvalidParameter a 400 error
* Tolerate bad format of create/update request bodies
* Minor tweaking to error message
* Make node/profile not-found 'acceptable' exception
* Initial test case for build_info API
* Fixed an error in cluster-policy API
* Test case for API routing
* Renamed from test_openstack_api_v1_util
* Shared class and utility functions for api test cases
* Make InvalidParameter a case of BadRequest
* Tweaked some comments
* Use six for text translation
* Added consts for some API request parameters
* Initial API test for cluster controller
* Force boolean parameter type conversion in clusters API
* Fixed PEP8 error found so far
* Removed log from dependency to oslo_incubator
* Migrating to use oslo_log
* Remove deprecated module
* Adapted namespace for oslo modules
* Sync with oslo-incubator
* Initial subdir for API test cases
* Deleted a test case
* Minor tweaking to cluster controller in API
* Added one more configuration option
* Added url_fetch() utility function and test case
* Added test case for List data type
* Fixed broken policy DB API
* Correct action params
* Fixed node DB API tests that were broken
* Fixed cluster_delete API errors
* Import correct 'socket'
* Added back support to auth_uri in config file
* Added test cases for utils module
* Removed useless module param_utils
* A sample data for policy tests case
* Enable policy to accept a policy file
* Initial test case for policy module
* Remove useless policy json file
* Moved version middleware test case
* Moved middleware test cases
* Initial test case for ssl middleware
* Fixed fault middleware test cases
* Fixed errors in schema processing
* Added dummy spec schema for some profiles
* Make action_acquire atomic
* Schema definition for update policy
* Added schema definition for LB policy
* Make constraints a list
* Initial support to policy schema
* Enable constraints to be listed in schema
* Added more policies for validation
* Make constraints iteratable
* Added schema show support to profile types
* Added missing parameter 'constraints' to schema
* Basic schema support to heat stack profile
* Basic schema support for profiles
* Basic schema support for health policy
* Basic schema support for scaling policy
* Basic schema support for deletion policy
* Basic support policy spec validation
* Added validation for profile/policy when creation
* Added SpecValidationFailed exception type
* Initial version of schema checking
* Initial version of constraints module
* Added more parameter checkings for service interface
* Added bool parameter parsing utility function
* Parameter validation for cluster scaling
* Remove 'size' from cluster-update operation
* Added InvalidParameter exception
* Added value parsing/validation for cluster create operation
* Added util function of int param parsing
* Rename short_id.py
* Removed one TODO item
* Added empty method for template and schema
* A small nit in tools README
* Bump keystoneclient version to 1.1.0
* Initial implementation for scaling policy
* Enable scale-out to do scale-in
* Added log to policy checking
* Make 'count' parameter optional for scaling operations at RPC layer
* Added count value check and validation for scaling operations
* Don't forge 'count' parameter if not specified
* Fixed errors in scaling policy
* Fixed error in setting data items in policy data
* Added initialization of a new policy_data dict
* Fixed cluster id reference error
* Added backref for cross-table reference convenience
* Make cluster-policy operations work
* Make LB policy conform the attach/detach interface protocol
* Tweaking the base action implementation
* Make attach and detach methods accept only positional arguments
* Make attach/detach/update operations 'action' PUT requests on Clusters
* Remove attach/detach/update from ClusterPolicyController
* Added CLUSTER_UPDATE_POLICY as new action name
* Fixed errors in policy-detach
* Reworked cluster-policies binding DB API
* Remove policy binding actions from cluster controller
* RPC layer support for cluster-policy listing
* RPC layer support cluster_policy listing support
* Fixed cluster_action behaviors
* Revised DB API for cluster_policies query
* API layer support for cluster-policy bindings
* Added policies for cluster-policies domain
* Enable cluster-node-list to handle cluster name or short ids
* Fixed node deletion logic
* Cluster action support for SCALE_OUT and SCALE_IN
* Removed incorrect exception catch logic
* RPC layer support scale-in and scale-out
* Added API layer for scale-in and scale-out support
* Fixed cluster_lock_steal() call
* Fix node deletion error
* Enable Heat drivers to ignore NotFound exception when doing delete
* Added min_step support
* Added logic to tolerance ill-formed Heat exception
* Fixed scaling policy sample for consistency
* Added basic exception parsing for interaction w/ drivers
* Revised policy comments and some details
* Added missing priority parameter
* Pass parameters to attach_policy action
* Add a TODO item
* Bump keystonemiddleware version
* Fixed typo in deletion-policy
* RPC layer for cluster-policy association
* API layer support cluster policy association
* Fixed typo
* Fixed some PEP8 errors
* Fixed cluster-del-nodes error
* Revised base action exception detection
* Make node creation increment cluster size if needed
* Enable node-create to do profile/cluster find/validate
* Added update method to PolicyData object
* Fixed action name and return result error
* Enable cluster create to do a profile find/validate
* Fixed errors introduced by module renaming
* Minor tweaking to update policy
* Minor tweaking to scaling policy
* Minor tweaking to placement policy
* Initial framework for lb policy
* Minor tweaking of health policy module
* Major rework of the deletion policy
* Refactored cluster action implementation
* Removed ACTION_RETRY and enforce() method
* Reworked policy_check() in action base
* Rename 'destroy_after_delete' to 'destroy_after_deletion'
* Added one more criterion for deletion policy
* Added a 'priority' column to cluster_policy table
* Merged 'senlin_consts' and 'attr' module
* Moved HealthCheck out of the AWS LB policy spec
* AWS style health policy
* Make some properties part of pool spec
* Initial samples of policy specs
* Added new TODO item
* Remove 'get_next_index()' method from cluster
* RPC/Engine layer support for policy operations
* Revised policy base class implementation
* Fixed typo in last commit
* Revised profile store() logic
* Modified policy_get_all API implementation
* Added 'updated_time' and 'deleted_time' to policy
* Added API layer support for policy operations
* Updated sample policy
* Added policy related policy
* Fixed node join/leave transaction
* Revised node_migrate DB API
* Added new item to policy.json
* Added missing 'SUPPORTED_ACTIONS' check
* RPC layer support to NODE_JOIN/LEAVE
* Added TODO comment in node module
* Trivial modification
* Added API layer node action support
* Fixed errors in add_nodes/del_nodes path
* Fixed action naming for node actions
* Fixed errors in node do_join() and do_leave()
* Another way to print stack
* Fixed api body parsing for cluster_del_nodes
* Return only action id when action is scheduled
* Fixed action_get error
* Reworked cluster_add_nodes and cluster_del_nodes
* Added do_join() and do_leave() methods
* Optimized node update logic
* Added check for cluster_add_nodes
* Raise proper exception when request validation fails
* Basic support to CLUSTER_DEL_NODES
* Preliminary support to CLUSTER_ADD_NODES
* Fixed support to node indexing
* Removed unused variable 'values'
* Optimized calls to set_status()
* Fixed method name typo
* Revised cluster action implementation
* Revised node action implementation
* Revised base action implementation
* Fixed oslo messaging namespace deprecation error
* Fixed RPC call error after upgrade
* Make oslo_messaging a little silience
* Remove reference to identifier
* Revised messaging to use 1.6.0 naming convention
* Fixed oslo_messaging package version requirement
* Tuned the cluster creation logic
* Reworked policy checking
* Added a TODO item
* Added cluster_get_next_index() API
* Added cluster:action to policy list
* Test case modification for exception handling
* More support to short-id and name based query
* Unified throwing exception Not Found
* Support to by name query for profile and policy
* Added short id query to profile, policy, action and event
* Added one TODO item
* Added short ID support for cluster finding
* Add one new exception - MultipleChoices
* Supporting action-get by name
* Added default cluster operation timeout value
* Just enable cluster delete to be a forciable action
* Fixed node status checking in do_create()
* Fixed action status checking errors
* Revised support to node actions
* Fixed node status checking error
* Fixed profile type validation errors
* Fixed lock API bugs and added test cases
* Added node_lock_acquire/release APIs
* Fixed typo errors in db api
* Revised node_lock DB APIs
* Renamed 'engine_id' or 'worker_id' to 'action_id'
* Avoid passing action around
* Avoid double deletion
* Add stack dump for debugging
* Added name reference support for Nodes
* Added NodeNotFound exception
* Added new API node_get_by_name()
* Revised TODO list
* Removed identifier support
* Enable cluster-show to handle cluster names
* Revised cluster-delete logic
* Fixed errors in cluster-delete path
* Fixed error message when timing out waiting lock
* Avoid generator for node load_all()
* Avoid nested db transaction when action udpate
* Escalate debug log to error
* Make get_nodes() and get_policies() more safer
* Fixed reference to dispatcher.Dispatcher NEW_ACTION
* Renamed action_control_check to action_signal_query
* Refactor cluster get method
* Separate regular failure from timeout
* Revised action status checking/setting implementation
* Remove worker from action_abandon() call
* Fixed node_create/show API for consistency
* Added a potential todo item for name conflict detection
* Remove lock_steal logic for the moment
* Wrap action.execute() in a try-except block
* Added TODO for cancel_action()
* Remove cluster_lock_steal() API
* Removed username from environment parameters
* Check whether profile type is supported when creation
* Fixed cluster lock acquisition parameter error
* Revised cluster_create api implementation
* Bump oslo.messaging to 1.6.0+
* Revised profile-create API
* Revised cluster lock usage to use the new design
* Reworked ClusterLock module and test cases
* Revise ClusterLock table definition
* Replace 'scope' field with 'semaphore'
* Added column 'scope' to cluster lock
* Reduce cluster size when node is deleted
* Major re-org to scheduler and dispatcher
* Call action method to determine if it is cancelled
* Revised cluster_lock_acquire logic
* Revised base Action class implementation
* Add policy for profile type template/spec
* Added signal method to Action and moved ActionProc here
* Renamed 'action_control' to 'action_signal'
* Added optional reason parameter to mark_failed()
* Revised some action APIs
* Added signal() class method to action base
* Renamed 'action_release' to 'action_abandon'
* Removed a log info call
* Have cluser actions use the lock facilities
* Revised lock implementation
* Added IRC channel
* Revised log format to be consistent
* Revised log format
* Make action cancel failed silently
* Comment out redundant deletion logic
* Fixed calls to _from_db_record()
* Revised cluster class implementation
* Revised node class implementation
* Revised node_get logic
* Handle cluster not found exception
* Dictionarize the node_get result
* Fixed node-delete and node-update path
* Fixed errors in node deletion path
* Refactor module import for 'action' module
* Refactor module import for 'node' module
* Refactor module import for 'cluster'
* Fixed lock checking typo
* Fixed auto-naming of cluster nodes
* Fixed errors in cluster actions
* Revise cluster lock invocations to use new API
* Revised cluster_lock_create() function
* Added lock retry options to global config
* No need to check profile existence, due already check in profile_get
* Set profile.context and profile.created_time for memory
* Some small nits for profiles.py
* Fixed node status setting
* Make cluster creation work
* Re-design cluster locking in ClusterAction
* Switch parameter position in node_create call
* Enable E265 and H307 PEP8 checking
* Fixed H233, H402 PEP8 errors
* Fix stack profile properties error
* remove healthy_check due to redundant
* Revised profiles documentation
* Enable E202 and F812 PEP8 checking
* remove periodic_interval, it is duplicated in common/config.py
* Enforce PEP8 F402 checking
* Removed one more PEP8 error
* Initial version of profiles doc
* Revise several minor errors about policy
* Fixed H404 and related pep8 errors
* Cleanse Flake8 errors
* Remove clients from environment module
* Sample configuration file
* Further remove useless configuration options
* Removed TLS related config stuff
* Removed one useless import
* Removed clients config options
* Remove clients package from config generator
* Remove clients module from setup config
* Removed parameters section from spec
* Fixed errors in sample stack template
* Revised Heat stack profile implementation
* Stack model for interacting with Heat
* Initial version of Heat stack driver
* Revised context contents
* Removed dead reference to auth_uri option
* Revised base driver implementation
* Profile base to store context
* Initial version of sdk client module
* Revised stack model for client side sdk
* Initial version of orchestration stack model
* Revised project requirements
* Revised TODO list
* Enable cluster action to deal with NotFound exceptions
* Added DriverFailure exception
* Removed lockfile from test requirements
* First round of code cleansing for node-create action
* Revised context usage
* Added node_update DB API
* Added missing node_update() DB API
* Remove some finished TODO items
* Fixed API layer cluster delete support
* Fixed cluster status setting error
* Remove custom sleep time assignment
* Fixed timestamp passing error in db apis
* Fixed RPC client side error for cluster delete
* Fixed some errors in cluster deletion path
* Fixed api layer support for cluster update and delete
* Renamed two exceptions for actions
* Fixed runtime data reference error
* Refined action thread implementation
* Refined some action APIs
* Initial attempt to support cluster deletion
* Make start_time and end_time float values
* Added missing parameter when calling action.store()
* Restrict oslo_messaging version as suggested
* Add timer to call periodic_tasks
* Initial version of exception test cases
* Initial version of api util test cases
* Minor tweaks
* Initial version of fault middleware test case
* Rename 'statuses' to 'STATUSES'
* Partially rework cluster action module
* Fixed policy check logic
* Reworked some of the action processing logics
* Fixed (hopefully) db transaction errors
* Make ActionProc a standalone procedure again
* Unify naming of contexts
* Minor code flavor tweaking
* Bump eventlet to 0.16.1
* Cleanse PEP8 error found so far
* Added default action name for cluster create
* Assign default action name for node create/delete
* Added missing 'init_time' field
* Example spec for creating profile of os.heat.stack type
* Remove old sample
* Fixed PEP8 errors in test cases
* Fixed action list where the generator may get returned to client side
* Fixed pep8 error in scheduler module
* Fixed registry error where path is replaced by name
* Add 'init_time' to node and 'cluster_id'
* Added 'init_time' to cluster objects
* Fixed errors introduced by code reorg
* Added more datetime fields to table
* Make most object list having a default order
* Fix profile list tricky errors
* Fixed typo error
* Bump keystonecllient to 1.0.0
* Initial version of version negotiation test case
* Initial version of WSGI test case
* Error fixes with basic cluster show support
* Fixed policy spec error
* Fixed reference to rpc_api
* Fixed paginated query errors
* add action_mark_failed/cancel in db api
* Preliminary support to cluster list
* Add module that was missing in git
* Initial support to cluster creation
* Add code into error dict for exception handling
* Import correct action module in engine service
* Add missing __init__.py to actions/
* Further split action module
* Split base action from action module
* Removed uselss code
* Added missing attr module
* Modify http method 'POST' to 'PUT' for update actions
* Removed useless policies
* Add periodic_task support
* Initial version of serializer test case
* Fixed auth_url middleware with test cases
* Initial version of policy checking test cases
* Tuned action implementation
* Reorganized paginate query
* Remove several clients from configuration
* Renamed rpc api module to common/attr
* Removed 'name' from cluster constructor
* Various tweakings to cluster class
* revised for db table 'action' change(depends_on/depended_by change to list))
* Move configuration file generation into tools
* Minor tweakings
* Added action-list, action-get API support
* Added policies for actions
* Correcting usage of context
* Added node-show support
* Added node delete support
* Added two more policies for node operations
* Move policy.json file to the correct path
* New data type to support Json lists
* Node create and node list operation
* Add a TODO item of multi-thread rework
* Added more suport functions to action module
* Added three policy items to policy
* Add TODO item of Policy framework
* Remove mutable module from sqlalchemy data model
* Initial version - Policy framework
* Initial version - Policy framework
* Initial version -- Policy framework
* Add a comment about profile_type
* Synchronized with global-requirements
* Added support to profile-show
* Improve profile listing
* Added attributes for profiles
* Implemented profile delete operation
* Added profile delete policy
* Added created_time and updated_time to profile
* Fixed Oslo.i18n namespace error in tests module
* Profile list method prototype change
* Fix error in base profile class
* Engine support for profile list and create
* Fixed error in profile search logic
* Profile controller support for list and create
* Fixed typo errors in handlers
* Fixed method name in rpc invocations
* Fixed method declaration errors
* Revised cluster operation interface
* Initial support to profile operations
* Cleanse interface for policy types
* Cleansed profile type API invocation chain
* Fixed oslo.i18n namespace errors
* New policy entries for profile operations
* Fixed oslo.i18n namespace errors
* Initial version script for service setup
* Remove non-existent service names
* Allow eventlet version > 0.16.0
* Fixe oslo i18n namespace errors
* Fixed oslo.i18n namespace error
* Fixed oslo.middleware namespace error
* Fixed oslo.config namespace errors
* Fix oslo.utils namespace error
* Minor revisions to profile controller
* New todo item
* Fixed some PEP8 errors
* Fixed PEP8 error in identifier.py
* Add cluster actions policy
* Add version support for API and Engine versions
* Added missing comma in json file
* Added 3 policy entries
* Modify create_cluster api
* Added some empty API entries and build_info
* Fix oslo namespace error
* Add clusters:index policy rule
* TODO item for cleansing name/id kind of identifier
* PEP8 error fix
* Initial version for policy types endpoint
* Revise oslo package name
* Registry returns a list of dictionary
* Make oslo package names conform to new convention
* remove action query lock task
* add transaction support to 'action_start_work_on'
* Fix status field error
* Test case for JSON serializer
* Remove XML deserializer support
* Code refactoring
* Cap eventlet version due to bugs found
* Removed old files that are useless now
* Reordered method definitions
* Simplified registry implementation
* Disable initialization of clients for the moment
* Fix base class name error
* Fix base class name error
* Make stack operations invoke sleep() directly
* Add sleep method to scheduler module
* Add profile type list method
* Fix method's doc typo errors
* Make engine/topic work without host name specified
* Fixed i18n references and policy scope
* Add profile_type interface in rpc client
* Initial version - profile_types API
* Initial version - profiles API
* Sync global requirements oslo.serialization
* Add status control in ClusterAction
* Revise several minor errors
* Remove timeout check in reschedule
* Add lock operations for ClusterAction
* Add 'control' field to 'action' table
* Fix a little bug in ClusterAction
* Redesign action scheduling interface
* Remove a TODO item that has been supported
* Add a TODO item about DB API
* Fix a bug about service stop
* Make senlin-engine and senlin-api runnable
* Revised TODO list
* Initial version of devstack support
* Inital version of cancel cluster update
* Put Dispatcher into an individual module
* Add action lock related DB API
* Inital version of cancel cluster update
* Add action control DB api
* Add action control DB api
* Add a TODO item
* Redesign scheduler module
* revised action depency tests
* Synchronized from global requirements
* Added some checkings to be ignored
* Remove useless files
* Re-implement dispatcher notify and broadcast
* Bump oslo.db version to 1.3.0
* Fix build info method error
* Implement ActionCheckpoint to help ActionPorc to check possible control event during exection
* Delete useless json file
* Initial verion of API specification
* Integrate Timeout and TimedCancel
* Action proc will now wait for a while for possible control event before going to next step
* Wrap actionProc into callable class *ActionProc*
* Correct senlin_api conf to start wsgi server
* Avoid using private class from oslo.i18n
* Reverse insane MutableDict revision
* Add a work item about action progress control
* Implement _broadcast_dispatcher in EngineService
* Add a work item of action progress control in TODO list
* Add event injection in start_action process
* API site configuration
* Delete stalled xml file of no use
* Move to use MutableDict from new SQLAlchemy versions
* Added level field to event table
* Remove action lock from senlin_lock module. Now ThreadGroupManager will directly use db_api interface to handle Action lock
* Take schedule module task
* Start initial version of schedule module(unfinished):
* Task 2 tasks
* Add policy.json file
* Added a new item
* Some TODOs for scheduler module
* More test cases for cluster DB APIs
* Add paginate query test case
* More test cases for cluster-policy bindings
* Test case for cluster-policy binding
* Fixed column name typos
* Compliant to PEP8
* Removed dead code
* README file for tools subdirectory
* Added profile type checking for UPDATE actions
* Added profile type checking for update actions
* Enable update action to pass profile id
* Added 'NodeStatusError' as new exception type
* Minor tweaking
* Fix deserialization of profile objects
* Stack profile implementation draft
* Added one more exception class
* Add config generator config file
* Include README.md into setup
* Removed since not used anywhere
* Fix some minimal errors
* Update policy to conform to new interface
* Scaling policy to conform to new interface
* Complete DB action APIs basic functionality
* Placement policy to conform to new interfaces
* Renamed args to kwargs
* LB policy to conform to new interfaces
* HealthPolicy skeleton for checking
* Revised to use global constants
* Move victim selection to enforce
* Revise to match base class
* Rename policy.py to base.py
* Rename policy.py back to base.py
* Added implementation for attach_policy
* Revised cluster_attach_policy api
* Added DB serialization logics
* Remove openstack.common.uuidutils
* Remove license text
* Fixed typo errors
* Added three new exception types
* Rewriting base Profile class
* Fixed initialization of global registries
* Fixed flake8 errors
* Fixed global registry intialization
* Minor revision
* Rough implementation of Node class
* Fixed flake8 errors
* Revised execute() logics
* Added node_migrate API
* Initial version
* Initial version
* Added some required methods
* Fixed typo errors
* Switch to oslo.context
* Added two comments as TODOs
* Added two new types of exceptions
* A bunch of changes to Action implementation
* Make service engine do explict store()
* Rework scheduler interface
* Add DB load/store logic to Node class
* Mass rewriting -- fixing holes
* Rename 'node_count' to 'size' in cluster table
* Added create_action function
* Cleansed the class implementation
* add action API revision task
* Rename base.py to policy.py
* WIP version for Yanyan to continue work on
* Add 'ActionNotSupport' exception
* Revised
* Remove action_update interface
* Revised
* Revert profile reference revision
* Fixed error when parsing a stream from memory
* Fixed cluster db model (important!!!)
* Fixed comment error
* Initial version
* Revised
* WIP change to stack profile example
* Added support to '!include' mechanism
* Initial version
* Initial version
* Replaced README.rst with README.md
* Remove this file for refactoring
* Added some optimization to YAML loader
* Renamed some exceptions
* Initial version
* Added back 'environment_dir' option
* Fixed a typo
* Added ClusterValidationException
* Renamed some action names
* Revised password
* Create README.md
* Initial commit
* Keep working on senlin engine items: - increase runAction and wait function in senlin scheduler; - do_create/do_update method of Cluster will create a node object before creating a nodeAction;
* Add action APIs
* Revised
* Revised
* Initial version
* Revised
* Initial version
* Revised
* Fixed SQLAlchemy version requirement
* Fixed errors in Event DB API
* Initial test case for event db api
* Added new util function for creating event
* Added utility function for policy testing
* Initial version of policy DB API test cases
* Allow policies to be softdeleted
* Support soft-delete for some objects
* Make some objects soft-deleted
* Fixed column name typo error
* Revised
* Added policy_delete() API
* Add action APIs of db
* Added a TODO item for node_set_status()
* Initial version for profile DB API testing
* Revised test case for profile parsing
* Modify action table to support dependency
* Added comments to Action statuses definition
* Added status definition to Action
* New work items
* Initial version
* Perform flake8 check for engine/service.py
* Perform flake8 check for api and rpc source code
* Initial version for node API with test cases
* Fix a little syntax error
* Remove crypto and versionutils from openstack-common.conf since these two modules has not been used so far
* Add local module which was omitted before
* Minor tweaking
* Added more util functions
* Feature enriched
* Fixed some errors and inconveniences
* Initial version
* Revised to contain more useful information
* Added action table
* Renamed script to be more accurate
* Initial version
* Initial version
* Add description about some unsure oslo modules importing
* No longer needed if oslo.config is used
* Falsely removed engine/service.py before, add it back
* Remove gettextutils in config/generator
* Split ThreadGroupManager from EngineService
* Initial version
* Initial version
* Reworked policy file and remove gettextutils
* Minor tweaking
* Add 'data' fields to cluster and node
* Revised version
* Initial version
* Simplifed version -- Senlin engine service
* Remove some unnecessary properties from Senlin RequestContext, e.g. trust related ones, aws_creds and overwrite
* Add openstack/common/policy module and its dependency
* Base classes for test cases
* Remove osprofiler for now
* Switch to oslo.config
* Make heat client works first
* Add policy handling
* Add ssl middleware for Senlin API
* Correct the code of Cluster.rt initialization
* Add server parameter when creating rpclient for Senlin API
* This file is no longer needed
* This file is no longer needed
* Removed config and gettextutils from requirement
* Rename uuid attribute of cluster/node to id
* Working version
* Working version
* Working version
* Working version
* Remove stupid timestamp mixing and softdelete
* Finally works!
* Profile table must be created as the first table
* Revised DB implementation
* Revise basic_key definition in clusters_view based on rpc/api.py
* Revise some syntax errors about Senlin engine service implementation
* Add the omitted 'INIT' statuses key
* Fixed errors in the code
* Revise some syntax errors in engine/cluster.py
* Fixed column name confusion
* Make 0 the default version
* Removed multi-cloud support
* Removed profiler support
* Added missing session property
* Added APIs for profiles
* Revised version
* Initial version
* Initial version
* Initial version
* Revise erroneous project name in service.py
* Revised, try merge
* Simplified version -- Senlin engine service
* Simplified version -- Senlin lock hierarchy
* Revise cluster related key definition in rpc api based on current class implementation
* Add to_dict for Cluster
* Add load and load_all for Cluster db model converting
* Initial version
* Initial version
* Initial version
* Initial version
* Moved to common subdir
* Moved to common subdir
* Initial version
* Initial version
* Initial version
* Initial version
* Code reorg
* Replace with real API
* WIP version
* Make pip install a possibility
* Revised design of interface
* WIP version
* Added timeout property
* Removed profiler support
* Removed profiler support
* Try a different version
* Fixed module name errors
* Initial version
* Initial version
* Rename dbapi back to api
* Rename simulated API for testing
* Initial version
* Initial version
* Initial version
* Initial version
* Initial version
* Initial version
* Initial version
* Initial version
* Initial version
* Initial version
* Initial version
* Initial version
* Initial version
* WIP version
* Initial version -- Lock hierarchy in Senlin engine
* Initial version -- start working on lock hierarchy in Senlin engine
* Rename db/api_sim.py to db/api.py
* WIP
* WIP version for discussion
* Add PolicyAction and define ACTIONS
* Rename Member to Node
* Rename Member to Node
* Rename member to node
* Fixed import path and class name used
* Fixed import path and class name when calling init
* Fixed import paths
* Consider return boolean values from pre_ops
* Fixed spelling error and grammar error
* Fixed typo error in class name
* Fixed TARGET for health policy
* Removed enabled from property
* Rename DeletePolicy to DeletionPolicy
* Initial version -- Senlin context
* Added new properties to be AWS compatible
* Added properties for AWS compatibility
* Initial version
* Initial version
* Initial version
* WIP version
* WIP version
* WIP version
* Initial version
* Initial version
* Initial version
* Initial version
* Revised implementation
* WIP version
* Initial version
* Added missed **args parameter to method
* Initial version
* Initial verion
* Initial version
* Initial version
* Added level definition and enforce() method
* Added enforcement level definition
* Initial version
* Initial version
* Initial version
* Initial version
* Initial version of ProfileBase class
* Placeholder for profiles
* Add pre_op and post_op methods to PolicyBase
* Initial version
* Initial version -- Senlin engine
* Cluster create/update now accpet cluster_name, size and profile as input parameters
* Remove ssl middleware from v1 Senlin Rest API
* Tailored version -- Cluster endpoint
* Rename senlin/api/openstack/v1/cluster.py to clusters.py
* Initial version -- Cluster endpoint for Senlin v1 ReST API
* Simplified version
* Initial version -- rpc
* Initial version -- rpc
* Initial version -- api
* Initial version
* Initial version -- api&rpc
* Only for test's purpose
* Initial version -- api
* Initial version borrowed from Heat
* Initial version -- placeholder
* Initial version
* Initial version -- placeholder
* Initial version -- placeholder
* Initial version from Heat
* Initial version
* Initial version
* Disable profiler for the moment
* Initial version
* Initial version
* Initial version of admin-guide docs
* Initial version copied from Heat
* Initial version of package dependencies
* Initial version on binaries
* Initial version borrowed from Heat
* Fixed non error
* Initial version of tox configuration
* Initial version of test script
* Initial version of setup configuration
* Initial version of config for openstack common
* Initial version of install script
* Initial copy of project files from Heat
* Initialial commit
