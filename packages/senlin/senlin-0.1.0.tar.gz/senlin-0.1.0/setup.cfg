[metadata]
name = senlin
version = 0.1
summary = OpenStack Clustering
description-file = 
	README.rst
author = OpenStack
author-email = openstack-dev@lists.openstack.org
home-page = http://www.openstack.org/
classifier = 
	Environment :: OpenStack
	Intended Audience :: Information Technology
	Intended Audience :: System Administrators
	License :: OSI Approved :: Apache Software License
	Operating System :: POSIX :: Linux
	Programming Language :: Python
	Programming Language :: Python :: 2
	Programming Language :: Python :: 2.7
	Programming Language :: Python :: 3
	Programming Language :: Python :: 3.4

[files]
packages = 
	senlin
scripts = 
	bin/senlin-api
	bin/senlin-engine
	bin/senlin-manage

[entry_points]
oslo.config.opts = 
	senlin.common.config = senlin.common.config:list_opts
	senlin.common.wsgi = senlin.common.wsgi:list_opts
senlin.profiles = 
	os.heat.stack = senlin.profiles.os.heat.stack:StackProfile
	os.nova.server = senlin.profiles.os.nova.server:ServerProfile
senlin.policies = 
	senlin.policy.deletion = senlin.policies.deletion_policy:DeletionPolicy
	senlin.policy.scaling = senlin.policies.scaling_policy:ScalingPolicy
	senlin.policy.health = senlin.policies.health_policy:HealthPolicy
	senlin.policy.loadbalance = senlin.policies.lb_policy:LoadBalancingPolicy
	senlin.policy.placement = senlin.policies.placement_policy:PlacementPolicy
	senlin.policy.batching = senlin.policies.batch_policy:BatchPolicy
senlin.drivers = 
	openstack = senlin.drivers.openstack
	openstack_test = senlin.tests.functional.drivers.openstack
senlin.triggers = 
	CeilometerThresholdAlarm = senlin.triggers.ceilometer.alarm:ThresholdAlarm
	CeilometerCombinationAlarm = senlin.triggers.ceilometer.alarm:CombinationAlarm
	CeilometerThresholdResourcesAlarm = senlin.triggers.ceilometer.alarm:ResourceAlarm
	CeilometerAggMetricsThresholdAlarm = senlin.triggers.ceilometer.alarm:AggregateByMetricsAlarm
	CeilometerAggResourceThresholdAlarm = senlin.triggers.ceilometer.alarm:AggregateByResourcesAlarm

[global]
setup-hooks = 
	pbr.hooks.setup_hook

[compile_catalog]
directory = senlin/locale
domain = senlin

[update_catalog]
domain = senlin
output_dir = senlin/locale
input_file = senlin/locale/senlin.pot

[extract_messages]
keywords = _ gettext ngettext l_ lazy_gettext
mapping_file = babel.cfg
output_file = senlin/locale/senlin.pot

[build_sphinx]
all_files = 1
build-dir = doc/build
source-dir = doc/source

[egg_info]
tag_build = 
tag_date = 0
tag_svn_revision = 0

