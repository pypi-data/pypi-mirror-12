# -*- coding: utf-8 -*-
#
# Copyright (c) 2015, Alcatel-Lucent Inc
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of the copyright holder nor the names of its contributors
#       may be used to endorse or promote products derived from this software without
#       specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


from ..fetchers import NUMetadatasFetcher
from bambou import NURESTObject


class NUStatsCollectorInfo(NURESTObject):
    """ Represents a StatsCollectorInfo in the VSD

        Notes:
            Identifies the IP address of the stats collector entity that must be used

        Warning:
            This file has been autogenerated. You should never change it.
            Override vsdk.NUStatsCollectorInfo instead.
    """

    __rest_name__ = u"statisticscollector"
    __resource_name__ = u"statisticscollector"

    def __init__(self, **kwargs):
        """ Initializes a StatsCollectorInfo instance

            Notes:
                You can specify all parameters while calling this methods.
                A special argument named `data` will enable you to load the
                object from a Python dictionary

            Examples:
                >>> statscollectorinfo = NUStatsCollectorInfo(id=u'xxxx-xxx-xxx-xxx', name=u'StatsCollectorInfo')
                >>> statscollectorinfo = NUStatsCollectorInfo(data=my_dict)
        """

        super(NUStatsCollectorInfo, self).__init__()

        # Read/Write Attributes
        
        self._address_type = None
        self._ip_address = None
        self._port = None
        self._proto_buf_port = None
        
        self.expose_attribute(local_name=u"address_type", remote_name=u"addressType", attribute_type=str, is_required=False, is_unique=False, choices=[u'fqdn', u'ip'])
        self.expose_attribute(local_name=u"ip_address", remote_name=u"ipAddress", attribute_type=str, is_required=False, is_unique=False)
        self.expose_attribute(local_name=u"port", remote_name=u"port", attribute_type=str, is_required=False, is_unique=False)
        self.expose_attribute(local_name=u"proto_buf_port", remote_name=u"protoBufPort", attribute_type=str, is_required=False, is_unique=False)
        
        
        self.metadata = NUMetadatasFetcher.fetcher_with_object(parent_object=self)
        

        self._compute_args(**kwargs)

    # Properties
    
    def _get_address_type(self):
        """ Get address_type value.

            Notes:
                Type for stats collector address Possible values are ip, fqdn, .

                
                This attribute is named `addressType` in VSD API.
                
        """
        return self._address_type

    def _set_address_type(self, value):
        """ Set address_type value.

            Notes:
                Type for stats collector address Possible values are ip, fqdn, .

                
                This attribute is named `addressType` in VSD API.
                
        """
        self._address_type = value

    address_type = property(_get_address_type, _set_address_type)
    
    def _get_ip_address(self):
        """ Get ip_address value.

            Notes:
                IP address(es) of the stats collector process

                
                This attribute is named `ipAddress` in VSD API.
                
        """
        return self._ip_address

    def _set_ip_address(self, value):
        """ Set ip_address value.

            Notes:
                IP address(es) of the stats collector process

                
                This attribute is named `ipAddress` in VSD API.
                
        """
        self._ip_address = value

    ip_address = property(_get_ip_address, _set_ip_address)
    
    def _get_port(self):
        """ Get port value.

            Notes:
                Port(s) of the stats collector process

                
        """
        return self._port

    def _set_port(self, value):
        """ Set port value.

            Notes:
                Port(s) of the stats collector process

                
        """
        self._port = value

    port = property(_get_port, _set_port)
    
    def _get_proto_buf_port(self):
        """ Get proto_buf_port value.

            Notes:
                Protobuf Port(s) of the stats collector process

                
                This attribute is named `protoBufPort` in VSD API.
                
        """
        return self._proto_buf_port

    def _set_proto_buf_port(self, value):
        """ Set proto_buf_port value.

            Notes:
                Protobuf Port(s) of the stats collector process

                
                This attribute is named `protoBufPort` in VSD API.
                
        """
        self._proto_buf_port = value

    proto_buf_port = property(_get_proto_buf_port, _set_proto_buf_port)
    