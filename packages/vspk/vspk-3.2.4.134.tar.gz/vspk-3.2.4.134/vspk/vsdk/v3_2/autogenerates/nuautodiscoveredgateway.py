# -*- coding: utf-8 -*-
#
# Copyright (c) 2015, Alcatel-Lucent Inc
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of the copyright holder nor the names of its contributors
#       may be used to endorse or promote products derived from this software without
#       specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


from ..fetchers import NUEventLogsFetcher
from ..fetchers import NUNSPortsFetcher
from ..fetchers import NUPortsFetcher
from ..fetchers import NUWANServicesFetcher
from ..fetchers import NUMetadatasFetcher
from bambou import NURESTObject


class NUAutoDiscoveredGateway(NURESTObject):
    """ Represents a AutoDiscoveredGateway in the VSD

        Notes:
            Represents Auto discovered Gateway

        Warning:
            This file has been autogenerated. You should never change it.
            Override vsdk.NUAutoDiscoveredGateway instead.
    """

    __rest_name__ = u"autodiscoveredgateway"
    __resource_name__ = u"autodiscoveredgateways"

    def __init__(self, **kwargs):
        """ Initializes a AutoDiscoveredGateway instance

            Notes:
                You can specify all parameters while calling this methods.
                A special argument named `data` will enable you to load the
                object from a Python dictionary

            Examples:
                >>> autodiscoveredgateway = NUAutoDiscoveredGateway(id=u'xxxx-xxx-xxx-xxx', name=u'AutoDiscoveredGateway')
                >>> autodiscoveredgateway = NUAutoDiscoveredGateway(data=my_dict)
        """

        super(NUAutoDiscoveredGateway, self).__init__()

        # Read/Write Attributes
        
        self._controllers = None
        self._description = None
        self._gateway_id = None
        self._name = None
        self._personality = None
        self._system_id = None
        
        self.expose_attribute(local_name=u"controllers", remote_name=u"controllers", attribute_type=list, is_required=False, is_unique=False)
        self.expose_attribute(local_name=u"description", remote_name=u"description", attribute_type=str, is_required=False, is_unique=False)
        self.expose_attribute(local_name=u"gateway_id", remote_name=u"gatewayID", attribute_type=str, is_required=False, is_unique=False)
        self.expose_attribute(local_name=u"name", remote_name=u"name", attribute_type=str, is_required=True, is_unique=False)
        self.expose_attribute(local_name=u"personality", remote_name=u"personality", attribute_type=str, is_required=True, is_unique=False, choices=[u'DC7X50', u'HARDWARE_VTEP', u'NSG', u'OTHER', u'VRSG', u'VSA', u'VSG'])
        self.expose_attribute(local_name=u"system_id", remote_name=u"systemID", attribute_type=str, is_required=False, is_unique=False)
        
        # Fetchers
        
        self.event_logs = NUEventLogsFetcher.fetcher_with_object(parent_object=self)
        
        self.ns_ports = NUNSPortsFetcher.fetcher_with_object(parent_object=self)
        
        self.ports = NUPortsFetcher.fetcher_with_object(parent_object=self)
        
        self.wan_services = NUWANServicesFetcher.fetcher_with_object(parent_object=self)
        
        
        self.metadata = NUMetadatasFetcher.fetcher_with_object(parent_object=self)
        

        self._compute_args(**kwargs)

    # Properties
    
    def _get_controllers(self):
        """ Get controllers value.

            Notes:
                Controllers to which this gateway instance is associated with.

                
        """
        return self._controllers

    def _set_controllers(self, value):
        """ Set controllers value.

            Notes:
                Controllers to which this gateway instance is associated with.

                
        """
        self._controllers = value

    controllers = property(_get_controllers, _set_controllers)
    
    def _get_description(self):
        """ Get description value.

            Notes:
                A description of the Gateway

                
        """
        return self._description

    def _set_description(self, value):
        """ Set description value.

            Notes:
                A description of the Gateway

                
        """
        self._description = value

    description = property(_get_description, _set_description)
    
    def _get_gateway_id(self):
        """ Get gateway_id value.

            Notes:
                The Gateway associated with this  Auto Discovered Gateway  . This is a read only attribute

                
                This attribute is named `gatewayID` in VSD API.
                
        """
        return self._gateway_id

    def _set_gateway_id(self, value):
        """ Set gateway_id value.

            Notes:
                The Gateway associated with this  Auto Discovered Gateway  . This is a read only attribute

                
                This attribute is named `gatewayID` in VSD API.
                
        """
        self._gateway_id = value

    gateway_id = property(_get_gateway_id, _set_gateway_id)
    
    def _get_name(self):
        """ Get name value.

            Notes:
                Name of the Gateway

                
        """
        return self._name

    def _set_name(self, value):
        """ Set name value.

            Notes:
                Name of the Gateway

                
        """
        self._name = value

    name = property(_get_name, _set_name)
    
    def _get_personality(self):
        """ Get personality value.

            Notes:
                Personality of the Gateway - VSG,VRSG,NONE,OTHER, cannot be changed after creation. Possible values are VSG, VSA, VRSG, DC7X50, NSG, HARDWARE_VTEP, OTHER, .

                
        """
        return self._personality

    def _set_personality(self, value):
        """ Set personality value.

            Notes:
                Personality of the Gateway - VSG,VRSG,NONE,OTHER, cannot be changed after creation. Possible values are VSG, VSA, VRSG, DC7X50, NSG, HARDWARE_VTEP, OTHER, .

                
        """
        self._personality = value

    personality = property(_get_personality, _set_personality)
    
    def _get_system_id(self):
        """ Get system_id value.

            Notes:
                Identifier of the Gateway

                
                This attribute is named `systemID` in VSD API.
                
        """
        return self._system_id

    def _set_system_id(self, value):
        """ Set system_id value.

            Notes:
                Identifier of the Gateway

                
                This attribute is named `systemID` in VSD API.
                
        """
        self._system_id = value

    system_id = property(_get_system_id, _set_system_id)
    