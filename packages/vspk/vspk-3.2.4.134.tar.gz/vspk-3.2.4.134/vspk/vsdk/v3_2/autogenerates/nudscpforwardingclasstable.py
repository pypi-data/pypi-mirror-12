# -*- coding: utf-8 -*-
#
# Copyright (c) 2015, Alcatel-Lucent Inc
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of the copyright holder nor the names of its contributors
#       may be used to endorse or promote products derived from this software without
#       specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


from ..fetchers import NUDSCPForwardingClassMappingsFetcher
from ..fetchers import NUMetadatasFetcher
from bambou import NURESTObject


class NUDSCPForwardingClassTable(NURESTObject):
    """ Represents a DSCPForwardingClassTable in the VSD

        Notes:
            Provides the definition of a table that holds multiple DSCP -> Forwarding class mappings. Used in QoS policies.

        Warning:
            This file has been autogenerated. You should never change it.
            Override vsdk.NUDSCPForwardingClassTable instead.
    """

    __rest_name__ = u"dscpforwardingclasstable"
    __resource_name__ = u"dscpforwardingclasstables"

    def __init__(self, **kwargs):
        """ Initializes a DSCPForwardingClassTable instance

            Notes:
                You can specify all parameters while calling this methods.
                A special argument named `data` will enable you to load the
                object from a Python dictionary

            Examples:
                >>> dscpforwardingclasstable = NUDSCPForwardingClassTable(id=u'xxxx-xxx-xxx-xxx', name=u'DSCPForwardingClassTable')
                >>> dscpforwardingclasstable = NUDSCPForwardingClassTable(data=my_dict)
        """

        super(NUDSCPForwardingClassTable, self).__init__()

        # Read/Write Attributes
        
        self._description = None
        self._name = None
        
        self.expose_attribute(local_name=u"description", remote_name=u"description", attribute_type=str, is_required=False, is_unique=False)
        self.expose_attribute(local_name=u"name", remote_name=u"name", attribute_type=str, is_required=True, is_unique=False)
        
        # Fetchers
        
        self.dscp_forwarding_class_mappings = NUDSCPForwardingClassMappingsFetcher.fetcher_with_object(parent_object=self)
        
        
        self.metadata = NUMetadatasFetcher.fetcher_with_object(parent_object=self)
        

        self._compute_args(**kwargs)

    # Properties
    
    def _get_description(self):
        """ Get description value.

            Notes:
                A description of the dscp-fc mapping table.

                
        """
        return self._description

    def _set_description(self, value):
        """ Set description value.

            Notes:
                A description of the dscp-fc mapping table.

                
        """
        self._description = value

    description = property(_get_description, _set_description)
    
    def _get_name(self):
        """ Get name value.

            Notes:
                A unique name of the dscp-fc mapping table.

                
        """
        return self._name

    def _set_name(self, value):
        """ Set name value.

            Notes:
                A unique name of the dscp-fc mapping table.

                
        """
        self._name = value

    name = property(_get_name, _set_name)
    