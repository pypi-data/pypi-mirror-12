# -*- coding: utf-8 -*-
#
# Copyright (c) 2015, Alcatel-Lucent Inc
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of the copyright holder nor the names of its contributors
#       may be used to endorse or promote products derived from this software without
#       specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


from ..fetchers import NUEventLogsFetcher
from ..fetchers import NUMetadatasFetcher
from bambou import NURESTObject


class NUIPReservation(NURESTObject):
    """ Represents a IPReservation in the VSD

        Notes:
            This is the definition of a IP Bindings associated with in a Network

        Warning:
            This file has been autogenerated. You should never change it.
            Override vsdk.NUIPReservation instead.
    """

    __rest_name__ = u"ipreservation"
    __resource_name__ = u"ipreservations"

    def __init__(self, **kwargs):
        """ Initializes a IPReservation instance

            Notes:
                You can specify all parameters while calling this methods.
                A special argument named `data` will enable you to load the
                object from a Python dictionary

            Examples:
                >>> ipreservation = NUIPReservation(id=u'xxxx-xxx-xxx-xxx', name=u'IPReservation')
                >>> ipreservation = NUIPReservation(data=my_dict)
        """

        super(NUIPReservation, self).__init__()

        # Read/Write Attributes
        
        self._dynamic_allocation_enabled = None
        self._ip_address = None
        self._mac = None
        
        self.expose_attribute(local_name=u"dynamic_allocation_enabled", remote_name=u"dynamicAllocationEnabled", attribute_type=bool, is_required=False, is_unique=False)
        self.expose_attribute(local_name=u"ip_address", remote_name=u"IPAddress", attribute_type=str, is_required=True, is_unique=False)
        self.expose_attribute(local_name=u"mac", remote_name=u"MAC", attribute_type=str, is_required=True, is_unique=False)
        
        # Fetchers
        
        self.event_logs = NUEventLogsFetcher.fetcher_with_object(parent_object=self)
        
        
        self.metadata = NUMetadatasFetcher.fetcher_with_object(parent_object=self)
        

        self._compute_args(**kwargs)

    # Properties
    
    def _get_dynamic_allocation_enabled(self):
        """ Get dynamic_allocation_enabled value.

            Notes:
                Binding is static or dynamic

                
                This attribute is named `dynamicAllocationEnabled` in VSD API.
                
        """
        return self._dynamic_allocation_enabled

    def _set_dynamic_allocation_enabled(self, value):
        """ Set dynamic_allocation_enabled value.

            Notes:
                Binding is static or dynamic

                
                This attribute is named `dynamicAllocationEnabled` in VSD API.
                
        """
        self._dynamic_allocation_enabled = value

    dynamic_allocation_enabled = property(_get_dynamic_allocation_enabled, _set_dynamic_allocation_enabled)
    
    def _get_ip_address(self):
        """ Get ip_address value.

            Notes:
                Static IP Address

                
                This attribute is named `IPAddress` in VSD API.
                
        """
        return self._ip_address

    def _set_ip_address(self, value):
        """ Set ip_address value.

            Notes:
                Static IP Address

                
                This attribute is named `IPAddress` in VSD API.
                
        """
        self._ip_address = value

    ip_address = property(_get_ip_address, _set_ip_address)
    
    def _get_mac(self):
        """ Get mac value.

            Notes:
                MAC Address

                
                This attribute is named `MAC` in VSD API.
                
        """
        return self._mac

    def _set_mac(self, value):
        """ Set mac value.

            Notes:
                MAC Address

                
                This attribute is named `MAC` in VSD API.
                
        """
        self._mac = value

    mac = property(_get_mac, _set_mac)
    