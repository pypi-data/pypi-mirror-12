# -*- coding: utf-8 -*-
#
# Copyright (c) 2015, Alcatel-Lucent Inc
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of the copyright holder nor the names of its contributors
#       may be used to endorse or promote products derived from this software without
#       specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


from ..fetchers import NUEventLogsFetcher
from ..fetchers import NUHSCsFetcher
from ..fetchers import NUVSCsFetcher
from ..fetchers import NUVSDsFetcher

from bambou import NURESTObject


class NUVSP(NURESTObject):
    """ Represents a VSP in the VSD

        Notes:
            System Monitoring details for VSP

        Warning:
            This file has been autogenerated. You should never change it.
            Override vsdk.NUVSP instead.
    """

    __rest_name__ = u"vsp"
    __resource_name__ = u"vsps"

    def __init__(self, **kwargs):
        """ Initializes a VSP instance

            Notes:
                You can specify all parameters while calling this methods.
                A special argument named `data` will enable you to load the
                object from a Python dictionary

            Examples:
                >>> vsp = NUVSP(id=u'xxxx-xxx-xxx-xxx', name=u'VSP')
                >>> vsp = NUVSP(data=my_dict)
        """

        super(NUVSP, self).__init__()

        # Read/Write Attributes
        
        self._description = None
        self._location = None
        self._name = None
        self._product_version = None
        
        self.expose_attribute(local_name=u"description", remote_name=u"description", attribute_type=str, is_required=False, is_unique=False)
        self.expose_attribute(local_name=u"location", remote_name=u"location", attribute_type=str, is_required=False, is_unique=False)
        self.expose_attribute(local_name=u"name", remote_name=u"name", attribute_type=str, is_required=False, is_unique=False)
        self.expose_attribute(local_name=u"product_version", remote_name=u"productVersion", attribute_type=str, is_required=False, is_unique=False)
        
        # Fetchers
        
        self.event_logs = NUEventLogsFetcher.fetcher_with_object(parent_object=self)
        
        self.hscs = NUHSCsFetcher.fetcher_with_object(parent_object=self)
        
        self.vscs = NUVSCsFetcher.fetcher_with_object(parent_object=self)
        
        self.vsds = NUVSDsFetcher.fetcher_with_object(parent_object=self)
        
        

        self._compute_args(**kwargs)

    # Properties
    
    def _get_description(self):
        """ Get description value.

            Notes:
                Description of the VSP

                
        """
        return self._description

    def _set_description(self, value):
        """ Set description value.

            Notes:
                Description of the VSP

                
        """
        self._description = value

    description = property(_get_description, _set_description)
    
    def _get_location(self):
        """ Get location value.

            Notes:
                Installed location of the VSP product

                
        """
        return self._location

    def _set_location(self, value):
        """ Set location value.

            Notes:
                Installed location of the VSP product

                
        """
        self._location = value

    location = property(_get_location, _set_location)
    
    def _get_name(self):
        """ Get name value.

            Notes:
                Name of the VSP

                
        """
        return self._name

    def _set_name(self, value):
        """ Set name value.

            Notes:
                Name of the VSP

                
        """
        self._name = value

    name = property(_get_name, _set_name)
    
    def _get_product_version(self):
        """ Get product_version value.

            Notes:
                Product version number for VSP

                
                This attribute is named `productVersion` in VSD API.
                
        """
        return self._product_version

    def _set_product_version(self, value):
        """ Set product_version value.

            Notes:
                Product version number for VSP

                
                This attribute is named `productVersion` in VSD API.
                
        """
        self._product_version = value

    product_version = property(_get_product_version, _set_product_version)
    