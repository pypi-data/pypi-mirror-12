# -*- coding: utf-8 -*-
#
# Copyright (c) 2015, Alcatel-Lucent Inc
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of the copyright holder nor the names of its contributors
#       may be used to endorse or promote products derived from this software without
#       specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


from ..fetchers import NUEventLogsFetcher
from ..fetchers import NUVPortsFetcher

from bambou import NURESTObject


class NUFloatingIp(NURESTObject):
    """ Represents a FloatingIp in the VSD

        Notes:
            Floating IP that is associated to a Domain. This floating IP could be used in the VM interface for NAT functionality

        Warning:
            This file has been autogenerated. You should never change it.
            Override vsdk.NUFloatingIp instead.
    """

    __rest_name__ = u"floatingip"
    __resource_name__ = u"floatingips"

    def __init__(self, **kwargs):
        """ Initializes a FloatingIp instance

            Notes:
                You can specify all parameters while calling this methods.
                A special argument named `data` will enable you to load the
                object from a Python dictionary

            Examples:
                >>> floatingip = NUFloatingIp(id=u'xxxx-xxx-xxx-xxx', name=u'FloatingIp')
                >>> floatingip = NUFloatingIp(data=my_dict)
        """

        super(NUFloatingIp, self).__init__()

        # Read/Write Attributes
        
        self._address = None
        self._assigned = None
        self._assigned_to_object_type = None
        self._associated_shared_network_resource_id = None
        
        self.expose_attribute(local_name=u"address", remote_name=u"address", attribute_type=str, is_required=False, is_unique=False)
        self.expose_attribute(local_name=u"assigned", remote_name=u"assigned", attribute_type=bool, is_required=False, is_unique=False)
        self.expose_attribute(local_name=u"assigned_to_object_type", remote_name=u"assignedToObjectType", attribute_type=str, is_required=False, is_unique=False)
        self.expose_attribute(local_name=u"associated_shared_network_resource_id", remote_name=u"associatedSharedNetworkResourceID", attribute_type=str, is_required=True, is_unique=False)
        
        # Fetchers
        
        self.event_logs = NUEventLogsFetcher.fetcher_with_object(parent_object=self)
        
        self.vports = NUVPortsFetcher.fetcher_with_object(parent_object=self)
        
        

        self._compute_args(**kwargs)

    # Properties
    
    def _get_address(self):
        """ Get address value.

            Notes:
                Floating IP address assigned to the Domain

                
        """
        return self._address

    def _set_address(self, value):
        """ Set address value.

            Notes:
                Floating IP address assigned to the Domain

                
        """
        self._address = value

    address = property(_get_address, _set_address)
    
    def _get_assigned(self):
        """ Get assigned value.

            Notes:
                True if this floating IP is assigned to a network interface else the value is false

                
        """
        return self._assigned

    def _set_assigned(self, value):
        """ Set assigned value.

            Notes:
                True if this floating IP is assigned to a network interface else the value is false

                
        """
        self._assigned = value

    assigned = property(_get_assigned, _set_assigned)
    
    def _get_assigned_to_object_type(self):
        """ Get assigned_to_object_type value.

            Notes:
                The object type to which this floating ip is assigned. Eg. vport or virtualip

                
                This attribute is named `assignedToObjectType` in VSD API.
                
        """
        return self._assigned_to_object_type

    def _set_assigned_to_object_type(self, value):
        """ Set assigned_to_object_type value.

            Notes:
                The object type to which this floating ip is assigned. Eg. vport or virtualip

                
                This attribute is named `assignedToObjectType` in VSD API.
                
        """
        self._assigned_to_object_type = value

    assigned_to_object_type = property(_get_assigned_to_object_type, _set_assigned_to_object_type)
    
    def _get_associated_shared_network_resource_id(self):
        """ Get associated_shared_network_resource_id value.

            Notes:
                Id of the shared network resource subnet which was used to get this floating IP address

                
                This attribute is named `associatedSharedNetworkResourceID` in VSD API.
                
        """
        return self._associated_shared_network_resource_id

    def _set_associated_shared_network_resource_id(self, value):
        """ Set associated_shared_network_resource_id value.

            Notes:
                Id of the shared network resource subnet which was used to get this floating IP address

                
                This attribute is named `associatedSharedNetworkResourceID` in VSD API.
                
        """
        self._associated_shared_network_resource_id = value

    associated_shared_network_resource_id = property(_get_associated_shared_network_resource_id, _set_associated_shared_network_resource_id)
    