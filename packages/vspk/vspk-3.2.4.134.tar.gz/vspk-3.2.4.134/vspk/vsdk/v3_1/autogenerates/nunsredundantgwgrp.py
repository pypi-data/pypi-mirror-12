# -*- coding: utf-8 -*-
#
# Copyright (c) 2015, Alcatel-Lucent Inc
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of the copyright holder nor the names of its contributors
#       may be used to endorse or promote products derived from this software without
#       specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.



from bambou import NURESTObject


class NUNSRedundantGWGrp(NURESTObject):
    """ Represents a NSRedundantGWGrp in the VSD

        Notes:
            Represents Redundant Group formed by two VNS Gateways

        Warning:
            This file has been autogenerated. You should never change it.
            Override vsdk.NUNSRedundantGWGrp instead.
    """

    __rest_name__ = u"nsgredundancygroup"
    __resource_name__ = u"nsgredundancygroups"

    def __init__(self, **kwargs):
        """ Initializes a NSRedundantGWGrp instance

            Notes:
                You can specify all parameters while calling this methods.
                A special argument named `data` will enable you to load the
                object from a Python dictionary

            Examples:
                >>> nsredundantgwgrp = NUNSRedundantGWGrp(id=u'xxxx-xxx-xxx-xxx', name=u'NSRedundantGWGrp')
                >>> nsredundantgwgrp = NUNSRedundantGWGrp(data=my_dict)
        """

        super(NUNSRedundantGWGrp, self).__init__()

        # Read/Write Attributes
        
        self._consecutive_failures_count = None
        self._description = None
        self._enterprise_id = None
        self._gateway_peer1_autodiscovered_gateway_id = None
        self._gateway_peer1_id = None
        self._gateway_peer1_name = None
        self._gateway_peer2_autodiscovered_gateway_id = None
        self._gateway_peer2_id = None
        self._gateway_peer2_name = None
        self._heartbeat_interval = None
        self._heartbeat_vlanid = None
        self._name = None
        self._permitted_action = None
        self._personality = None
        self._redundancy_port_ids = None
        self._redundant_gateway_status = None
        
        self.expose_attribute(local_name=u"consecutive_failures_count", remote_name=u"consecutiveFailuresCount", attribute_type=int, is_required=False, is_unique=False)
        self.expose_attribute(local_name=u"description", remote_name=u"description", attribute_type=str, is_required=False, is_unique=False)
        self.expose_attribute(local_name=u"enterprise_id", remote_name=u"enterpriseID", attribute_type=str, is_required=False, is_unique=False)
        self.expose_attribute(local_name=u"gateway_peer1_autodiscovered_gateway_id", remote_name=u"gatewayPeer1AutodiscoveredGatewayID", attribute_type=str, is_required=False, is_unique=False)
        self.expose_attribute(local_name=u"gateway_peer1_id", remote_name=u"gatewayPeer1ID", attribute_type=str, is_required=False, is_unique=False)
        self.expose_attribute(local_name=u"gateway_peer1_name", remote_name=u"gatewayPeer1Name", attribute_type=str, is_required=False, is_unique=False)
        self.expose_attribute(local_name=u"gateway_peer2_autodiscovered_gateway_id", remote_name=u"gatewayPeer2AutodiscoveredGatewayID", attribute_type=str, is_required=False, is_unique=False)
        self.expose_attribute(local_name=u"gateway_peer2_id", remote_name=u"gatewayPeer2ID", attribute_type=str, is_required=False, is_unique=False)
        self.expose_attribute(local_name=u"gateway_peer2_name", remote_name=u"gatewayPeer2Name", attribute_type=str, is_required=False, is_unique=False)
        self.expose_attribute(local_name=u"heartbeat_interval", remote_name=u"heartbeatInterval", attribute_type=long, is_required=False, is_unique=False)
        self.expose_attribute(local_name=u"heartbeat_vlanid", remote_name=u"heartbeatVLANID", attribute_type=int, is_required=False, is_unique=False)
        self.expose_attribute(local_name=u"name", remote_name=u"name", attribute_type=str, is_required=True, is_unique=False)
        self.expose_attribute(local_name=u"permitted_action", remote_name=u"permittedAction", attribute_type=str, is_required=False, is_unique=False, choices=[u'ALL', u'DEPLOY', u'EXTEND', u'INSTANTIATE', u'READ', u'USE'])
        self.expose_attribute(local_name=u"personality", remote_name=u"personality", attribute_type=str, is_required=False, is_unique=False, choices=[u'DC7X50', u'HARDWARE_VTEP', u'NSG', u'OTHER', u'VRSG', u'VSA', u'VSG'])
        self.expose_attribute(local_name=u"redundancy_port_ids", remote_name=u"redundancyPortIDs", attribute_type=list, is_required=False, is_unique=False)
        self.expose_attribute(local_name=u"redundant_gateway_status", remote_name=u"redundantGatewayStatus", attribute_type=str, is_required=False, is_unique=False, choices=[u'FAILED', u'SUCCESS'])
        
        

        self._compute_args(**kwargs)

    # Properties
    
    def _get_consecutive_failures_count(self):
        """ Get consecutive_failures_count value.

            Notes:
                Consecutive failure count. Default 3

                
                This attribute is named `consecutiveFailuresCount` in VSD API.
                
        """
        return self._consecutive_failures_count

    def _set_consecutive_failures_count(self, value):
        """ Set consecutive_failures_count value.

            Notes:
                Consecutive failure count. Default 3

                
                This attribute is named `consecutiveFailuresCount` in VSD API.
                
        """
        self._consecutive_failures_count = value

    consecutive_failures_count = property(_get_consecutive_failures_count, _set_consecutive_failures_count)
    
    def _get_description(self):
        """ Get description value.

            Notes:
                 Description of the Redundancy Group

                
        """
        return self._description

    def _set_description(self, value):
        """ Set description value.

            Notes:
                 Description of the Redundancy Group

                
        """
        self._description = value

    description = property(_get_description, _set_description)
    
    def _get_enterprise_id(self):
        """ Get enterprise_id value.

            Notes:
                The enterprise associated with this Redundant Group. This is a read only attribute

                
                This attribute is named `enterpriseID` in VSD API.
                
        """
        return self._enterprise_id

    def _set_enterprise_id(self, value):
        """ Set enterprise_id value.

            Notes:
                The enterprise associated with this Redundant Group. This is a read only attribute

                
                This attribute is named `enterpriseID` in VSD API.
                
        """
        self._enterprise_id = value

    enterprise_id = property(_get_enterprise_id, _set_enterprise_id)
    
    def _get_gateway_peer1_autodiscovered_gateway_id(self):
        """ Get gateway_peer1_autodiscovered_gateway_id value.

            Notes:
                The Auto Discovered Gateway configuration owner in this Redundant Group. 

                
                This attribute is named `gatewayPeer1AutodiscoveredGatewayID` in VSD API.
                
        """
        return self._gateway_peer1_autodiscovered_gateway_id

    def _set_gateway_peer1_autodiscovered_gateway_id(self, value):
        """ Set gateway_peer1_autodiscovered_gateway_id value.

            Notes:
                The Auto Discovered Gateway configuration owner in this Redundant Group. 

                
                This attribute is named `gatewayPeer1AutodiscoveredGatewayID` in VSD API.
                
        """
        self._gateway_peer1_autodiscovered_gateway_id = value

    gateway_peer1_autodiscovered_gateway_id = property(_get_gateway_peer1_autodiscovered_gateway_id, _set_gateway_peer1_autodiscovered_gateway_id)
    
    def _get_gateway_peer1_id(self):
        """ Get gateway_peer1_id value.

            Notes:
                The gateway configuration owner in this Redundant Group. when Redundant Group is deleted this gateway will recieve vport associations 

                
                This attribute is named `gatewayPeer1ID` in VSD API.
                
        """
        return self._gateway_peer1_id

    def _set_gateway_peer1_id(self, value):
        """ Set gateway_peer1_id value.

            Notes:
                The gateway configuration owner in this Redundant Group. when Redundant Group is deleted this gateway will recieve vport associations 

                
                This attribute is named `gatewayPeer1ID` in VSD API.
                
        """
        self._gateway_peer1_id = value

    gateway_peer1_id = property(_get_gateway_peer1_id, _set_gateway_peer1_id)
    
    def _get_gateway_peer1_name(self):
        """ Get gateway_peer1_name value.

            Notes:
                The gateway   configuration owner name in this Redundant Group

                
                This attribute is named `gatewayPeer1Name` in VSD API.
                
        """
        return self._gateway_peer1_name

    def _set_gateway_peer1_name(self, value):
        """ Set gateway_peer1_name value.

            Notes:
                The gateway   configuration owner name in this Redundant Group

                
                This attribute is named `gatewayPeer1Name` in VSD API.
                
        """
        self._gateway_peer1_name = value

    gateway_peer1_name = property(_get_gateway_peer1_name, _set_gateway_peer1_name)
    
    def _get_gateway_peer2_autodiscovered_gateway_id(self):
        """ Get gateway_peer2_autodiscovered_gateway_id value.

            Notes:
                The Auto Discovered Gateway  peer in this Redundant Group

                
                This attribute is named `gatewayPeer2AutodiscoveredGatewayID` in VSD API.
                
        """
        return self._gateway_peer2_autodiscovered_gateway_id

    def _set_gateway_peer2_autodiscovered_gateway_id(self, value):
        """ Set gateway_peer2_autodiscovered_gateway_id value.

            Notes:
                The Auto Discovered Gateway  peer in this Redundant Group

                
                This attribute is named `gatewayPeer2AutodiscoveredGatewayID` in VSD API.
                
        """
        self._gateway_peer2_autodiscovered_gateway_id = value

    gateway_peer2_autodiscovered_gateway_id = property(_get_gateway_peer2_autodiscovered_gateway_id, _set_gateway_peer2_autodiscovered_gateway_id)
    
    def _get_gateway_peer2_id(self):
        """ Get gateway_peer2_id value.

            Notes:
                The gateway peer in this Redundant Group. when Redundant Group is deleted this gateway will not recieve vport associations 

                
                This attribute is named `gatewayPeer2ID` in VSD API.
                
        """
        return self._gateway_peer2_id

    def _set_gateway_peer2_id(self, value):
        """ Set gateway_peer2_id value.

            Notes:
                The gateway peer in this Redundant Group. when Redundant Group is deleted this gateway will not recieve vport associations 

                
                This attribute is named `gatewayPeer2ID` in VSD API.
                
        """
        self._gateway_peer2_id = value

    gateway_peer2_id = property(_get_gateway_peer2_id, _set_gateway_peer2_id)
    
    def _get_gateway_peer2_name(self):
        """ Get gateway_peer2_name value.

            Notes:
                The gateway peer name in this Redundant Group

                
                This attribute is named `gatewayPeer2Name` in VSD API.
                
        """
        return self._gateway_peer2_name

    def _set_gateway_peer2_name(self, value):
        """ Set gateway_peer2_name value.

            Notes:
                The gateway peer name in this Redundant Group

                
                This attribute is named `gatewayPeer2Name` in VSD API.
                
        """
        self._gateway_peer2_name = value

    gateway_peer2_name = property(_get_gateway_peer2_name, _set_gateway_peer2_name)
    
    def _get_heartbeat_interval(self):
        """ Get heartbeat_interval value.

            Notes:
                Heartbeat interval in milliseconds to declare the neighbor dead. Default 500 milliseconds

                
                This attribute is named `heartbeatInterval` in VSD API.
                
        """
        return self._heartbeat_interval

    def _set_heartbeat_interval(self, value):
        """ Set heartbeat_interval value.

            Notes:
                Heartbeat interval in milliseconds to declare the neighbor dead. Default 500 milliseconds

                
                This attribute is named `heartbeatInterval` in VSD API.
                
        """
        self._heartbeat_interval = value

    heartbeat_interval = property(_get_heartbeat_interval, _set_heartbeat_interval)
    
    def _get_heartbeat_vlanid(self):
        """ Get heartbeat_vlanid value.

            Notes:
                Heartbeat VLAN used for BFD. Default 4094

                
                This attribute is named `heartbeatVLANID` in VSD API.
                
        """
        return self._heartbeat_vlanid

    def _set_heartbeat_vlanid(self, value):
        """ Set heartbeat_vlanid value.

            Notes:
                Heartbeat VLAN used for BFD. Default 4094

                
                This attribute is named `heartbeatVLANID` in VSD API.
                
        """
        self._heartbeat_vlanid = value

    heartbeat_vlanid = property(_get_heartbeat_vlanid, _set_heartbeat_vlanid)
    
    def _get_name(self):
        """ Get name value.

            Notes:
                Name of the Redundancy Group 

                
        """
        return self._name

    def _set_name(self, value):
        """ Set name value.

            Notes:
                Name of the Redundancy Group 

                
        """
        self._name = value

    name = property(_get_name, _set_name)
    
    def _get_permitted_action(self):
        """ Get permitted_action value.

            Notes:
                The permitted  action to USE/EXTEND  this Gateway Possible values are USE, READ, ALL, INSTANTIATE, EXTEND, DEPLOY, .

                
                This attribute is named `permittedAction` in VSD API.
                
        """
        return self._permitted_action

    def _set_permitted_action(self, value):
        """ Set permitted_action value.

            Notes:
                The permitted  action to USE/EXTEND  this Gateway Possible values are USE, READ, ALL, INSTANTIATE, EXTEND, DEPLOY, .

                
                This attribute is named `permittedAction` in VSD API.
                
        """
        self._permitted_action = value

    permitted_action = property(_get_permitted_action, _set_permitted_action)
    
    def _get_personality(self):
        """ Get personality value.

            Notes:
                derived personality of the Redundancy Group - VSG,VRSG,NSG,OTHER Possible values are VSG, VSA, VRSG, DC7X50, NSG, HARDWARE_VTEP, OTHER, .

                
        """
        return self._personality

    def _set_personality(self, value):
        """ Set personality value.

            Notes:
                derived personality of the Redundancy Group - VSG,VRSG,NSG,OTHER Possible values are VSG, VSA, VRSG, DC7X50, NSG, HARDWARE_VTEP, OTHER, .

                
        """
        self._personality = value

    personality = property(_get_personality, _set_personality)
    
    def _get_redundancy_port_ids(self):
        """ Get redundancy_port_ids value.

            Notes:
                Collections resilient port ids associated with this redundant group.

                
                This attribute is named `redundancyPortIDs` in VSD API.
                
        """
        return self._redundancy_port_ids

    def _set_redundancy_port_ids(self, value):
        """ Set redundancy_port_ids value.

            Notes:
                Collections resilient port ids associated with this redundant group.

                
                This attribute is named `redundancyPortIDs` in VSD API.
                
        """
        self._redundancy_port_ids = value

    redundancy_port_ids = property(_get_redundancy_port_ids, _set_redundancy_port_ids)
    
    def _get_redundant_gateway_status(self):
        """ Get redundant_gateway_status value.

            Notes:
                The status of  Redundant Group, possible values are FAILED, SUCCESS Possible values are FAILED, SUCCESS, .

                
                This attribute is named `redundantGatewayStatus` in VSD API.
                
        """
        return self._redundant_gateway_status

    def _set_redundant_gateway_status(self, value):
        """ Set redundant_gateway_status value.

            Notes:
                The status of  Redundant Group, possible values are FAILED, SUCCESS Possible values are FAILED, SUCCESS, .

                
                This attribute is named `redundantGatewayStatus` in VSD API.
                
        """
        self._redundant_gateway_status = value

    redundant_gateway_status = property(_get_redundant_gateway_status, _set_redundant_gateway_status)
    