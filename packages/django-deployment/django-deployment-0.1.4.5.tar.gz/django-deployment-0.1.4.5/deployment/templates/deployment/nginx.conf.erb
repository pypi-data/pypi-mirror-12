<% if @use_ssl %>
# redirect users who come in over 80
server {
       listen         80;
       server_name    <%= @server_name %>;
       return         301 https://$server_name$request_uri;
}

server {
       listen         80;
       server_name    www.<%= @server_name %>;
       return         301 https://$server_name$request_uri;
}
<% end %>

server {
    <% if @use_ssl %>
    listen   443;
    ssl    on;
    ssl_certificate    <%= @ssl_certificate %>;
    ssl_certificate_key    <%= @ssl_certificate_key %>;
    <% else %>
    listen   80;
    <% end %>
    server_name <%= @server_name %>;
    # no security problem here, since / is alway passed to upstream
    root <%= @project_dir %>;
    # serve directly - analogous for static/staticfiles
    location /media/ {
        alias <%= @project_dir %>/media/;
    }

    location /static/ {
        alias <%= @project_dir %>/static_root/;
    }

    location /admin/media/ {
        # this changes depending on your python version
        alias <%= @project_dir %>/lib/python2.7/site-packages/django/contrib/;
    }
    location / {
        proxy_pass_header Server;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        <% if @use_ssl %>proxy_set_header X-Forwarded-Proto https;<% end %>
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_connect_timeout 300;
        proxy_read_timeout 300;
        proxy_pass http://localhost:<%= @gunicorn_port %>/;
        client_max_body_size 20M;
    }
    # what to serve if upstream is not available or crashes
    error_page 404 500 502 503 504 /static/503.html;
}