import argparse
import sys

from minsci.mosaic import mosey, organizer, Selector




def main(args=None):


    class MyParser(argparse.ArgumentParser):
        # From http://stackoverflow.com/questions/4042452
        def error(self, message):
            sys.stderr.write('error: %s\n' % message)
            self.print_help()
            sys.exit(2)




    def mosaic_callback(args):
        args = vars(args)
        mosey(args['path'], jpeg=args['create_jpeg'])




    def organize_callback(args):
        args = vars(args)
        organizer(args['source'], args['destination'])




    def select_callback(args):
        args = vars(args)
        selector = Selector(args['path'])
        params = selector.get_job_settings()
        selector.select(*params)




    if args is None:
        args = sys.argv[1:]

    parser = MyParser(
        description=('Provides access to the mosaic and selector'
                     ' functions from the MinSci Toolkit')
    )
    subparsers = parser.add_subparsers(help='sub-command help')

    # Mosaic subcommand
    mosaic_parser = subparsers.add_parser(
        'mosaic',
        help='Stitch regularly spaced tiles into a mosaic')
    mosaic_parser.add_argument(
        '-p',
        dest = 'path',
        type=str,
        help='the path to the mosaics directory')
    mosaic_parser.add_argument(
        '--create_jpeg',
        action='store_true',
        help='specifies whether to create a JPEG derivative'
             ' from the mosaic')
    mosaic_parser.add_argument(
        '--skipped',
        action='store_true',
        help='the path to a text file containg the indexes of'
             ' skipped files generated by selector')
    mosaic_parser.set_defaults(func=mosaic_callback)

    # Organize subcommand
    organize_parser = subparsers.add_parser(
        'organize',
        help='Organize element maps into folders')
    organize_parser.add_argument(
        dest='source',
        type=str,
        nargs='?',
        help='the path to the directory containing the element maps')
    organize_parser.add_argument(
        dest = 'destination',
        type=str,
        nargs='?',
        help='the path to the directory in which to store the organized maps')
    organize_parser.set_defaults(func=organize_callback)

    # Select subcommand
    select_parser = subparsers.add_parser(
        'select',
        help='Select tiles to exclude from an SEM map')
    select_parser.add_argument(
        '-p',
        dest = 'path',
        type=str,
        help='the path to the mosaics directory')
    select_parser.set_defaults(func=select_callback)

    args = parser.parse_args(args)
    args.func(args)




if __name__ == 'main':
    main()
