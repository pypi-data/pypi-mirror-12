{"version":3,"sources":["utils.js","app.js","modal.js","routes.js","sideNavigation.js","toolBar.js","pageHeader.js","sideNav.js"],"names":["registerModule","module","angular","requires","push","name","bootstrapApplication","element","document","ready","bootstrap","window","loading_screen","finish","app","config","$mdThemingProvider","$mdIconProvider","fontSet","theme","primaryPalette","String","prototype","startsWith","prefix","this","indexOf","service","$modal","defaultOptions","backdrop","keyboard","modalFade","size","templateUrl","headerText","bodyText","okText","okType","closeText","closeType","showModal","options","tempOptions","extend","controller","$scope","$modalInstance","modalOptions","ok","result","close","dismiss","open","provider","$stateProvider","$urlRouterProvider","otherwise","$injector","$location","$state","get","go","$get","register","url","template","state","run","$rootScope","$mdSidenav","$mdMedia","toggleNav","isLockedOpen","menuMini","toggle","closeNav","$event","factory","items","href","caption","icon","order","type","label","cssClass","width","defaultOrder","getMenu","menu","i","len","length","item","registerButton","action","registerMenu","existingMenu","registerMenuItem","directive","restrict","replace","sideNav","link","scope","attrs","navItems","toolBar","toolBarItems"],"mappings":"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","file":"flexget.min.js","sourcesContent":["'use strict';\r\n\r\nString.prototype.startsWith = function(prefix) {\r\n  return this.indexOf(prefix) === 0;\r\n};\r\n\r\nfunction registerModule(module) {\r\n  angular.module('flexget').requires.push(module.name);\r\n}","(function () {\r\n  'use strict';\r\n\r\n  var app = angular.module('flexget', ['ui.router', 'ngMaterial', 'ngCookies', 'flexget.services']);\r\n\r\n  function bootstrapApplication() {\r\n    angular.element(document).ready(function () {\r\n      angular.bootstrap(document, ['flexget']);\r\n    });\r\n    window.loading_screen.finish();\r\n  }\r\n\r\n  app.config(function ($mdThemingProvider, $mdIconProvider) {\r\n    $mdIconProvider.fontSet('fa', 'fa');\r\n    $mdThemingProvider.theme('default').primaryPalette('orange');\r\n  });\r\n\r\n  // flexget.services can be used by plugins to access flexget services in module.config and module.run\r\n  angular.module('flexget.services', []);\r\n\r\n  bootstrapApplication();\r\n})();","(function () {\r\n  'use strict';\r\n\r\n  angular.module('flexget.services').service('modal', ['$modal',\r\n    function ($modal) {\r\n\r\n      var defaultOptions = {\r\n        backdrop: true,\r\n        keyboard: true,\r\n        modalFade: true,\r\n        size: 'md',\r\n        templateUrl: '/ui/static/partials/modal.html',\r\n        headerText: 'Proceed?',\r\n        bodyText: 'Perform this action?',\r\n        okText: 'Ok',\r\n        okType: 'primary',\r\n        closeText: 'Cancel',\r\n        closeType: 'default'\r\n      };\r\n\r\n      this.showModal = function (options) {\r\n        //Create temp objects to work with since we're in a singleton service\r\n        var tempOptions = {};\r\n        angular.extend(tempOptions, defaultOptions, options);\r\n\r\n        if (!tempOptions.controller) {\r\n          tempOptions.controller = function ($scope, $modalInstance) {\r\n            $scope.modalOptions = tempOptions;\r\n\r\n            $scope.ok = function (result) {\r\n              $modalInstance.close(result);\r\n            };\r\n            $scope.close = function (result) {\r\n              $modalInstance.dismiss('cancel');\r\n            };\r\n          }\r\n        }\r\n        return $modal.open(tempOptions).result;\r\n      };\r\n\r\n    }]);\r\n})();","(function () {\r\n  'use strict';\r\n\r\n  angular.module('flexget.services')\r\n    .provider('route', function($stateProvider, $urlRouterProvider) {\r\n      $urlRouterProvider.otherwise(function ($injector, $location) {\r\n        var $state = $injector.get(\"$state\");\r\n        $state.go(\"home\");\r\n      });\r\n\r\n      this.$get = function () {\r\n        return {\r\n          register: function (name, url, controller, template) {\r\n            $stateProvider.state(name, {\r\n              url: url,\r\n              templateUrl: template,\r\n              controller: controller\r\n            });\r\n          }\r\n        }\r\n      }\r\n    })\r\n})();\r\n\r\n\r\n","(function () {\r\n  'use strict';\r\n\r\n  angular.module('flexget').run(function($rootScope, $mdSidenav, $mdMedia) {\r\n    $rootScope.toggleNav = function () {\r\n      if ($mdSidenav('left').isLockedOpen()) {\r\n        $rootScope.menuMini = !$rootScope.menuMini;\r\n      } else {\r\n        $rootScope.menuMini = false;\r\n        $mdSidenav('left').toggle();\r\n      }\r\n    };\r\n\r\n    $rootScope.closeNav = function ($event) {\r\n      if (!$mdMedia('gt-lg')) {\r\n        $mdSidenav('left').close();\r\n      }\r\n    };\r\n  });\r\n\r\n  angular.module('flexget.services')\r\n    .factory('sideNav', function() {\r\n      var items = [];\r\n\r\n      return {\r\n        register: function(href, caption, icon, order) {\r\n          href = '/ui/#' + href;\r\n          items.push({href: href, caption: caption, icon: icon, order: order})\r\n        },\r\n        items: items\r\n      }\r\n    });\r\n\r\n})();\r\n\r\n\r\n","(function () {\r\n  'use strict';\r\n\r\n  angular.module('flexget').directive('toolBar', function (toolBar) {\r\n\r\n    var template = '<div class=\"admin-toolbar\">' +\r\n        '<md-toolbar class=\"admin-toolbar\">' +\r\n            '<div class=\"md-toolbar-tools\">' +\r\n                '<md-button class=\"md-icon-button\" ng-click=\"toggleNav()\" style=\"width: 40px\">' +\r\n                    '<md-icon class=\"fa fa-bars\" aria-label=\"Menu\"></md-icon>' +\r\n                '</md-button>' +\r\n                '<span flex></span>' +\r\n                '<div ng-repeat=\"item in toolBarItems | orderBy:\\'order\\'\">' +\r\n                  '<md-button aria-label=\"{{ item.label }}\" class=\"md-icon-button\" ng-click=\"item.action()\" ng-if=\"item.type == \\'button\\'\">' +\r\n                      '<md-tooltip>{{ item.label }}</md-tooltip>' +\r\n                      '<md-icon md-menu-origin class=\"{{ item.cssClass }}\"></md-icon>' +\r\n                  '</md-button>' +\r\n                  '<md-menu ng-if=\"item.type == \\'menu\\'\">' +\r\n                    '<md-button aria-label=\"{{ item.label }}\" class=\"md-icon-button\" ng-click=\"$mdOpenMenu($event)\">' +\r\n                        '<md-tooltip>{{ item.label }}</md-tooltip>' +\r\n                        '<md-icon md-menu-origin class=\"{{ item.cssClass }}\"></md-icon>' +\r\n                    '</md-button>' +\r\n                    '<md-menu-content width=\"{{ item.width }}\">' +\r\n                      '<md-menu-item ng-repeat=\"menuItem in item.items | orderBy:\\'order\\'\">' +\r\n                        '<md-button ng-click=\"menuItem.action()\"><md-icon md-menu-origin class=\"{{ menuItem.cssClass }}\"></md-icon>{{ menuItem.label }}</md-button>' +\r\n                      '</md-menu-item>' +\r\n                    '</md-menu-content>' +\r\n                  '</md-menu>' +\r\n                '</div>' +\r\n            '</div>' +\r\n        '</md-toolbar>' +\r\n    '</div>';\r\n\r\n    return {\r\n      restrict: 'E',\r\n      replace: 'true',\r\n      template: template,\r\n      link: function (scope, element, attrs) {\r\n        scope.toolBarItems = toolBar.items;\r\n      }\r\n    };\r\n  });\r\n\r\n})();","(function () {\r\n  'use strict';\r\n\r\n  angular.module('flexget').directive('pageHeader', function () {\r\n    return {\r\n      restrict: 'AE',\r\n      replace: 'true',\r\n      template: '<section class=\"content-header\"><h1>{{title }}<small>{{ description }}</small></h1></section>'\r\n    };\r\n  });\r\n\r\n})();","(function () {\r\n  'use strict';\r\n\r\n  angular.module('flexget').directive('sideNav', function (sideNav) {\r\n\r\n    var template = '<md-sidenav' +\r\n      ' layout=\"column\" class=\"nav-menu md-sidenav-left md-sidenav-left md-whiteframe-z2\" md-component-id=\"left\" md-is-locked-open=\"$mdMedia(\\'gt-lg\\')\">' +\r\n      '<md-content layout=\"column\" flex>' +\r\n      '<md-list>' +\r\n      '<md-list-item class=\"header\">Menu</md-list-item>' +\r\n      '<md-list-item ng-repeat=\"item in navItems\">' +\r\n      '<md-button href=\"{{ item.href }}\" ng-click=\"closeNav()\" flex>' +\r\n      '<md-icon class=\"{{ item.icon }}\"></md-icon>' +\r\n      '{{ item.caption }}' +\r\n      '</md-button>' +\r\n      '</md-list-item>' +\r\n      '</md-list>' +\r\n      '</md-content>' +\r\n      '</md-sidenav>';\r\n\r\n    return {\r\n      restrict: 'E',\r\n      replace: 'true',\r\n      template: template,\r\n      link: function (scope, element, attrs) {\r\n        scope.navItems = sideNav.items;\r\n      }\r\n    };\r\n  });\r\n\r\n})();"],"sourceRoot":"/source/"}