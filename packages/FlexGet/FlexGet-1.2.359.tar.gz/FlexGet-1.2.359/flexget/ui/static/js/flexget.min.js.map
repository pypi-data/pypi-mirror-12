{"version":3,"sources":["utils.js","app.js","modal.js","routes.js","sidenav.js","pageHeader.js","flexet.js"],"names":["registerModule","module","angular","requires","push","name","bootstrapApplication","element","document","ready","bootstrap","app","config","$mdThemingProvider","$mdIconProvider","fontSet","theme","primaryPalette","String","prototype","startsWith","prefix","this","indexOf","service","$modal","defaultOptions","backdrop","keyboard","modalFade","size","templateUrl","headerText","bodyText","okText","okType","closeText","closeType","showModal","options","tempOptions","extend","controller","$scope","$modalInstance","modalOptions","ok","result","close","dismiss","open","provider","$stateProvider","$urlRouterProvider","otherwise","$injector","$location","$state","get","go","register","url","template","state","$get","items","href","caption","icon","order","directive","restrict","replace","$http","$mdSidenav","$mdMedia","$mdDialog","sideNav","menuItems","toggleMenu","isLockedOpen","menuMini","toggle","closeNav","$event","reload","reloadController","title","showCircular","content","buttons","hide","done","text","success","data","status","headers","error","show","parent","body","doShutdown","window","stop","shutdownController","shutdown","confirm","cancel","then"],"mappings":"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","file":"flexget.min.js","sourcesContent":["'use strict';\r\n\r\nString.prototype.startsWith = function(prefix) {\r\n  return this.indexOf(prefix) === 0;\r\n};\r\n\r\nfunction registerModule(module) {\r\n  angular.module('flexget').requires.push(module.name);\r\n}","(function () {\r\n  'use strict';\r\n\r\n  var app = angular.module('flexget', ['ui.router', 'ngMaterial', 'ngCookies', 'flexget.services']);\r\n\r\n  function bootstrapApplication() {\r\n    angular.element(document).ready(function () {\r\n      angular.bootstrap(document, ['flexget']);\r\n    });\r\n  }\r\n\r\n  app.config(function ($mdThemingProvider, $mdIconProvider) {\r\n    $mdIconProvider.fontSet('fa', 'fa');\r\n    $mdThemingProvider.theme('default').primaryPalette('orange');\r\n  });\r\n\r\n  // flexget.services can be used by plugins to access flexget services in module.config and module.run\r\n  angular.module('flexget.services', []);\r\n\r\n  bootstrapApplication();\r\n})();","(function () {\r\n  'use strict';\r\n\r\n  angular.module('flexget.services').service('modal', ['$modal',\r\n    function ($modal) {\r\n\r\n      var defaultOptions = {\r\n        backdrop: true,\r\n        keyboard: true,\r\n        modalFade: true,\r\n        size: 'md',\r\n        templateUrl: '/ui/static/partials/modal.html',\r\n        headerText: 'Proceed?',\r\n        bodyText: 'Perform this action?',\r\n        okText: 'Ok',\r\n        okType: 'primary',\r\n        closeText: 'Cancel',\r\n        closeType: 'default'\r\n      };\r\n\r\n      this.showModal = function (options) {\r\n        //Create temp objects to work with since we're in a singleton service\r\n        var tempOptions = {};\r\n        angular.extend(tempOptions, defaultOptions, options);\r\n\r\n        if (!tempOptions.controller) {\r\n          tempOptions.controller = function ($scope, $modalInstance) {\r\n            $scope.modalOptions = tempOptions;\r\n\r\n            $scope.ok = function (result) {\r\n              $modalInstance.close(result);\r\n            };\r\n            $scope.close = function (result) {\r\n              $modalInstance.dismiss('cancel');\r\n            };\r\n          }\r\n        }\r\n        return $modal.open(tempOptions).result;\r\n      };\r\n\r\n    }]);\r\n})();","(function () {\r\n  'use strict';\r\n\r\n  angular.module('flexget.services')\r\n    .provider('route', function($stateProvider, $urlRouterProvider) {\r\n      $urlRouterProvider.otherwise( function($injector, $location) {\r\n        var $state = $injector.get(\"$state\");\r\n        $state.go(\"home\");\r\n      });\r\n\r\n      this.register = function(name, url, controller, template) {\r\n        $stateProvider.state(name, {\r\n          url: url,\r\n          templateUrl: template,\r\n          controller: controller\r\n        });\r\n      };\r\n\r\n      this.$get = function() {};\r\n\r\n    });\r\n\r\n})();\r\n\r\n\r\n","(function () {\r\n  'use strict';\r\n\r\n  angular.module('flexget.services')\r\n    .provider('sideNav', function() {\r\n      var items = [];\r\n\r\n      this.register = function(href, caption, icon, order) {\r\n        href = '/ui/#' + href;\r\n        items.push({href: href, caption: caption, icon: icon, order: order})\r\n      };\r\n\r\n      this.$get = function() {\r\n        return {\r\n          items: items\r\n        }\r\n      };\r\n\r\n    });\r\n\r\n})();\r\n\r\n\r\n","(function () {\r\n  'use strict';\r\n\r\n  angular.module('flexget').directive('pageHeader', function () {\r\n    return {\r\n      restrict: 'AE',\r\n      replace: 'true',\r\n      template: '<section class=\"content-header\"><h1>{{title }}<small>{{ description }}</small></h1></section>'\r\n    };\r\n  });\r\n\r\n})();","(function () {\r\n  'use strict';\r\n\r\n  angular.module('flexget').controller('flexgetController', function ($scope, $http, $mdSidenav, $state, $mdMedia, $mdDialog, sideNav) {\r\n\r\n    $scope.menuItems = sideNav.items;\r\n    $scope.toggleMenu = function () {\r\n      if ($mdSidenav('left').isLockedOpen()) {\r\n        $scope.menuMini = !$scope.menuMini;\r\n      } else {\r\n        $scope.menuMini = false;\r\n        $mdSidenav('left').toggle();\r\n      }\r\n    };\r\n\r\n    $scope.closeNav = function ($event) {\r\n      if (!$mdMedia('gt-lg')) {\r\n        $mdSidenav('left').close();\r\n      }\r\n    };\r\n\r\n    /* Shortcut to go a page (route) */\r\n    $scope.go = function (state) {\r\n      $state.go(state);\r\n    };\r\n\r\n    /* Reload Flexget config file */\r\n    $scope.reload = function () {\r\n      var reloadController = function ($scope, $mdDialog) {\r\n        $scope.title = 'Reload Config';\r\n        $scope.showCircular = true;\r\n        $scope.content = null;\r\n        $scope.buttons = [];\r\n        $scope.ok = null;\r\n\r\n        $scope.hide = function () {\r\n          $mdDialog.hide();\r\n        };\r\n\r\n        var done = function (text) {\r\n          $scope.showCircular = false;\r\n          $scope.content = text;\r\n          $scope.ok = 'Close';\r\n        };\r\n\r\n        $http.get('/api/server/reload/').\r\n          success(function (data, status, headers, config) {\r\n            done('Reload Success');\r\n          }).\r\n          error(function (data, status, headers, config) {\r\n            done('Reload failed: ' + data.error);\r\n          });\r\n      };\r\n\r\n      $mdDialog.show({\r\n        templateUrl: 'static/partials/dialog_circular.html',\r\n        parent: angular.element(document.body),\r\n        controller: reloadController\r\n      });\r\n\r\n    };\r\n\r\n    var doShutdown = function () {\r\n      window.stop(); // Kill any http connection\r\n\r\n      var shutdownController = function ($scope, $mdDialog) {\r\n        $scope.title = 'Shutting Down';\r\n        $scope.showCircular = true;\r\n        $scope.content = null;\r\n        $scope.buttons = [];\r\n        $scope.ok = null;\r\n\r\n        $scope.hide = function () {\r\n          $mdDialog.hide();\r\n        };\r\n\r\n        var done = function (text) {\r\n          $scope.title = 'Shutdown';\r\n          $scope.showCircular = false;\r\n          $scope.content = text;\r\n          $scope.ok = 'Close';\r\n        };\r\n\r\n        $http.get('/api/server/shutdown/').\r\n          success(function (data, status, headers, config) {\r\n            done('Flexget has been shutdown');\r\n          }).\r\n          error(function (data, status, headers, config) {\r\n            done('Flexget failed to shutdown failed: ' + data.error);\r\n          });\r\n      };\r\n      $mdDialog.show({\r\n        templateUrl: 'static/partials/dialog_circular.html',\r\n        parent: angular.element(document.body),\r\n        controller: shutdownController\r\n      });\r\n\r\n    };\r\n\r\n    $scope.shutdown = function () {\r\n      $mdDialog.show(\r\n        $mdDialog.confirm()\r\n          .parent(angular.element(document.body))\r\n          .title('Shutdown')\r\n          .content('Are you sure you want to shutdown Flexget?')\r\n          .ok('Shutdown')\r\n          .cancel('Cancel')\r\n      ).then(function () {\r\n          doShutdown();\r\n        });\r\n\r\n    };\r\n\r\n  });\r\n})();"],"sourceRoot":"/source/"}