language: python

virtualenv:
  system_site_packages: true

sudo: false

env:
  global:
    - FFTW_VERSION="3.3.4"
    - LAL_VERSION="6.15.0"
    - LALFRAME_VERSION="1.3.0"
    - LIBFRAME_VERSION="8.20"
    - LDAS_TOOLS_VERSION="2.4.1"
    - NDS2_CLIENT_VERSION="0.10.4"
    # tarballs
    - FFTW="http://www.fftw.org/fftw-${FFTW_VERSION}.tar.gz"
    - LDAS_TOOLS="http://software.ligo.org/lscsoft/source/ldas-tools-${LDAS_TOOLS_VERSION}.tar.gz"
    - LIBFRAME="http://software.ligo.org/lscsoft/source/libframe-${LIBFRAME_VERSION}.tar.gz"
    - LAL="http://software.ligo.org/lscsoft/source/lalsuite/lal-${LAL_VERSION}.tar.gz"
    - LALFRAME="http://software.ligo.org/lscsoft/source/lalsuite/lalframe-${LALFRAME_VERSION}.tar.gz"
    - NDS2_CLIENT="http://software.ligo.org/lscsoft/source/nds2-client-${NDS2_CLIENT_VERSION}.tar.gz"

addons:
  apt:
    packages:
      # generic packages
      - gcc
      - gfortran
      - python-dev
      - libblas-dev
      - liblapack-dev
      # lal dependencies
      - pkg-config
      - python-all-dev
      - zlib1g-dev
      - libgsl0-dev
      - swig
      - python-numpy
      - python-scipy
      - bc
      # nds2 dependencies
      - libsasl2-2
      # glue dependencies
      - python-m2crypto
      # misc python dependencies
      - texlive-latex-extra
      - libhdf5-serial-dev

before_install:
  # update pip
  - pip install -q --upgrade pip

  # build and install numpy first
  - pip install -q numpy>=1.9.1

  # set paths for PKG_CONFIG
  - export PKG_CONFIG_PATH=${PKG_CONFIG_PATH}:${VIRTUAL_ENV}/lib/pkgconfig

  # build FFTW3 (double and float)
  - source .travis/build-with-autotools.sh fftw-${FFTW_VERSION} ${FFTW} --enable-shared=yes
  - source .travis/build-with-autotools.sh fftw-${FFTW_VERSION}-float ${FFTW} --enable-shared=yes --enable-float

  # build frame libraries
  - source .travis/build-with-autotools.sh ldas-tools-${LDAS_TOOLS_VERSION} ${LDAS_TOOLS}
  - source .travis/build-with-autotools.sh libframe-${LIBFRAME_VERSION} ${LIBFRAME}

  # build LAL packages
  - source .travis/build-with-autotools.sh lal-${LAL_VERSION} ${LAL}
  - source .travis/build-with-autotools.sh lalframe-${LALFRAME_VERSION} ${LALFRAME}

  # build NDS2 client
  - source .travis/build-with-autotools.sh nds2-client-${NDS2_CLIENT_VERSION} ${NDS2_CLIENT} --disable-swig-java --disable-mex-matlab

  # install cython to speed up scipy build
  - travis_retry pip install -q --install-option="--no-cython-compile" Cython

  # install testing dependencies
  - pip install -q coveralls pytest unittest2

install:
  - pip install -r requirements.txt
  - python setup.py build

script:
  - coverage run --source=gwpy --omit="gwpy/tests/*,gwpy/*version*,gwpy/utils/sphinx/*" -m py.test -v gwpy/
  - pip install .

after_success:
  - coveralls

notifications:
  slack:
    secure: jQdoSpwNbUnq0Eo7o6Ko7vuhu58LQdfy8jFKxLUnUjv/GLezK/PPAQCU9SgmyDPh1yD8sb5Xa8UtbNfGtpYdwBAGwZxPHz3oQQAflivFwcF6UP7/NlAB9muSOOnL0QfQyX1I4sIKOkX+gkl+TBciX4v58B8NUU02dDkwDqTLUqQ=

cache:
  apt: true
  directories:
    # cache pip wheels
    - $HOME/.cache/pip
    # cache src builds
    - ./fftw-${FFTW_VERSION}
    - ./fftw-${FFTW_VERSION}-float
    - ./ldas-tools-${LDAS_TOOLS_VERSION}
    - ./libframe-${LIBFRAME_VERSION}
    - ./lal-${LAL_VERSION}
    - ./lalframe-${LALFRAME_VERSION}
    - ./nds2-client-${NDS2_CLIENT_VERSION}
