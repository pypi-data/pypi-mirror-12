version: '{branch}-{build}'
build: off
environment:
  global:
    WITH_COMPILER: 'cmd /E:ON /V:ON /C .\ci\appveyor-with-compiler.cmd'
  matrix:
    - TOXENV: check
      PYTHON_HOME: C:\Python27
      PYTHON_VERSION: '2.7'
      PYTHON_ARCH: '32'
{% for env, config in tox_environments|dictsort %}{% if config.python in ('python2.6', 'python2.7', 'python3.3', 'python3.4', 'python3.5') and not config.cover %}
    - TOXENV: '{{ env }}{% if config.cover %},codecov{% endif %}'
      TOXPYTHON: C:\{{ config.python.replace('.', '') }}\python.exe
      {%- if config.python != 'python3.5' %}

      WINDOWS_SDK_VERSION: v7.{{ '1' if config.python[-1] == '3' else '0' }}
      {%- endif %}

      PYTHON_HOME: C:\{{ config.python.replace('.', '') }}
      PYTHON_VERSION: '{{ config.python[-3:] }}'
      PYTHON_ARCH: '32'
    - TOXENV: '{{ env }}{% if config.cover %},codecov{% endif %}'
      TOXPYTHON: C:\{{ config.python.replace('.', '') }}-x64\python.exe
      {%- if config.python != 'python3.5' %}

      WINDOWS_SDK_VERSION: v7.{{ '1' if config.python[-3] == '3' else '0' }}
      {%- endif %}

      PYTHON_HOME: C:\{{ config.python.replace('.', '') }}-x64
      PYTHON_VERSION: '{{ config.python[-3:] }}'
      PYTHON_ARCH: '64'
{% endif %}{% endfor %}
    - TOXENV: '3.5-buildonly-nocover'
      TOXPYTHON: C:\python35\python.exe
      PYTHON_HOME: C:\python35
      PYTHON_VERSION: '3.5'
      PYTHON_ARCH: '32'
    - TOXENV: '3.5-buildonly-nocover'
      TOXPYTHON: C:\python35-x64\python.exe
      PYTHON_HOME: C:\python35-x64
      PYTHON_VERSION: '3.5'
      PYTHON_ARCH: '64'
init:
  - ps: echo $env:TOXENV
  - ps: ls C:\Python*
install:
  - python -u ci\appveyor-bootstrap.py
  - '%PYTHON_HOME%\Scripts\virtualenv --version'
  - '%PYTHON_HOME%\Scripts\easy_install --version'
  - '%PYTHON_HOME%\Scripts\pip --version'
  - '%PYTHON_HOME%\Scripts\tox --version'
test_script:
  - '%WITH_COMPILER% %PYTHON_HOME%\Scripts\tox'

after_test:
  - IF "%TOXENV:~-8,8%" == "-nocover" %WITH_COMPILER% %TOXPYTHON% setup.py bdist_wheel

on_failure:
  - ps: dir "env:"
  - ps: get-content .tox\*\log\*
artifacts:
  - path: dist\*
matrix:
  allow_failures:
    - TOXENV: 'check'
    - TOXENV: '3.3-np1.8-nocover'
    - TOXENV: '3.3-np1.8,codecov'
    - TOXENV: '3.4-np1.8-nocover'
    - TOXENV: '3.4-np1.8,codecov'
    - TOXENV: '3.5-np1.8-nocover'
    - TOXENV: '3.5-np1.8,codecov'
    - TOXENV: '3.5-np1.9-nocover'
    - TOXENV: '3.5-np1.9,codecov'
    - TOXENV: '3.5-np1.10-nocover'
    - TOXENV: '3.5-np1.10,codecov'
### To enable remote debugging uncomment this:
#  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

